ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 6.0
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2020, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  75:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_6_REV            (6u)
  76:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_9_REV            (9u)
  77:Generated_Source\PSoC4/CyLib.c ****     #define CYSFLASH_CRI_testpgm_rev_MASK   (0x0000003Fu)
  78:Generated_Source\PSoC4/CyLib.c **** 
  79:Generated_Source\PSoC4/CyLib.c ****     /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  80:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  81:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void);
  84:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void);
  85:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  86:Generated_Source\PSoC4/CyLib.c **** 
  87:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  94:Generated_Source\PSoC4/CyLib.c **** *
  95:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4500 / PSoC Analog
  98:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in
  99:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 100:Generated_Source\PSoC4/CyLib.c **** *
 101:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
 102:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 105:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 106:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 106 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 107:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 107 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** 
 116:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 117:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 118:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 119:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 120:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 121:Generated_Source\PSoC4/CyLib.c **** 
 122:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 122 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 08010B40 		.word	1074462984
  47              		.cfi_endproc
  48              	.LFE2:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 4


  50              		.section	.text.CySysClkImoStop,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoStop
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoStop, %function
  56              	CySysClkImoStop:
  57              	.LFB3:
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 126:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 127:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S /
 132:Generated_Source\PSoC4/CyLib.c **** * PSoC 4500 / PSoC Analog Coprocessor devices, this function will also
 133:Generated_Source\PSoC4/CyLib.c **** * disable WCO lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 138:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 139:Generated_Source\PSoC4/CyLib.c **** {
  58              		.loc 1 139 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 141:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 143:Generated_Source\PSoC4/CyLib.c **** 
 144:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 145:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 146:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 147:Generated_Source\PSoC4/CyLib.c **** 
 148:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  63              		.loc 1 148 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1368     		ldr	r3, [r2]
  66 0004 5B00     		lsls	r3, r3, #1
  67 0006 5B08     		lsrs	r3, r3, #1
  68 0008 1360     		str	r3, [r2]
 149:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 149 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 08010B40 		.word	1074462984
  76              		.cfi_endproc
  77              	.LFE3:
  78              		.size	CySysClkImoStop, .-CySysClkImoStop
  79              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 5


  80              		.align	2
  81              		.global	CySysClkWriteHfclkDirect
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysClkWriteHfclkDirect, %function
  85              	CySysClkWriteHfclkDirect:
  86              	.LFB4:
 150:Generated_Source\PSoC4/CyLib.c **** 
 151:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 154:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 155:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 156:Generated_Source\PSoC4/CyLib.c ****     *
 157:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 158:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 159:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 160:Generated_Source\PSoC4/CyLib.c ****     *
 161:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 162:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 163:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 164:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 165:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 166:Generated_Source\PSoC4/CyLib.c ****     *
 167:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 168:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 169:Generated_Source\PSoC4/CyLib.c ****     *
 170:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 171:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 172:Generated_Source\PSoC4/CyLib.c ****     *
 173:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 174:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 175:Generated_Source\PSoC4/CyLib.c ****     {
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 177:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 178:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 179:Generated_Source\PSoC4/CyLib.c **** 
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 181:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 184:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 185:Generated_Source\PSoC4/CyLib.c **** 
 186:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 187:Generated_Source\PSoC4/CyLib.c ****         {
 188:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 189:Generated_Source\PSoC4/CyLib.c **** 
 190:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 191:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 192:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 193:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 194:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 195:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 196:Generated_Source\PSoC4/CyLib.c **** 
 197:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 198:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 199:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 6


 200:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 202:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 204:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 205:Generated_Source\PSoC4/CyLib.c ****                         break;
 206:Generated_Source\PSoC4/CyLib.c ****                     }
 207:Generated_Source\PSoC4/CyLib.c ****                 }
 208:Generated_Source\PSoC4/CyLib.c ****             #else
 209:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 210:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 211:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 215:Generated_Source\PSoC4/CyLib.c ****                 #else
 216:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 217:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 218:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c ****                      CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IM
 229:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 245:Generated_Source\PSoC4/CyLib.c **** 
 246:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 247:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 248:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 253:Generated_Source\PSoC4/CyLib.c ****             {
 254:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 255:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 256:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 7


 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 261:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 264:Generated_Source\PSoC4/CyLib.c **** 
 265:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 266:Generated_Source\PSoC4/CyLib.c ****         }
 267:Generated_Source\PSoC4/CyLib.c ****     }
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c **** 
 270:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 271:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 272:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 277:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 280:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 283:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 284:Generated_Source\PSoC4/CyLib.c ****     {
 285:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 286:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 287:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 288:Generated_Source\PSoC4/CyLib.c **** 
 289:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 292:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 294:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 295:Generated_Source\PSoC4/CyLib.c ****             {
 296:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 297:Generated_Source\PSoC4/CyLib.c ****                 {
 298:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 299:Generated_Source\PSoC4/CyLib.c ****                     break;
 300:Generated_Source\PSoC4/CyLib.c ****                 }
 301:Generated_Source\PSoC4/CyLib.c ****             }
 302:Generated_Source\PSoC4/CyLib.c ****         #else
 303:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 304:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 305:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 306:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 307:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) &
 308:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 309:Generated_Source\PSoC4/CyLib.c ****             #else
 310:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 311:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 312:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 313:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 8


 314:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 319:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 320:Generated_Source\PSoC4/CyLib.c ****         #else
 321:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 322:Generated_Source\PSoC4/CyLib.c ****         #endif
 323:Generated_Source\PSoC4/CyLib.c ****     }
 324:Generated_Source\PSoC4/CyLib.c **** 
 325:Generated_Source\PSoC4/CyLib.c **** 
 326:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 327:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 328:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 331:Generated_Source\PSoC4/CyLib.c ****     *
 332:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 333:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 334:Generated_Source\PSoC4/CyLib.c ****     *
 335:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 336:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 337:Generated_Source\PSoC4/CyLib.c ****     *
 338:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 339:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 340:Generated_Source\PSoC4/CyLib.c ****     {
 341:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 342:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 343:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 344:Generated_Source\PSoC4/CyLib.c ****     }
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 347:Generated_Source\PSoC4/CyLib.c **** 
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 350:Generated_Source\PSoC4/CyLib.c **** 
 351:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 353:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/CyLib.c ****     *
 355:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 360:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 363:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 364:Generated_Source\PSoC4/CyLib.c ****     *
 365:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 366:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 367:Generated_Source\PSoC4/CyLib.c ****     {
 368:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 369:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 370:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 9


 371:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 372:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 375:Generated_Source\PSoC4/CyLib.c **** 
 376:Generated_Source\PSoC4/CyLib.c ****             /* Save trims to restore in CySysClkImoDisableUsbLock() */
 377:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 378:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 379:Generated_Source\PSoC4/CyLib.c **** 
 380:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetImoTrims();
 381:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetPwrBgTrim5();
 382:Generated_Source\PSoC4/CyLib.c **** 
 383:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 384:Generated_Source\PSoC4/CyLib.c **** 
 385:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 386:Generated_Source\PSoC4/CyLib.c ****     }
 387:Generated_Source\PSoC4/CyLib.c **** 
 388:Generated_Source\PSoC4/CyLib.c **** 
 389:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 390:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 391:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 392:Generated_Source\PSoC4/CyLib.c ****     *
 393:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 394:Generated_Source\PSoC4/CyLib.c ****     *
 395:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 396:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 397:Generated_Source\PSoC4/CyLib.c ****     *
 398:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 399:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 400:Generated_Source\PSoC4/CyLib.c ****     *
 401:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 403:Generated_Source\PSoC4/CyLib.c ****     {
 404:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 405:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 408:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 409:Generated_Source\PSoC4/CyLib.c **** 
 410:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 411:Generated_Source\PSoC4/CyLib.c ****             {
 412:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 413:Generated_Source\PSoC4/CyLib.c ****                 {
 414:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 415:Generated_Source\PSoC4/CyLib.c ****                     break;
 416:Generated_Source\PSoC4/CyLib.c ****                 }
 417:Generated_Source\PSoC4/CyLib.c ****             }
 418:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 419:Generated_Source\PSoC4/CyLib.c **** 
 420:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 421:Generated_Source\PSoC4/CyLib.c **** 
 422:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 423:Generated_Source\PSoC4/CyLib.c ****             /* Restore IMO trim registers saved by CySysClkImoEnableUsbLock() */
 424:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 425:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 426:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 427:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 10


 428:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 431:Generated_Source\PSoC4/CyLib.c ****     }
 432:Generated_Source\PSoC4/CyLib.c **** 
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 435:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 436:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 437:Generated_Source\PSoC4/CyLib.c ****     *
 438:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 439:Generated_Source\PSoC4/CyLib.c ****     *
 440:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 441:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 442:Generated_Source\PSoC4/CyLib.c ****     *
 443:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 444:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 445:Generated_Source\PSoC4/CyLib.c ****     *
 446:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 447:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 448:Generated_Source\PSoC4/CyLib.c ****     {
 449:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 450:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 451:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 452:Generated_Source\PSoC4/CyLib.c ****     }
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2)
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetPwrBgTrim5
 458:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 459:Generated_Source\PSoC4/CyLib.c ****     *
 460:Generated_Source\PSoC4/CyLib.c ****     * Updates Bandgap trim register based on the test program revision.
 461:Generated_Source\PSoC4/CyLib.c ****     *
 462:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void)
 464:Generated_Source\PSoC4/CyLib.c ****     {
 465:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 466:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 467:Generated_Source\PSoC4/CyLib.c ****                             CYSFLASH_CRI_testpgm_rev_MASK);
 468:Generated_Source\PSoC4/CyLib.c **** 
 469:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_9_REV)
 470:Generated_Source\PSoC4/CyLib.c ****         {
 471:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_IMO_TMPCO0_REG;
 472:Generated_Source\PSoC4/CyLib.c ****         }
 473:Generated_Source\PSoC4/CyLib.c ****         else
 474:Generated_Source\PSoC4/CyLib.c ****         {
 475:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 476:Generated_Source\PSoC4/CyLib.c ****         }
 477:Generated_Source\PSoC4/CyLib.c ****     }
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 480:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetImoTrims
 481:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 482:Generated_Source\PSoC4/CyLib.c ****     *
 483:Generated_Source\PSoC4/CyLib.c ****     * Updates IMO trim registers based on the IMO frequency and test program
 484:Generated_Source\PSoC4/CyLib.c ****     * revision.
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 11


 485:Generated_Source\PSoC4/CyLib.c ****     *
 486:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 487:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void)
 488:Generated_Source\PSoC4/CyLib.c ****     {
 489:Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 490:Generated_Source\PSoC4/CyLib.c **** 
 491:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 492:Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 493:Generated_Source\PSoC4/CyLib.c **** 
 494:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 495:Generated_Source\PSoC4/CyLib.c ****         {
 496:Generated_Source\PSoC4/CyLib.c ****             if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreqMhz2
 497:Generated_Source\PSoC4/CyLib.c ****             {
 498:Generated_Source\PSoC4/CyLib.c ****                 freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 499:Generated_Source\PSoC4/CyLib.c ****                 break;
 500:Generated_Source\PSoC4/CyLib.c ****             }
 501:Generated_Source\PSoC4/CyLib.c ****         }
 502:Generated_Source\PSoC4/CyLib.c **** 
 503:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 504:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 505:Generated_Source\PSoC4/CyLib.c ****             CYSFLASH_CRI_testpgm_rev_MASK);
 506:Generated_Source\PSoC4/CyLib.c **** 
 507:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_6_REV)
 508:Generated_Source\PSoC4/CyLib.c ****         {
 509:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 510:Generated_Source\PSoC4/CyLib.c ****             {
 511:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 512:Generated_Source\PSoC4/CyLib.c ****             }
 513:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 514:Generated_Source\PSoC4/CyLib.c ****             {
 515:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 516:Generated_Source\PSoC4/CyLib.c ****             }
 517:Generated_Source\PSoC4/CyLib.c ****             else
 518:Generated_Source\PSoC4/CyLib.c ****             {
 519:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 520:Generated_Source\PSoC4/CyLib.c ****             }
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 523:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 524:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 525:Generated_Source\PSoC4/CyLib.c ****         }
 526:Generated_Source\PSoC4/CyLib.c ****         else
 527:Generated_Source\PSoC4/CyLib.c ****         {
 528:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 529:Generated_Source\PSoC4/CyLib.c ****             {
 530:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG;
 531:Generated_Source\PSoC4/CyLib.c ****             }
 532:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 533:Generated_Source\PSoC4/CyLib.c ****             {
 534:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG;
 535:Generated_Source\PSoC4/CyLib.c ****             }
 536:Generated_Source\PSoC4/CyLib.c ****             else
 537:Generated_Source\PSoC4/CyLib.c ****             {
 538:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 539:Generated_Source\PSoC4/CyLib.c ****             }
 540:Generated_Source\PSoC4/CyLib.c **** 
 541:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 12


 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 543:Generated_Source\PSoC4/CyLib.c ****                                         CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 544:Generated_Source\PSoC4/CyLib.c ****         }
 545:Generated_Source\PSoC4/CyLib.c ****     }
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSV2) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** 
 551:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 552:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 553:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 554:Generated_Source\PSoC4/CyLib.c **** *
 555:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 556:Generated_Source\PSoC4/CyLib.c **** *
 557:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 558:Generated_Source\PSoC4/CyLib.c **** *
 559:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 560:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 561:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 562:Generated_Source\PSoC4/CyLib.c **** *
 563:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 564:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 565:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 566:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 567:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 568:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 569:Generated_Source\PSoC4/CyLib.c **** *
 570:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 571:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 574:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 575:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 577:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 578:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with ECO.
 579:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 580:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with PLL.
 581:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 582:Generated_Source\PSoC4/CyLib.c **** *
 583:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 585:Generated_Source\PSoC4/CyLib.c **** {
  87              		.loc 1 585 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL0:
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 587:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 588:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 13


 589:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 590:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  97              		.loc 1 593 0
  98 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  99              	.LVL1:
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 596:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 597:Generated_Source\PSoC4/CyLib.c ****     {
 598:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 599:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 600:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */
 603:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 604:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 606:Generated_Source\PSoC4/CyLib.c **** 
 607:Generated_Source\PSoC4/CyLib.c ****         /* Check if ECO is enabled and running */
 608:Generated_Source\PSoC4/CyLib.c ****         if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
 609:Generated_Source\PSoC4/CyLib.c ****             (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
 610:Generated_Source\PSoC4/CyLib.c ****         {
 611:Generated_Source\PSoC4/CyLib.c ****             /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 612:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 613:Generated_Source\PSoC4/CyLib.c **** 
 614:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 615:Generated_Source\PSoC4/CyLib.c ****             {
 616:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 617:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 618:Generated_Source\PSoC4/CyLib.c ****             }
 619:Generated_Source\PSoC4/CyLib.c **** 
 620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 621:Generated_Source\PSoC4/CyLib.c ****         }
 622:Generated_Source\PSoC4/CyLib.c ****     }
 623:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 624:Generated_Source\PSoC4/CyLib.c **** 
 625:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 100              		.loc 1 625 0
 101 0008 044A     		ldr	r2, .L8
 102 000a 1368     		ldr	r3, [r2]
 103 000c 0721     		movs	r1, #7
 104 000e 8B43     		bics	r3, r1
 105              	.LVL2:
 626:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 629:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 630:Generated_Source\PSoC4/CyLib.c ****     {
 631:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 632:Generated_Source\PSoC4/CyLib.c ****     }
 633:Generated_Source\PSoC4/CyLib.c ****     else
 634:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 635:Generated_Source\PSoC4/CyLib.c ****     {
 636:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 14


 106              		.loc 1 636 0
 107 0010 0C40     		ands	r4, r1
 108              	.LVL3:
 109 0012 1C43     		orrs	r4, r3
 110              	.LVL4:
 637:Generated_Source\PSoC4/CyLib.c ****     }
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 111              		.loc 1 639 0
 112 0014 1460     		str	r4, [r2]
 640:Generated_Source\PSoC4/CyLib.c **** 
 641:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 113              		.loc 1 641 0
 114 0016 FFF7FEFF 		bl	CyExitCriticalSection
 115              	.LVL5:
 642:Generated_Source\PSoC4/CyLib.c **** }
 116              		.loc 1 642 0
 117              		@ sp needed
 118              	.LVL6:
 119 001a 10BD     		pop	{r4, pc}
 120              	.L9:
 121              		.align	2
 122              	.L8:
 123 001c 00010B40 		.word	1074462976
 124              		.cfi_endproc
 125              	.LFE4:
 126              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 127              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 128              		.align	2
 129              		.global	CySysEnablePumpClock
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysEnablePumpClock, %function
 133              	CySysEnablePumpClock:
 134              	.LFB5:
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c **** 
 645:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 647:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 648:Generated_Source\PSoC4/CyLib.c **** *
 649:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 650:Generated_Source\PSoC4/CyLib.c **** *
 651:Generated_Source\PSoC4/CyLib.c **** * \param enable
 652:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 653:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of
 654:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 657:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation
 658:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 659:Generated_Source\PSoC4/CyLib.c **** *
 660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 662:Generated_Source\PSoC4/CyLib.c **** {
 135              		.loc 1 662 0
 136              		.cfi_startproc
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 15


 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL7:
 663:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 664:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 141              		.loc 1 664 0
 142 0000 C307     		lsls	r3, r0, #31
 143 0002 07D5     		bpl	.L11
 665:Generated_Source\PSoC4/CyLib.c ****         {
 666:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 144              		.loc 1 666 0
 145 0004 094A     		ldr	r2, .L13
 146 0006 1168     		ldr	r1, [r2]
 147 0008 094B     		ldr	r3, .L13+4
 148 000a 1B68     		ldr	r3, [r3]
 149 000c 5B06     		lsls	r3, r3, #25
 150 000e 0B43     		orrs	r3, r1
 151 0010 1360     		str	r3, [r2]
 152 0012 0AE0     		b	.L10
 153              	.L11:
 667:Generated_Source\PSoC4/CyLib.c ****         }
 668:Generated_Source\PSoC4/CyLib.c ****         else
 669:Generated_Source\PSoC4/CyLib.c ****         {
 670:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 154              		.loc 1 670 0
 155 0014 054A     		ldr	r2, .L13
 156 0016 1368     		ldr	r3, [r2]
 157 0018 5B0E     		lsrs	r3, r3, #25
 158 001a 0721     		movs	r1, #7
 159 001c 0B40     		ands	r3, r1
 160 001e 0449     		ldr	r1, .L13+4
 161 0020 0B60     		str	r3, [r1]
 671:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 162              		.loc 1 672 0
 163 0022 1168     		ldr	r1, [r2]
 164 0024 034B     		ldr	r3, .L13+8
 165 0026 0B40     		ands	r3, r1
 166 0028 1360     		str	r3, [r2]
 167              	.L10:
 673:Generated_Source\PSoC4/CyLib.c ****         }
 674:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 675:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 676:Generated_Source\PSoC4/CyLib.c ****         {
 677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 678:Generated_Source\PSoC4/CyLib.c ****         }
 679:Generated_Source\PSoC4/CyLib.c ****         else
 680:Generated_Source\PSoC4/CyLib.c ****         {
 681:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) &
 682:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 683:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 684:Generated_Source\PSoC4/CyLib.c ****         }
 685:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 686:Generated_Source\PSoC4/CyLib.c **** }
 168              		.loc 1 686 0
 169              		@ sp needed
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 16


 170 002a 7047     		bx	lr
 171              	.L14:
 172              		.align	2
 173              	.L13:
 174 002c 08010B40 		.word	1074462984
 175 0030 00000000 		.word	.LANCHOR0
 176 0034 FFFFFFF1 		.word	-234881025
 177              		.cfi_endproc
 178              	.LFE5:
 179              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 180              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 181              		.align	2
 182              		.global	CySysClkGetSysclkSource
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysClkGetSysclkSource, %function
 186              	CySysClkGetSysclkSource:
 187              	.LFB6:
 687:Generated_Source\PSoC4/CyLib.c **** 
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 690:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 691:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 692:Generated_Source\PSoC4/CyLib.c **** *
 693:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 694:Generated_Source\PSoC4/CyLib.c **** *
 695:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 696:Generated_Source\PSoC4/CyLib.c **** *
 697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 699:Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 699 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 700:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 701:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 702:Generated_Source\PSoC4/CyLib.c **** 
 703:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 196              		.loc 1 703 0
 197 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 198              	.LVL8:
 704:Generated_Source\PSoC4/CyLib.c **** 
 705:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 706:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 707:Generated_Source\PSoC4/CyLib.c ****     {
 708:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 709:Generated_Source\PSoC4/CyLib.c ****     }
 710:Generated_Source\PSoC4/CyLib.c ****     else
 711:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 712:Generated_Source\PSoC4/CyLib.c ****     {
 713:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 199              		.loc 1 713 0
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 17


 200 0006 044B     		ldr	r3, .L16
 201 0008 1B68     		ldr	r3, [r3]
 202 000a 0724     		movs	r4, #7
 203 000c 1C40     		ands	r4, r3
 204              	.LVL9:
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 716:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 717:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 718:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     }
 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 205              		.loc 1 722 0
 206 000e FFF7FEFF 		bl	CyExitCriticalSection
 207              	.LVL10:
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 725:Generated_Source\PSoC4/CyLib.c **** }
 208              		.loc 1 725 0
 209 0012 2000     		movs	r0, r4
 210              		@ sp needed
 211              	.LVL11:
 212 0014 10BD     		pop	{r4, pc}
 213              	.L17:
 214 0016 C046     		.align	2
 215              	.L16:
 216 0018 00010B40 		.word	1074462976
 217              		.cfi_endproc
 218              	.LFE6:
 219              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 220              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 221              		.align	2
 222              		.global	CySysClkWriteSysclkDiv
 223              		.code	16
 224              		.thumb_func
 225              		.type	CySysClkWriteSysclkDiv, %function
 226              	CySysClkWriteSysclkDiv:
 227              	.LFB7:
 726:Generated_Source\PSoC4/CyLib.c **** 
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 729:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 730:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 731:Generated_Source\PSoC4/CyLib.c **** *
 732:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 735:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 738:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 739:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 742:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 18


 743:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 744:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 745:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 746:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 747:Generated_Source\PSoC4/CyLib.c **** *
 748:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 749:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 750:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 751:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 752:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 753:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 754:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 755:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 756:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 757:Generated_Source\PSoC4/CyLib.c **** *
 758:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 759:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 760:Generated_Source\PSoC4/CyLib.c **** {
 228              		.loc 1 760 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL12:
 233 0000 10B5     		push	{r4, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 237 0002 0400     		movs	r4, r0
 761:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 238              		.loc 1 763 0
 239 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 240              	.LVL13:
 764:Generated_Source\PSoC4/CyLib.c **** 
 765:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 241              		.loc 1 765 0
 242 0008 E304     		lsls	r3, r4, #19
 243 000a E022     		movs	r2, #224
 244 000c 9203     		lsls	r2, r2, #14
 245 000e 1340     		ands	r3, r2
 246 0010 1900     		movs	r1, r3
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 767:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 247              		.loc 1 767 0
 248 0012 054C     		ldr	r4, .L19
 249              	.LVL14:
 250 0014 2368     		ldr	r3, [r4]
 251 0016 054A     		ldr	r2, .L19+4
 252 0018 1A40     		ands	r2, r3
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 253              		.loc 1 766 0
 254 001a 0B00     		movs	r3, r1
 255 001c 1343     		orrs	r3, r2
 765:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 256              		.loc 1 765 0
 257 001e 2360     		str	r3, [r4]
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 19


 768:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 769:Generated_Source\PSoC4/CyLib.c **** 
 770:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 258              		.loc 1 770 0
 259 0020 FFF7FEFF 		bl	CyExitCriticalSection
 260              	.LVL15:
 771:Generated_Source\PSoC4/CyLib.c **** }
 261              		.loc 1 771 0
 262              		@ sp needed
 263 0024 10BD     		pop	{r4, pc}
 264              	.L20:
 265 0026 C046     		.align	2
 266              	.L19:
 267 0028 00010B40 		.word	1074462976
 268 002c FFFFC7FF 		.word	-3670017
 269              		.cfi_endproc
 270              	.LFE7:
 271              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 272              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 273              		.align	2
 274              		.global	CySysClkWriteImoFreq
 275              		.code	16
 276              		.thumb_func
 277              		.type	CySysClkWriteImoFreq, %function
 278              	CySysClkWriteImoFreq:
 279              	.LFB8:
 772:Generated_Source\PSoC4/CyLib.c **** 
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 775:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 776:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 777:Generated_Source\PSoC4/CyLib.c **** *
 778:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 779:Generated_Source\PSoC4/CyLib.c **** *
 780:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 781:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 782:Generated_Source\PSoC4/CyLib.c **** *
 783:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 784:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 785:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 786:Generated_Source\PSoC4/CyLib.c **** *
 787:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 788:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 789:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 790:Generated_Source\PSoC4/CyLib.c **** *
 791:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 792:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 793:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 794:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 795:Generated_Source\PSoC4/CyLib.c **** *
 796:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 797:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 798:Generated_Source\PSoC4/CyLib.c **** *
 799:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 800:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 801:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 802:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 20


 803:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 804:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 805:Generated_Source\PSoC4/CyLib.c **** *
 806:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 807:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 808:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 809:Generated_Source\PSoC4/CyLib.c **** *
 810:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 811:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 812:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with
 813:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 814:Generated_Source\PSoC4/CyLib.c **** *
 815:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 816:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 817:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 818:Generated_Source\PSoC4/CyLib.c ****     {
 280              		.loc 1 818 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 24
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              	.LVL16:
 285 0000 10B5     		push	{r4, lr}
 286              		.cfi_def_cfa_offset 8
 287              		.cfi_offset 4, -8
 288              		.cfi_offset 14, -4
 289 0002 86B0     		sub	sp, sp, #24
 290              		.cfi_def_cfa_offset 32
 291 0004 0400     		movs	r4, r0
 819:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 820:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 821:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 822:Generated_Source\PSoC4/CyLib.c ****         #else
 823:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 824:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 825:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 826:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 827:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 830:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 831:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 836:Generated_Source\PSoC4/CyLib.c **** 
 837:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 838:Generated_Source\PSoC4/CyLib.c **** 
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 292              		.loc 1 840 0
 293 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 294              	.LVL17:
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 843:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 844:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 21


 845:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 846:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 847:Generated_Source\PSoC4/CyLib.c ****             }
 848:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 849:Generated_Source\PSoC4/CyLib.c **** 
 850:Generated_Source\PSoC4/CyLib.c **** 
 851:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 857:Generated_Source\PSoC4/CyLib.c **** 
 858:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 859:Generated_Source\PSoC4/CyLib.c ****                 {
 860:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 861:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 862:Generated_Source\PSoC4/CyLib.c ****                 }
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 865:Generated_Source\PSoC4/CyLib.c ****                 }
 866:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 872:Generated_Source\PSoC4/CyLib.c **** 
 873:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 295              		.loc 1 874 0
 296 000a 0E4B     		ldr	r3, .L22
 297 000c 1B68     		ldr	r3, [r3]
 298 000e 0093     		str	r3, [sp]
 875:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 299              		.loc 1 875 0
 300 0010 0D4B     		ldr	r3, .L22+4
 301 0012 1B68     		ldr	r3, [r3]
 302 0014 0193     		str	r3, [sp, #4]
 876:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 303              		.loc 1 876 0
 304 0016 033C     		subs	r4, r4, #3
 305              	.LVL18:
 306 0018 0C4B     		ldr	r3, .L22+8
 307 001a 1B5D     		ldrb	r3, [r3, r4]
 308 001c 0293     		str	r3, [sp, #8]
 877:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 309              		.loc 1 877 0
 310 001e 0C4B     		ldr	r3, .L22+12
 311 0020 1B68     		ldr	r3, [r3]
 312 0022 0393     		str	r3, [sp, #12]
 878:Generated_Source\PSoC4/CyLib.c **** 
 879:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 313              		.loc 1 879 0
 314 0024 04AA     		add	r2, sp, #16
 315 0026 0B4B     		ldr	r3, .L22+16
 316 0028 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 22


 880:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 881:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 882:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 317              		.loc 1 882 0
 318 002a 6B46     		mov	r3, sp
 319 002c 0593     		str	r3, [sp, #20]
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 320              		.loc 1 884 0
 321 002e 0A4B     		ldr	r3, .L22+20
 322 0030 1A60     		str	r2, [r3]
 885:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 323              		.loc 1 885 0
 324 0032 0A49     		ldr	r1, .L22+24
 325 0034 0A4A     		ldr	r2, .L22+28
 326 0036 1160     		str	r1, [r2]
 886:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 327              		.loc 1 886 0
 328 0038 1B68     		ldr	r3, [r3]
 887:Generated_Source\PSoC4/CyLib.c **** 
 888:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 889:Generated_Source\PSoC4/CyLib.c **** 
 890:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 891:Generated_Source\PSoC4/CyLib.c ****         {
 892:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 895:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 896:Generated_Source\PSoC4/CyLib.c ****             }
 897:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 898:Generated_Source\PSoC4/CyLib.c ****             {
 899:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 900:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 901:Generated_Source\PSoC4/CyLib.c ****             }
 902:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 903:Generated_Source\PSoC4/CyLib.c ****             {
 904:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 905:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 906:Generated_Source\PSoC4/CyLib.c ****             }
 907:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 908:Generated_Source\PSoC4/CyLib.c ****             {
 909:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 910:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c ****             else
 913:Generated_Source\PSoC4/CyLib.c ****             {
 914:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 915:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 916:Generated_Source\PSoC4/CyLib.c ****             }
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 919:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c **** 
 922:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 923:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 924:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 23


 925:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 926:Generated_Source\PSoC4/CyLib.c ****             *
 927:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 928:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 929:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 930:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 931:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 932:Generated_Source\PSoC4/CyLib.c ****             {
 933:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 934:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 935:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 936:Generated_Source\PSoC4/CyLib.c **** 
 937:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 938:Generated_Source\PSoC4/CyLib.c **** 
 939:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 940:Generated_Source\PSoC4/CyLib.c ****             }
 941:Generated_Source\PSoC4/CyLib.c ****             else
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c **** 
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 948:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 949:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 950:Generated_Source\PSoC4/CyLib.c ****             *
 951:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 952:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 953:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 954:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 955:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 956:Generated_Source\PSoC4/CyLib.c ****             {
 957:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 958:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 959:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 960:Generated_Source\PSoC4/CyLib.c ****             }
 961:Generated_Source\PSoC4/CyLib.c **** 
 962:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 963:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 964:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 965:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 966:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 967:Generated_Source\PSoC4/CyLib.c **** 
 968:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 969:Generated_Source\PSoC4/CyLib.c ****             {
 970:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 971:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 972:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 973:Generated_Source\PSoC4/CyLib.c ****             }
 974:Generated_Source\PSoC4/CyLib.c ****         }
 975:Generated_Source\PSoC4/CyLib.c ****         else
 976:Generated_Source\PSoC4/CyLib.c ****         {
 977:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 978:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 979:Generated_Source\PSoC4/CyLib.c ****         }
 980:Generated_Source\PSoC4/CyLib.c **** 
 981:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 24


 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 984:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 985:Generated_Source\PSoC4/CyLib.c ****             {
 986:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 987:Generated_Source\PSoC4/CyLib.c ****             }
 988:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 989:Generated_Source\PSoC4/CyLib.c **** 
 990:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 991:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 992:Generated_Source\PSoC4/CyLib.c ****             {
 993:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 994:Generated_Source\PSoC4/CyLib.c ****             }
 995:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 329              		.loc 1 997 0
 330 003a FFF7FEFF 		bl	CyExitCriticalSection
 331              	.LVL19:
 998:Generated_Source\PSoC4/CyLib.c ****     }
 332              		.loc 1 998 0
 333 003e 06B0     		add	sp, sp, #24
 334              		@ sp needed
 335              	.LVL20:
 336 0040 10BD     		pop	{r4, pc}
 337              	.L23:
 338 0042 C046     		.align	2
 339              	.L22:
 340 0044 08010B40 		.word	1074462984
 341 0048 00010B40 		.word	1074462976
 342 004c 00000000 		.word	.LANCHOR1
 343 0050 30001040 		.word	1074790448
 344 0054 B6EA0000 		.word	60086
 345 0058 08001040 		.word	1074790408
 346 005c 17000080 		.word	-2147483625
 347 0060 04001040 		.word	1074790404
 348              		.cfi_endproc
 349              	.LFE8:
 350              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 351              		.section	.text.CySysClkEcoStop,"ax",%progbits
 352              		.align	2
 353              		.global	CySysClkEcoStop
 354              		.code	16
 355              		.thumb_func
 356              		.type	CySysClkEcoStop, %function
 357              	CySysClkEcoStop:
 358              	.LFB10:
 999:Generated_Source\PSoC4/CyLib.c **** 
1000:Generated_Source\PSoC4/CyLib.c **** #else
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
1003:Generated_Source\PSoC4/CyLib.c ****     {
1004:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1005:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
1006:Generated_Source\PSoC4/CyLib.c **** 
1007:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1008:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 25


1009:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1012:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
1013:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1014:Generated_Source\PSoC4/CyLib.c **** 
1015:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
1016:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
1017:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
1018:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
1019:Generated_Source\PSoC4/CyLib.c ****         #else
1020:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
1022:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
1023:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
1024:Generated_Source\PSoC4/CyLib.c ****         {
1025:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1026:Generated_Source\PSoC4/CyLib.c **** 
1027:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1028:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
1029:Generated_Source\PSoC4/CyLib.c ****                 {
1030:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
1031:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
1032:Generated_Source\PSoC4/CyLib.c ****                 }
1033:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1038:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
1039:Generated_Source\PSoC4/CyLib.c ****                     {
1040:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
1043:Generated_Source\PSoC4/CyLib.c ****                     {
1044:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
1045:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
1046:Generated_Source\PSoC4/CyLib.c ****                     }
1047:Generated_Source\PSoC4/CyLib.c **** 
1048:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1049:Generated_Source\PSoC4/CyLib.c ****                     }
1050:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1053:Generated_Source\PSoC4/CyLib.c **** 
1054:Generated_Source\PSoC4/CyLib.c **** 
1055:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1056:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1057:Generated_Source\PSoC4/CyLib.c **** 
1058:Generated_Source\PSoC4/CyLib.c **** 
1059:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1060:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1061:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1062:Generated_Source\PSoC4/CyLib.c ****                 {
1063:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1064:Generated_Source\PSoC4/CyLib.c ****                 }
1065:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 26


1066:Generated_Source\PSoC4/CyLib.c ****                 {
1067:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1068:Generated_Source\PSoC4/CyLib.c ****                 }
1069:Generated_Source\PSoC4/CyLib.c ****                 else
1070:Generated_Source\PSoC4/CyLib.c ****                 {
1071:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1072:Generated_Source\PSoC4/CyLib.c ****                 }
1073:Generated_Source\PSoC4/CyLib.c ****             #else
1074:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1075:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1076:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1079:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1080:Generated_Source\PSoC4/CyLib.c **** 
1081:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1082:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1083:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1086:Generated_Source\PSoC4/CyLib.c **** 
1087:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1088:Generated_Source\PSoC4/CyLib.c ****             {
1089:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1090:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1091:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1092:Generated_Source\PSoC4/CyLib.c **** 
1093:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1094:Generated_Source\PSoC4/CyLib.c **** 
1095:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1096:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1097:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1098:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1099:Generated_Source\PSoC4/CyLib.c ****             }
1100:Generated_Source\PSoC4/CyLib.c **** 
1101:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1102:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1103:Generated_Source\PSoC4/CyLib.c ****                 {
1104:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1105:Generated_Source\PSoC4/CyLib.c ****                 }
1106:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1107:Generated_Source\PSoC4/CyLib.c **** 
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1110:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1111:Generated_Source\PSoC4/CyLib.c ****                 {
1112:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1113:Generated_Source\PSoC4/CyLib.c ****                 }
1114:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1115:Generated_Source\PSoC4/CyLib.c **** 
1116:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1117:Generated_Source\PSoC4/CyLib.c ****         }
1118:Generated_Source\PSoC4/CyLib.c ****         else
1119:Generated_Source\PSoC4/CyLib.c ****         {
1120:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1121:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1122:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 27


1123:Generated_Source\PSoC4/CyLib.c ****     }
1124:Generated_Source\PSoC4/CyLib.c **** 
1125:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1126:Generated_Source\PSoC4/CyLib.c **** 
1127:Generated_Source\PSoC4/CyLib.c **** 
1128:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1129:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1130:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1131:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1132:Generated_Source\PSoC4/CyLib.c ****     *
1133:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1134:Generated_Source\PSoC4/CyLib.c ****     *
1135:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1136:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1137:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1138:Generated_Source\PSoC4/CyLib.c ****     *
1139:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1140:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1141:Generated_Source\PSoC4/CyLib.c ****     *
1142:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1143:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1144:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1145:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1146:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1147:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1150:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1151:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1152:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1153:Generated_Source\PSoC4/CyLib.c ****     *
1154:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1155:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1156:Generated_Source\PSoC4/CyLib.c ****     {
1157:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1160:Generated_Source\PSoC4/CyLib.c **** 
1161:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1162:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1163:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1164:Generated_Source\PSoC4/CyLib.c **** 
1165:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1166:Generated_Source\PSoC4/CyLib.c ****     }
1167:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1168:Generated_Source\PSoC4/CyLib.c **** 
1169:Generated_Source\PSoC4/CyLib.c **** 
1170:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1175:Generated_Source\PSoC4/CyLib.c ****     *
1176:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1177:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1178:Generated_Source\PSoC4/CyLib.c ****     *
1179:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 28


1180:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1181:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1182:Generated_Source\PSoC4/CyLib.c ****     * called.
1183:Generated_Source\PSoC4/CyLib.c ****     *
1184:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1185:Generated_Source\PSoC4/CyLib.c ****     *
1186:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1187:Generated_Source\PSoC4/CyLib.c ****     *
1188:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1189:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1192:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1195:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1196:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1197:Generated_Source\PSoC4/CyLib.c ****     *
1198:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1201:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1202:Generated_Source\PSoC4/CyLib.c ****     {
1203:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1204:Generated_Source\PSoC4/CyLib.c **** 
1205:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1206:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1207:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1210:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1213:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1216:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1217:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1218:Generated_Source\PSoC4/CyLib.c **** 
1219:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1220:Generated_Source\PSoC4/CyLib.c ****             {
1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1222:Generated_Source\PSoC4/CyLib.c ****             }
1223:Generated_Source\PSoC4/CyLib.c ****             else
1224:Generated_Source\PSoC4/CyLib.c ****             {
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1227:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1228:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1229:Generated_Source\PSoC4/CyLib.c **** 
1230:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1231:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1232:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1233:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1235:Generated_Source\PSoC4/CyLib.c **** 
1236:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 29


1237:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1238:Generated_Source\PSoC4/CyLib.c ****                 {
1239:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1240:Generated_Source\PSoC4/CyLib.c ****                 }
1241:Generated_Source\PSoC4/CyLib.c **** 
1242:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1243:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1244:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1245:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1246:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1247:Generated_Source\PSoC4/CyLib.c **** 
1248:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1249:Generated_Source\PSoC4/CyLib.c ****                 {
1250:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1251:Generated_Source\PSoC4/CyLib.c ****                 }
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1254:Generated_Source\PSoC4/CyLib.c ****                 {
1255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1256:Generated_Source\PSoC4/CyLib.c ****                 }
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1259:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1260:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1261:Generated_Source\PSoC4/CyLib.c **** 
1262:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1263:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1264:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1265:Generated_Source\PSoC4/CyLib.c ****                 #else
1266:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1267:Generated_Source\PSoC4/CyLib.c ****                 #endif
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1270:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1271:Generated_Source\PSoC4/CyLib.c ****                 {
1272:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c **** 
1275:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1276:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD |
1277:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1278:Generated_Source\PSoC4/CyLib.c **** 
1279:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1280:Generated_Source\PSoC4/CyLib.c ****                 {
1281:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1282:Generated_Source\PSoC4/CyLib.c ****                 }
1283:Generated_Source\PSoC4/CyLib.c **** 
1284:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1285:Generated_Source\PSoC4/CyLib.c **** 
1286:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1287:Generated_Source\PSoC4/CyLib.c **** 
1288:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1289:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1290:Generated_Source\PSoC4/CyLib.c **** 
1291:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1292:Generated_Source\PSoC4/CyLib.c ****                 {
1293:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 30


1294:Generated_Source\PSoC4/CyLib.c ****                 }
1295:Generated_Source\PSoC4/CyLib.c **** 
1296:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1297:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1300:Generated_Source\PSoC4/CyLib.c ****                 {
1301:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1302:Generated_Source\PSoC4/CyLib.c ****                 }
1303:Generated_Source\PSoC4/CyLib.c **** 
1304:Generated_Source\PSoC4/CyLib.c ****             }
1305:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1306:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1307:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1308:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
1309:Generated_Source\PSoC4/CyLib.c ****                 CySysClkPllClearPendingInterrupt(CY_SYS_PLL_INTR_WD_ERR);
1310:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_ECOV2_SRSSLT) */
1311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1312:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1313:Generated_Source\PSoC4/CyLib.c **** 
1314:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1315:Generated_Source\PSoC4/CyLib.c ****         {
1316:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1319:Generated_Source\PSoC4/CyLib.c ****             {
1320:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1321:Generated_Source\PSoC4/CyLib.c **** 
1322:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1323:Generated_Source\PSoC4/CyLib.c ****                 {
1324:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1325:Generated_Source\PSoC4/CyLib.c ****                     break;
1326:Generated_Source\PSoC4/CyLib.c ****                 }
1327:Generated_Source\PSoC4/CyLib.c ****             }
1328:Generated_Source\PSoC4/CyLib.c **** 
1329:Generated_Source\PSoC4/CyLib.c ****         }
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1332:Generated_Source\PSoC4/CyLib.c ****     }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c **** 
1335:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1336:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1337:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1338:Generated_Source\PSoC4/CyLib.c ****     *
1339:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1340:Generated_Source\PSoC4/CyLib.c ****     *
1341:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1342:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1343:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1344:Generated_Source\PSoC4/CyLib.c ****     *
1345:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1346:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1347:Generated_Source\PSoC4/CyLib.c ****     {
 359              		.loc 1 1347 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 31


 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
1348:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1349:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1350:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 364              		.loc 1 1350 0
 365 0000 054A     		ldr	r2, .L25
 366 0002 1368     		ldr	r3, [r2]
 367 0004 0121     		movs	r1, #1
 368 0006 8B43     		bics	r3, r1
 369 0008 1360     		str	r3, [r2]
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1353:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 370              		.loc 1 1353 0
 371 000a 044A     		ldr	r2, .L25+4
 372 000c 1168     		ldr	r1, [r2]
 373 000e 044B     		ldr	r3, .L25+8
 374 0010 0B40     		ands	r3, r1
 375 0012 1360     		str	r3, [r2]
1354:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1355:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1356:Generated_Source\PSoC4/CyLib.c ****         #else
1357:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1359:Generated_Source\PSoC4/CyLib.c ****     }
 376              		.loc 1 1359 0
 377              		@ sp needed
 378 0014 7047     		bx	lr
 379              	.L26:
 380 0016 C046     		.align	2
 381              	.L25:
 382 0018 60F02E40 		.word	1076818016
 383 001c 10002E40 		.word	1076756496
 384 0020 FF7FFFFF 		.word	-32769
 385              		.cfi_endproc
 386              	.LFE10:
 387              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 388              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 389              		.align	2
 390              		.global	CySysClkEcoReadStatus
 391              		.code	16
 392              		.thumb_func
 393              		.type	CySysClkEcoReadStatus, %function
 394              	CySysClkEcoReadStatus:
 395              	.LFB11:
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1363:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1364:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1365:Generated_Source\PSoC4/CyLib.c ****     *
1366:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1367:Generated_Source\PSoC4/CyLib.c ****     *
1368:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1369:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1370:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 32


1371:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S / 4500 with ECO devices, the error status bit is
1372:Generated_Source\PSoC4/CyLib.c ****     * the WATCHDOG_ERROR bit in ECO_STATUS register.
1373:Generated_Source\PSoC4/CyLib.c ****     *
1374:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1375:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1376:Generated_Source\PSoC4/CyLib.c ****     *
1377:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S / 4500 with ECO: Non-zero indicates that ECO
1378:Generated_Source\PSoC4/CyLib.c ****     * is running.
1379:Generated_Source\PSoC4/CyLib.c ****     *
1380:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1381:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1382:Generated_Source\PSoC4/CyLib.c ****     {
 396              		.loc 1 1382 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              		@ link register save eliminated.
1383:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1386:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 401              		.loc 1 1386 0
 402 0000 024B     		ldr	r3, .L28
 403 0002 1B68     		ldr	r3, [r3]
 404 0004 0120     		movs	r0, #1
 405 0006 1840     		ands	r0, r3
 406              	.LVL21:
1387:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1388:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) ||
1391:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1392:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1393:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1394:Generated_Source\PSoC4/CyLib.c ****         #else
1395:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1396:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1399:Generated_Source\PSoC4/CyLib.c ****     }
 407              		.loc 1 1399 0
 408              		@ sp needed
 409 0008 7047     		bx	lr
 410              	.L29:
 411 000a C046     		.align	2
 412              	.L28:
 413 000c 0C002E40 		.word	1076756492
 414              		.cfi_endproc
 415              	.LFE11:
 416              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 417              		.section	.text.CySysLvdDisable,"ax",%progbits
 418              		.align	2
 419              		.global	CySysLvdDisable
 420              		.code	16
 421              		.thumb_func
 422              		.type	CySysLvdDisable, %function
 423              	CySysLvdDisable:
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 33


 424              	.LFB14:
1400:Generated_Source\PSoC4/CyLib.c **** 
1401:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1402:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1403:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1404:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1409:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1410:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1411:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1412:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1415:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1416:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1417:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1418:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1419:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1428:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1429:Generated_Source\PSoC4/CyLib.c ****         {
1430:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1431:Generated_Source\PSoC4/CyLib.c **** 
1432:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1433:Generated_Source\PSoC4/CyLib.c ****             {
1434:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1435:Generated_Source\PSoC4/CyLib.c **** 
1436:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1437:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1438:Generated_Source\PSoC4/CyLib.c **** 
1439:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1440:Generated_Source\PSoC4/CyLib.c ****             }
1441:Generated_Source\PSoC4/CyLib.c ****             else
1442:Generated_Source\PSoC4/CyLib.c ****             {
1443:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1444:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1445:Generated_Source\PSoC4/CyLib.c ****             }
1446:Generated_Source\PSoC4/CyLib.c ****         }
1447:Generated_Source\PSoC4/CyLib.c **** 
1448:Generated_Source\PSoC4/CyLib.c ****     #else
1449:Generated_Source\PSoC4/CyLib.c **** 
1450:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1451:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1452:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1453:Generated_Source\PSoC4/CyLib.c ****         *
1454:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1455:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S /4500 with ECO devices only.
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 34


1456:Generated_Source\PSoC4/CyLib.c ****         *
1457:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1458:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1459:Generated_Source\PSoC4/CyLib.c ****         *
1460:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1461:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1462:Generated_Source\PSoC4/CyLib.c ****         *
1463:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1464:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1465:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1466:Generated_Source\PSoC4/CyLib.c ****         *
1467:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1468:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1471:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1472:Generated_Source\PSoC4/CyLib.c ****         *
1473:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1474:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1475:Generated_Source\PSoC4/CyLib.c ****         *
1476:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1477:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1478:Generated_Source\PSoC4/CyLib.c ****         *
1479:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1480:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1481:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1482:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1483:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1484:Generated_Source\PSoC4/CyLib.c ****         *
1485:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1486:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1487:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1488:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1489:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1490:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1491:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1492:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1493:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1494:Generated_Source\PSoC4/CyLib.c ****         *
1495:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1496:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1497:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1498:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1499:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1500:Generated_Source\PSoC4/CyLib.c ****         *
1501:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1502:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1503:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1504:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1505:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1506:Generated_Source\PSoC4/CyLib.c ****         *
1507:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1508:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1509:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1510:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1511:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1512:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 35


1513:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1514:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1515:Generated_Source\PSoC4/CyLib.c ****         *
1516:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1517:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1518:Generated_Source\PSoC4/CyLib.c ****         {
1519:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1521:Generated_Source\PSoC4/CyLib.c **** 
1522:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1525:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1526:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1527:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1528:Generated_Source\PSoC4/CyLib.c **** 
1529:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1530:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1531:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1532:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1533:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1534:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1535:Generated_Source\PSoC4/CyLib.c **** 
1536:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1537:Generated_Source\PSoC4/CyLib.c **** 
1538:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1539:Generated_Source\PSoC4/CyLib.c ****         }
1540:Generated_Source\PSoC4/CyLib.c **** 
1541:Generated_Source\PSoC4/CyLib.c **** 
1542:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1543:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1544:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1545:Generated_Source\PSoC4/CyLib.c ****         *
1546:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1547:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1548:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1549:Generated_Source\PSoC4/CyLib.c ****         *
1550:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S / 4500 with ECO
1551:Generated_Source\PSoC4/CyLib.c ****         * devices only.
1552:Generated_Source\PSoC4/CyLib.c ****         *
1553:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1554:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1555:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1556:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1557:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1558:Generated_Source\PSoC4/CyLib.c ****         *
1559:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1560:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1561:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1562:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1563:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1564:Generated_Source\PSoC4/CyLib.c ****         *
1565:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1566:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1567:Generated_Source\PSoC4/CyLib.c ****         *
1568:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1569:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 36


1570:Generated_Source\PSoC4/CyLib.c ****         {
1571:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1574:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1575:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1576:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1577:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c **** 
1582:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1583:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1584:Generated_Source\PSoC4/CyLib.c ****             {
1585:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1586:Generated_Source\PSoC4/CyLib.c ****             }
1587:Generated_Source\PSoC4/CyLib.c ****             else
1588:Generated_Source\PSoC4/CyLib.c ****             {
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1595:Generated_Source\PSoC4/CyLib.c ****                 }
1596:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1599:Generated_Source\PSoC4/CyLib.c ****                 }
1600:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1601:Generated_Source\PSoC4/CyLib.c ****                 {
1602:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1603:Generated_Source\PSoC4/CyLib.c ****                 }
1604:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1605:Generated_Source\PSoC4/CyLib.c ****                 {
1606:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1609:Generated_Source\PSoC4/CyLib.c ****                 {
1610:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1611:Generated_Source\PSoC4/CyLib.c ****                 }
1612:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1613:Generated_Source\PSoC4/CyLib.c ****                 {
1614:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1615:Generated_Source\PSoC4/CyLib.c ****                 }
1616:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1617:Generated_Source\PSoC4/CyLib.c ****                 {
1618:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1619:Generated_Source\PSoC4/CyLib.c ****                 }
1620:Generated_Source\PSoC4/CyLib.c ****                 else
1621:Generated_Source\PSoC4/CyLib.c ****                 {
1622:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1623:Generated_Source\PSoC4/CyLib.c ****                 }
1624:Generated_Source\PSoC4/CyLib.c **** 
1625:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1626:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 37


1627:Generated_Source\PSoC4/CyLib.c **** 
1628:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1629:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1630:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1631:Generated_Source\PSoC4/CyLib.c ****                 {
1632:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1633:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1634:Generated_Source\PSoC4/CyLib.c ****                 }
1635:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1636:Generated_Source\PSoC4/CyLib.c ****                 {
1637:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1638:Generated_Source\PSoC4/CyLib.c ****                 }
1639:Generated_Source\PSoC4/CyLib.c ****                 else
1640:Generated_Source\PSoC4/CyLib.c ****                 {
1641:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1642:Generated_Source\PSoC4/CyLib.c ****                 }
1643:Generated_Source\PSoC4/CyLib.c **** 
1644:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1645:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1646:Generated_Source\PSoC4/CyLib.c ****                 {
1647:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1648:Generated_Source\PSoC4/CyLib.c ****                 }
1649:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1650:Generated_Source\PSoC4/CyLib.c ****                 {
1651:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1652:Generated_Source\PSoC4/CyLib.c ****                 }
1653:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1654:Generated_Source\PSoC4/CyLib.c ****                 {
1655:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1656:Generated_Source\PSoC4/CyLib.c ****                 }
1657:Generated_Source\PSoC4/CyLib.c ****                 else
1658:Generated_Source\PSoC4/CyLib.c ****                 {
1659:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1660:Generated_Source\PSoC4/CyLib.c ****                 }
1661:Generated_Source\PSoC4/CyLib.c **** 
1662:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1663:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1664:Generated_Source\PSoC4/CyLib.c **** 
1665:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1668:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1669:Generated_Source\PSoC4/CyLib.c ****                 {
1670:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1671:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1672:Generated_Source\PSoC4/CyLib.c ****                 }
1673:Generated_Source\PSoC4/CyLib.c ****                 else
1674:Generated_Source\PSoC4/CyLib.c ****                 {
1675:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1676:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1677:Generated_Source\PSoC4/CyLib.c ****                     */
1678:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1679:Generated_Source\PSoC4/CyLib.c ****                 }
1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c **** 
1682:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1683:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 38


1684:Generated_Source\PSoC4/CyLib.c **** 
1685:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
1695:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1696:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1697:Generated_Source\PSoC4/CyLib.c ****     *
1698:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1699:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1704:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1705:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1706:Generated_Source\PSoC4/CyLib.c ****     *
1707:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1708:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1709:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1710:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1713:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1714:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1715:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1716:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1717:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1718:Generated_Source\PSoC4/CyLib.c ****     *
1719:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1720:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1721:Generated_Source\PSoC4/CyLib.c ****     {
1722:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1723:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1724:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1727:Generated_Source\PSoC4/CyLib.c ****         {
1728:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1731:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1732:Generated_Source\PSoC4/CyLib.c **** 
1733:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1734:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1735:Generated_Source\PSoC4/CyLib.c **** 
1736:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1737:Generated_Source\PSoC4/CyLib.c **** 
1738:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1739:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1740:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 39


1741:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1742:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1743:Generated_Source\PSoC4/CyLib.c **** 
1744:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1745:Generated_Source\PSoC4/CyLib.c ****             {
1746:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1749:Generated_Source\PSoC4/CyLib.c ****                 {
1750:Generated_Source\PSoC4/CyLib.c **** 
1751:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1752:Generated_Source\PSoC4/CyLib.c ****                     {
1753:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1754:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1755:Generated_Source\PSoC4/CyLib.c ****                         break;
1756:Generated_Source\PSoC4/CyLib.c ****                     }
1757:Generated_Source\PSoC4/CyLib.c **** 
1758:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1759:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1760:Generated_Source\PSoC4/CyLib.c ****                 }
1761:Generated_Source\PSoC4/CyLib.c ****             }
1762:Generated_Source\PSoC4/CyLib.c ****         }
1763:Generated_Source\PSoC4/CyLib.c ****         else
1764:Generated_Source\PSoC4/CyLib.c ****         {
1765:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1766:Generated_Source\PSoC4/CyLib.c ****         }
1767:Generated_Source\PSoC4/CyLib.c **** 
1768:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1769:Generated_Source\PSoC4/CyLib.c ****     }
1770:Generated_Source\PSoC4/CyLib.c **** 
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1773:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1774:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1775:Generated_Source\PSoC4/CyLib.c ****     *
1776:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1777:Generated_Source\PSoC4/CyLib.c ****     *
1778:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1781:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1782:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1783:Generated_Source\PSoC4/CyLib.c ****     *
1784:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1787:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1788:Generated_Source\PSoC4/CyLib.c ****     {
1789:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1790:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1791:Generated_Source\PSoC4/CyLib.c **** 
1792:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1793:Generated_Source\PSoC4/CyLib.c **** 
1794:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1797:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 40


1798:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1799:Generated_Source\PSoC4/CyLib.c ****         {
1800:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1801:Generated_Source\PSoC4/CyLib.c ****         }
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1809:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1810:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1811:Generated_Source\PSoC4/CyLib.c ****     *
1812:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1813:Generated_Source\PSoC4/CyLib.c ****     *
1814:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1815:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1816:Generated_Source\PSoC4/CyLib.c ****     *
1817:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1818:Generated_Source\PSoC4/CyLib.c ****     *
1819:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1820:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1821:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1822:Generated_Source\PSoC4/CyLib.c ****     *
1823:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1824:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1825:Generated_Source\PSoC4/CyLib.c ****     {
1826:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1827:Generated_Source\PSoC4/CyLib.c **** 
1828:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1829:Generated_Source\PSoC4/CyLib.c ****         {
1830:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1831:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1832:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1833:Generated_Source\PSoC4/CyLib.c ****         }
1834:Generated_Source\PSoC4/CyLib.c ****     }
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c **** 
1837:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1838:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1839:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1842:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1843:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1844:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1847:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1850:Generated_Source\PSoC4/CyLib.c ****     *
1851:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1854:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 41


1855:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1856:Generated_Source\PSoC4/CyLib.c ****     * divider.
1857:Generated_Source\PSoC4/CyLib.c ****     *
1858:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1861:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1862:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1865:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1866:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1867:Generated_Source\PSoC4/CyLib.c ****     *
1868:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1869:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1870:Generated_Source\PSoC4/CyLib.c ****     {
1871:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1872:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1873:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1874:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1877:Generated_Source\PSoC4/CyLib.c **** 
1878:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1881:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1882:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1883:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1884:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1885:Generated_Source\PSoC4/CyLib.c ****         {
1886:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1887:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1888:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1889:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1890:Generated_Source\PSoC4/CyLib.c **** 
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1893:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1894:Generated_Source\PSoC4/CyLib.c **** 
1895:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1896:Generated_Source\PSoC4/CyLib.c **** 
1897:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1898:Generated_Source\PSoC4/CyLib.c ****         }
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1903:Generated_Source\PSoC4/CyLib.c ****     }
1904:Generated_Source\PSoC4/CyLib.c **** 
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1911:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 42


1912:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1913:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may
1916:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from
1917:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of
1918:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 swith PLL devices.
1921:Generated_Source\PSoC4/CyLib.c ****     *
1922:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1923:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1924:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1925:Generated_Source\PSoC4/CyLib.c ****     *
1926:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1927:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1928:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1929:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1930:Generated_Source\PSoC4/CyLib.c ****     *
1931:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1932:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1933:Generated_Source\PSoC4/CyLib.c ****     *
1934:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1935:Generated_Source\PSoC4/CyLib.c ****     *
1936:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1938:Generated_Source\PSoC4/CyLib.c ****     {
1939:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1940:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1941:Generated_Source\PSoC4/CyLib.c **** 
1942:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1943:Generated_Source\PSoC4/CyLib.c **** 
1944:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1945:Generated_Source\PSoC4/CyLib.c ****         {
1946:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1947:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1948:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1949:Generated_Source\PSoC4/CyLib.c ****         }
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1952:Generated_Source\PSoC4/CyLib.c ****     }
1953:Generated_Source\PSoC4/CyLib.c **** 
1954:Generated_Source\PSoC4/CyLib.c **** 
1955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1958:Generated_Source\PSoC4/CyLib.c ****     *
1959:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1960:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1961:Generated_Source\PSoC4/CyLib.c ****     *
1962:Generated_Source\PSoC4/CyLib.c ****     *  \return bypass: Bypass mode.
1963:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1964:Generated_Source\PSoC4/CyLib.c ****     *
1965:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1966:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1967:Generated_Source\PSoC4/CyLib.c ****     {
1968:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 43


1969:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1976:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1981:Generated_Source\PSoC4/CyLib.c ****     }
1982:Generated_Source\PSoC4/CyLib.c **** 
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1985:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1986:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1989:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1990:Generated_Source\PSoC4/CyLib.c ****     *
1991:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1992:Generated_Source\PSoC4/CyLib.c ****     *
1993:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1994:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1995:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1996:Generated_Source\PSoC4/CyLib.c ****     *
1997:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1998:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2001:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
2002:Generated_Source\PSoC4/CyLib.c ****     {
2003:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
2004:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
2005:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
2008:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
2009:Generated_Source\PSoC4/CyLib.c **** 
2010:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
2011:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
2012:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
2013:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
2014:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
2015:Generated_Source\PSoC4/CyLib.c ****             )
2016:Generated_Source\PSoC4/CyLib.c ****         {
2017:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
2018:Generated_Source\PSoC4/CyLib.c ****         }
2019:Generated_Source\PSoC4/CyLib.c **** 
2020:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
2021:Generated_Source\PSoC4/CyLib.c ****     }
2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c **** 
2024:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2025:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 44


2026:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
2029:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
2030:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
2031:Generated_Source\PSoC4/CyLib.c ****     *  this API.
2032:Generated_Source\PSoC4/CyLib.c ****     *
2033:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2034:Generated_Source\PSoC4/CyLib.c ****     *
2035:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2036:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2037:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2042:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
2043:Generated_Source\PSoC4/CyLib.c ****     {
2044:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
2045:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2046:Generated_Source\PSoC4/CyLib.c **** 
2047:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2048:Generated_Source\PSoC4/CyLib.c **** 
2049:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
2050:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2055:Generated_Source\PSoC4/CyLib.c ****     }
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2059:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2060:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2061:Generated_Source\PSoC4/CyLib.c ****     *
2062:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2063:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2064:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2065:Generated_Source\PSoC4/CyLib.c ****     *
2066:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2067:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2068:Generated_Source\PSoC4/CyLib.c ****     *
2069:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2070:Generated_Source\PSoC4/CyLib.c ****     *
2071:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2072:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2073:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2074:Generated_Source\PSoC4/CyLib.c ****     *
2075:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2076:Generated_Source\PSoC4/CyLib.c ****     *
2077:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2078:Generated_Source\PSoC4/CyLib.c ****     *
2079:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2080:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2081:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2082:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 45


2083:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2084:Generated_Source\PSoC4/CyLib.c ****     *
2085:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2086:Generated_Source\PSoC4/CyLib.c ****     *
2087:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2088:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2089:Generated_Source\PSoC4/CyLib.c ****     *
2090:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2091:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2094:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2095:Generated_Source\PSoC4/CyLib.c ****     {
2096:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2097:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2098:Generated_Source\PSoC4/CyLib.c **** 
2099:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2100:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2103:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2104:Generated_Source\PSoC4/CyLib.c **** 
2105:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2106:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2107:Generated_Source\PSoC4/CyLib.c **** 
2108:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2109:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2115:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2116:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2117:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2118:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2119:Generated_Source\PSoC4/CyLib.c ****         {
2120:Generated_Source\PSoC4/CyLib.c **** 
2121:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2122:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2123:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2126:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2127:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2128:Generated_Source\PSoC4/CyLib.c **** 
2129:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2130:Generated_Source\PSoC4/CyLib.c ****             {
2131:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2132:Generated_Source\PSoC4/CyLib.c ****                 {
2133:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2134:Generated_Source\PSoC4/CyLib.c **** 
2135:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2136:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2137:Generated_Source\PSoC4/CyLib.c **** 
2138:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2139:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 46


2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2142:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2143:Generated_Source\PSoC4/CyLib.c **** 
2144:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2145:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2146:Generated_Source\PSoC4/CyLib.c ****                     {
2147:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2148:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2149:Generated_Source\PSoC4/CyLib.c ****                         break;
2150:Generated_Source\PSoC4/CyLib.c ****                     }
2151:Generated_Source\PSoC4/CyLib.c ****                 }
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2155:Generated_Source\PSoC4/CyLib.c ****                 {
2156:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2157:Generated_Source\PSoC4/CyLib.c ****                     {
2158:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2159:Generated_Source\PSoC4/CyLib.c ****                     }
2160:Generated_Source\PSoC4/CyLib.c ****                 }
2161:Generated_Source\PSoC4/CyLib.c ****             }
2162:Generated_Source\PSoC4/CyLib.c **** 
2163:Generated_Source\PSoC4/CyLib.c ****         }
2164:Generated_Source\PSoC4/CyLib.c **** 
2165:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2166:Generated_Source\PSoC4/CyLib.c ****     }
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2169:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2170:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2171:Generated_Source\PSoC4/CyLib.c ****     *
2172:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2173:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S /4500 with PLL devices.
2176:Generated_Source\PSoC4/CyLib.c ****     *
2177:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2178:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2179:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2182:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2183:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L
2184:Generated_Source\PSoC4/CyLib.c ****     *  and PSoC 4500 with PLL devices)
2185:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2186:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2187:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2188:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2189:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2193:Generated_Source\PSoC4/CyLib.c ****     {
2194:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 47


2197:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2198:Generated_Source\PSoC4/CyLib.c ****         #else
2199:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
2200:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2205:Generated_Source\PSoC4/CyLib.c ****         {
2206:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2207:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2208:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2210:Generated_Source\PSoC4/CyLib.c ****             #else
2211:Generated_Source\PSoC4/CyLib.c ****                 CY_SET_REG32_FIELD(CYREG_EXCO_CLK_SELECT, CYFLD_EXCO_REF_SEL, source);
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c ****                 /* Check if ECO is enabled and running */
2214:Generated_Source\PSoC4/CyLib.c ****                 if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
2215:Generated_Source\PSoC4/CyLib.c ****                     (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
2216:Generated_Source\PSoC4/CyLib.c ****                 {
2217:Generated_Source\PSoC4/CyLib.c ****                     /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG 
2218:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****                     for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2221:Generated_Source\PSoC4/CyLib.c ****                     {
2222:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2223:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2224:Generated_Source\PSoC4/CyLib.c ****                     }
2225:Generated_Source\PSoC4/CyLib.c **** 
2226:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2227:Generated_Source\PSoC4/CyLib.c ****                 }
2228:Generated_Source\PSoC4/CyLib.c **** 
2229:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2230:Generated_Source\PSoC4/CyLib.c ****         }
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2233:Generated_Source\PSoC4/CyLib.c ****     }
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** 
2236:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2237:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2238:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2239:Generated_Source\PSoC4/CyLib.c ****     *
2240:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2241:Generated_Source\PSoC4/CyLib.c ****     *
2242:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2243:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2246:Generated_Source\PSoC4/CyLib.c ****     *
2247:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2248:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2249:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2250:Generated_Source\PSoC4/CyLib.c ****     *
2251:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2252:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2253:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 48


2254:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2255:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2256:Generated_Source\PSoC4/CyLib.c ****     *
2257:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2258:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2259:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2260:Generated_Source\PSoC4/CyLib.c ****     *
2261:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2262:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2263:Generated_Source\PSoC4/CyLib.c ****     {
2264:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2265:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2266:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2267:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2268:Generated_Source\PSoC4/CyLib.c **** 
2269:Generated_Source\PSoC4/CyLib.c **** 
2270:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2271:Generated_Source\PSoC4/CyLib.c **** 
2272:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2273:Generated_Source\PSoC4/CyLib.c **** 
2274:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2275:Generated_Source\PSoC4/CyLib.c ****         {
2276:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2277:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2282:Generated_Source\PSoC4/CyLib.c ****         }
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2287:Generated_Source\PSoC4/CyLib.c ****     }
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c **** 
2290:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECOV2_SRSSLT)
2291:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2292:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCauseMasked
2293:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2294:Generated_Source\PSoC4/CyLib.c ****         *
2295:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects a bit-wise AND between interrupt
2296:Generated_Source\PSoC4/CyLib.c ****         *  request and mask registers. The API allows firmware to read the status of
2297:Generated_Source\PSoC4/CyLib.c ****         *  all mask enabled interrupt causes with a single load operation.
2298:Generated_Source\PSoC4/CyLib.c ****         *
2299:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2300:Generated_Source\PSoC4/CyLib.c ****         *
2301:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2302:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2303:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2304:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2305:Generated_Source\PSoC4/CyLib.c ****         *
2306:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2307:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCauseMasked(void)
2308:Generated_Source\PSoC4/CyLib.c ****         {
2309:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASKED));
2310:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 49


2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2314:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCause
2315:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c ****         *
2317:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects the interrupt request registers.
2318:Generated_Source\PSoC4/CyLib.c ****         *
2319:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2320:Generated_Source\PSoC4/CyLib.c ****         *
2321:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2322:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2323:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2324:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2325:Generated_Source\PSoC4/CyLib.c ****         *
2326:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2327:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCause(void)
2328:Generated_Source\PSoC4/CyLib.c ****         {
2329:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR));
2330:Generated_Source\PSoC4/CyLib.c ****         }
2331:Generated_Source\PSoC4/CyLib.c **** 
2332:Generated_Source\PSoC4/CyLib.c **** 
2333:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2334:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllClearPendingInterrupt
2335:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2336:Generated_Source\PSoC4/CyLib.c ****         *
2337:Generated_Source\PSoC4/CyLib.c ****         *  Clears the pending interrupt.
2338:Generated_Source\PSoC4/CyLib.c ****         *
2339:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2340:Generated_Source\PSoC4/CyLib.c ****         *
2341:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2342:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2343:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2344:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2345:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2346:Generated_Source\PSoC4/CyLib.c ****         *
2347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllClearPendingInterrupt(uint32 interrupt)
2349:Generated_Source\PSoC4/CyLib.c ****         {
2350:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR, interrupt);
2351:Generated_Source\PSoC4/CyLib.c ****         }
2352:Generated_Source\PSoC4/CyLib.c **** 
2353:Generated_Source\PSoC4/CyLib.c **** 
2354:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2355:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterruptMask
2356:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2357:Generated_Source\PSoC4/CyLib.c ****         *
2358:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the interrupt mask bit for the corresponding interrupts.
2359:Generated_Source\PSoC4/CyLib.c ****         *
2360:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2361:Generated_Source\PSoC4/CyLib.c ****         *
2362:Generated_Source\PSoC4/CyLib.c ****         * \param intrMask:
2363:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2364:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2365:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2366:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2367:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 50


2368:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2369:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterruptMask(uint32 intrMask)
2370:Generated_Source\PSoC4/CyLib.c ****         {
2371:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_MASK, intrMask);
2372:Generated_Source\PSoC4/CyLib.c ****         }
2373:Generated_Source\PSoC4/CyLib.c **** 
2374:Generated_Source\PSoC4/CyLib.c **** 
2375:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2376:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptMask
2377:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2378:Generated_Source\PSoC4/CyLib.c ****         *
2379:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the current interrupt mask register value.
2380:Generated_Source\PSoC4/CyLib.c ****         *
2381:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2382:Generated_Source\PSoC4/CyLib.c ****         *
2383:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2384:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2385:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2386:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2387:Generated_Source\PSoC4/CyLib.c ****         *
2388:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2389:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptMask(void)
2390:Generated_Source\PSoC4/CyLib.c ****         {
2391:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASK));
2392:Generated_Source\PSoC4/CyLib.c ****         }
2393:Generated_Source\PSoC4/CyLib.c **** 
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2396:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterrupt
2397:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2398:Generated_Source\PSoC4/CyLib.c ****         *
2399:Generated_Source\PSoC4/CyLib.c ****         *  This API asserts an interrupt. This can be used for firmware debugging.
2400:Generated_Source\PSoC4/CyLib.c ****         *
2401:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2402:Generated_Source\PSoC4/CyLib.c ****         *
2403:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2404:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2405:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2406:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2407:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2408:Generated_Source\PSoC4/CyLib.c ****         *
2409:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterrupt(uint32 interrupt)
2411:Generated_Source\PSoC4/CyLib.c ****         {
2412:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_SET, interrupt);
2413:Generated_Source\PSoC4/CyLib.c ****         }
2414:Generated_Source\PSoC4/CyLib.c **** 
2415:Generated_Source\PSoC4/CyLib.c **** 
2416:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2417:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnable
2418:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2419:Generated_Source\PSoC4/CyLib.c ****         *
2420:Generated_Source\PSoC4/CyLib.c ****         * This API enables clock supervision on PLL frequency lock and loss.
2421:Generated_Source\PSoC4/CyLib.c ****         *
2422:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2423:Generated_Source\PSoC4/CyLib.c ****         *
2424:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 51


2425:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnable(void)
2426:Generated_Source\PSoC4/CyLib.c ****         {
2427:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN, 0x1uL);
2428:Generated_Source\PSoC4/CyLib.c ****         }
2429:Generated_Source\PSoC4/CyLib.c **** 
2430:Generated_Source\PSoC4/CyLib.c **** 
2431:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2432:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisable
2433:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2434:Generated_Source\PSoC4/CyLib.c ****         *
2435:Generated_Source\PSoC4/CyLib.c ****         * This API disables clock supervision on PLL.
2436:Generated_Source\PSoC4/CyLib.c ****         *
2437:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2438:Generated_Source\PSoC4/CyLib.c ****         *
2439:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2440:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisable(void)
2441:Generated_Source\PSoC4/CyLib.c ****         {
2442:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN);
2443:Generated_Source\PSoC4/CyLib.c ****         }
2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** 
2446:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2447:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetSpvrCtl
2448:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2449:Generated_Source\PSoC4/CyLib.c ****         *
2450:Generated_Source\PSoC4/CyLib.c ****         *  This API enables sets the clock supervision parameters.
2451:Generated_Source\PSoC4/CyLib.c ****         *
2452:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2453:Generated_Source\PSoC4/CyLib.c ****         *
2454:Generated_Source\PSoC4/CyLib.c ****         * \param startupDelay:
2455:Generated_Source\PSoC4/CyLib.c ****         *  startup delay time -1 in reference clock cycles after enable
2456:Generated_Source\PSoC4/CyLib.c ****         *  or deep sleep wake up from reference clock start to monitored clock start
2457:Generated_Source\PSoC4/CyLib.c ****         *
2458:Generated_Source\PSoC4/CyLib.c ****         * \param csvSwitch:
2459:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_INT_EN – Enable INTR.CSV_CLK_SW if a clock switch occurs to IMO
2460:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_TRIG_EN – Enable CSV to cause trigger if a clock switch occurs to IMO
2461:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_CLK_SW_EN – Enable CSV to cause clock switch IMO (enabled by default in 
2462:Generated_Source\PSoC4/CyLib.c ****         *
2463:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2464:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetSpvrCtl(uint32 startupDelay, uint32 csvSwitch)
2465:Generated_Source\PSoC4/CyLib.c ****         {
2466:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_CTL);
2467:Generated_Source\PSoC4/CyLib.c **** 
2468:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_STARTUP_MASK | CY_SYS_PLL_CSV_MASK);
2469:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (startupDelay | csvSwitch);
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_CTL, tmpRegVal);
2472:Generated_Source\PSoC4/CyLib.c ****         }
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** 
2475:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2476:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetRefLimits
2477:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2478:Generated_Source\PSoC4/CyLib.c ****         *
2479:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the cycle time lower and upper limits.
2480:Generated_Source\PSoC4/CyLib.c ****         *
2481:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 52


2482:Generated_Source\PSoC4/CyLib.c ****         *
2483:Generated_Source\PSoC4/CyLib.c ****         * \param lower:
2484:Generated_Source\PSoC4/CyLib.c ****         *  Sets the lower limit -1, in reference clock cycles,
2485:Generated_Source\PSoC4/CyLib.c ****         *  before the next monitored clock event is allowed to happen.  If a monitored
2486:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens before this limit is reached a CSV error is detected.
2487:Generated_Source\PSoC4/CyLib.c ****         *
2488:Generated_Source\PSoC4/CyLib.c ****         * \param upper:
2489:Generated_Source\PSoC4/CyLib.c ****         *  Sets the upper limit -1, in reference clock cycles, before (or same time)
2490:Generated_Source\PSoC4/CyLib.c ****         *  the next monitored clock event must happen.  If a monitored clock event
2491:Generated_Source\PSoC4/CyLib.c ****         *  does not happen before this limit is reached, or does not happen at all
2492:Generated_Source\PSoC4/CyLib.c ****         *  (clock loss), a CSV error is detected.
2493:Generated_Source\PSoC4/CyLib.c ****         *
2494:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2495:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetRefLimits(uint32 lower, uint32 upper)
2496:Generated_Source\PSoC4/CyLib.c ****         {
2497:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_LIMIT);
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_REF_LIMIT_LOWER_MASK | CY_SYS_PLL_REF_LIMIT_UPPER_MASK);
2500:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (lower | ((uint32)(upper << CY_SYS_PLL_REF_LIMIT_UPPER_OFFSET)));
2501:Generated_Source\PSoC4/CyLib.c **** 
2502:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_LIMIT, tmpRegVal);
2503:Generated_Source\PSoC4/CyLib.c ****         }
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetRefLimits
2508:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c ****         *
2510:Generated_Source\PSoC4/CyLib.c ****         *  This API gets the cycle time lower and upper limits.
2511:Generated_Source\PSoC4/CyLib.c ****         *
2512:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2513:Generated_Source\PSoC4/CyLib.c ****         *
2514:Generated_Source\PSoC4/CyLib.c ****         * \return
2515:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 31:16 – upper limit
2516:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 15:0 – lower limit
2517:Generated_Source\PSoC4/CyLib.c ****         *
2518:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2519:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetRefLimits(void)
2520:Generated_Source\PSoC4/CyLib.c ****         {
2521:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_REF_LIMIT));
2522:Generated_Source\PSoC4/CyLib.c ****         }
2523:Generated_Source\PSoC4/CyLib.c **** 
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2526:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetPeriod
2527:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2528:Generated_Source\PSoC4/CyLib.c ****         *
2529:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the csv period time.
2530:Generated_Source\PSoC4/CyLib.c ****         *
2531:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2532:Generated_Source\PSoC4/CyLib.c ****         *
2533:Generated_Source\PSoC4/CyLib.c ****         * \param period:
2534:Generated_Source\PSoC4/CyLib.c ****         *  Set the Period -1, in monitored clock cycles, before the next monitored
2535:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens.
2536:Generated_Source\PSoC4/CyLib.c ****         *  PERIOD <=  (UPPER+1) / FREQ_RATIO -1, with
2537:Generated_Source\PSoC4/CyLib.c ****         *  FREQ_RATIO = (Reference frequency / Monitored frequency).
2538:Generated_Source\PSoC4/CyLib.c ****         *  In case the clocks are asynchronous: PERIOD <=  UPPER / FREQ_RATIO -1
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 53


2539:Generated_Source\PSoC4/CyLib.c ****         *
2540:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2541:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetPeriod(uint32 period)
2542:Generated_Source\PSoC4/CyLib.c ****         {
2543:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD, period);
2544:Generated_Source\PSoC4/CyLib.c ****         }
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** 
2547:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2548:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetPeriod
2549:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2550:Generated_Source\PSoC4/CyLib.c ****         *
2551:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the CSV period time.
2552:Generated_Source\PSoC4/CyLib.c ****         *
2553:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2554:Generated_Source\PSoC4/CyLib.c ****         *
2555:Generated_Source\PSoC4/CyLib.c ****         * \return Period time
2556:Generated_Source\PSoC4/CyLib.c ****         *
2557:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2558:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetPeriod(void)
2559:Generated_Source\PSoC4/CyLib.c ****         {
2560:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD));
2561:Generated_Source\PSoC4/CyLib.c ****         }
2562:Generated_Source\PSoC4/CyLib.c **** 
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2565:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnableReset
2566:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2567:Generated_Source\PSoC4/CyLib.c ****         *
2568:Generated_Source\PSoC4/CyLib.c ****         *  This API enables the system reset feature when the clock supervisor switches
2569:Generated_Source\PSoC4/CyLib.c ****         *  the clock source to IMO. A programmable delay counter starts at delay count
2570:Generated_Source\PSoC4/CyLib.c ****         *  value (see CySysClkPllCsvReloadPgmDlyCounter API) and counts down.
2571:Generated_Source\PSoC4/CyLib.c ****         *
2572:Generated_Source\PSoC4/CyLib.c ****         *  The CSV block will assert system reset when the counter reaches zero unless
2573:Generated_Source\PSoC4/CyLib.c ****         *  firmware intervenes and reloads the counter using
2574:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2575:Generated_Source\PSoC4/CyLib.c ****         *
2576:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2577:Generated_Source\PSoC4/CyLib.c ****         *
2578:Generated_Source\PSoC4/CyLib.c ****         *  Side Effects and Restrictions:
2579:Generated_Source\PSoC4/CyLib.c ****         *  If a clock switch occurs, CSV block will reset the device when the delay
2580:Generated_Source\PSoC4/CyLib.c ****         *  counter reaches zero unless firmware reloads the counter using
2581:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2582:Generated_Source\PSoC4/CyLib.c ****         *
2583:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2584:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnableReset(void)
2585:Generated_Source\PSoC4/CyLib.c ****         {
2586:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN, 0x1uL);
2587:Generated_Source\PSoC4/CyLib.c ****         }
2588:Generated_Source\PSoC4/CyLib.c **** 
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2591:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisableReset
2592:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2593:Generated_Source\PSoC4/CyLib.c ****         *
2594:Generated_Source\PSoC4/CyLib.c ****         *  This API disables the system reset feature when the clock supervisor
2595:Generated_Source\PSoC4/CyLib.c ****         *  switches the clock source to IMO.
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 54


2596:Generated_Source\PSoC4/CyLib.c ****         *
2597:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2598:Generated_Source\PSoC4/CyLib.c ****         *
2599:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2600:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisableReset(void)
2601:Generated_Source\PSoC4/CyLib.c ****         {
2602:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN);
2603:Generated_Source\PSoC4/CyLib.c ****         }
2604:Generated_Source\PSoC4/CyLib.c **** 
2605:Generated_Source\PSoC4/CyLib.c **** 
2606:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2607:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvReloadPgmDlyCounter
2608:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2609:Generated_Source\PSoC4/CyLib.c ****         *
2610:Generated_Source\PSoC4/CyLib.c ****         *  This API reloads the programmable delay counter with the delay count value.
2611:Generated_Source\PSoC4/CyLib.c ****         *
2612:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2613:Generated_Source\PSoC4/CyLib.c ****         *
2614:Generated_Source\PSoC4/CyLib.c ****         * \param delayCount:
2615:Generated_Source\PSoC4/CyLib.c ****         *  Valid range 0-65535, device default value is 256.
2616:Generated_Source\PSoC4/CyLib.c ****         *  Sets the # of counts of IMO clock before system reset is asserted.
2617:Generated_Source\PSoC4/CyLib.c ****         *
2618:Generated_Source\PSoC4/CyLib.c ****         *
2619:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2620:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvReloadPgmDlyCounter(uint32 delayCount)
2621:Generated_Source\PSoC4/CyLib.c ****         {
2622:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY, CYFLD_EXCO_DLYCOUNT, delayCount);
2623:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_LOAD, 0x1uL);
2624:Generated_Source\PSoC4/CyLib.c ****         }
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_ECOV2_SRSSLT) */
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2629:Generated_Source\PSoC4/CyLib.c **** 
2630:Generated_Source\PSoC4/CyLib.c **** 
2631:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2632:Generated_Source\PSoC4/CyLib.c **** 
2633:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2634:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2635:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2636:Generated_Source\PSoC4/CyLib.c ****     *
2637:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2638:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2639:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2640:Generated_Source\PSoC4/CyLib.c ****     *
2641:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2642:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2643:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2644:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2645:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2646:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2647:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2648:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2649:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2650:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2651:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2652:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 55


2653:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2654:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2655:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2656:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2657:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2658:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2659:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2660:Generated_Source\PSoC4/CyLib.c ****     *
2661:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2662:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2663:Generated_Source\PSoC4/CyLib.c ****     {
2664:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2665:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2666:Generated_Source\PSoC4/CyLib.c **** 
2667:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2668:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2669:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2672:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2673:Generated_Source\PSoC4/CyLib.c **** 
2674:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2675:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2678:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2681:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2682:Generated_Source\PSoC4/CyLib.c ****     }
2683:Generated_Source\PSoC4/CyLib.c **** 
2684:Generated_Source\PSoC4/CyLib.c **** 
2685:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2686:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2687:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2688:Generated_Source\PSoC4/CyLib.c ****     *
2689:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2690:Generated_Source\PSoC4/CyLib.c ****     *
2691:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2692:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2693:Generated_Source\PSoC4/CyLib.c ****     {
 425              		.loc 1 2693 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
2694:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 430              		.loc 1 2694 0
 431 0000 054A     		ldr	r2, .L31
 432 0002 1368     		ldr	r3, [r2]
 433 0004 0221     		movs	r1, #2
 434 0006 8B43     		bics	r3, r1
 435 0008 1360     		str	r3, [r2]
2695:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 436              		.loc 1 2695 0
 437 000a 044A     		ldr	r2, .L31+4
 438 000c 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 56


 439 000e 0139     		subs	r1, r1, #1
 440 0010 8B43     		bics	r3, r1
 441 0012 1360     		str	r3, [r2]
2696:Generated_Source\PSoC4/CyLib.c ****     }
 442              		.loc 1 2696 0
 443              		@ sp needed
 444 0014 7047     		bx	lr
 445              	.L32:
 446 0016 C046     		.align	2
 447              	.L31:
 448 0018 08000B40 		.word	1074462728
 449 001c 18000B40 		.word	1074462744
 450              		.cfi_endproc
 451              	.LFE14:
 452              		.size	CySysLvdDisable, .-CySysLvdDisable
 453              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 454              		.align	2
 455              		.global	CySysLvdGetInterruptSource
 456              		.code	16
 457              		.thumb_func
 458              		.type	CySysLvdGetInterruptSource, %function
 459              	CySysLvdGetInterruptSource:
 460              	.LFB15:
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** 
2699:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2700:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2701:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2702:Generated_Source\PSoC4/CyLib.c ****     *
2703:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2704:Generated_Source\PSoC4/CyLib.c ****     *
2705:Generated_Source\PSoC4/CyLib.c ****     * \return
2706:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2707:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2708:Generated_Source\PSoC4/CyLib.c ****     *
2709:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2710:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2711:Generated_Source\PSoC4/CyLib.c ****     {
 461              		.loc 1 2711 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              		@ link register save eliminated.
2712:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 466              		.loc 1 2712 0
 467 0000 024B     		ldr	r3, .L34
 468 0002 1B68     		ldr	r3, [r3]
 469 0004 0220     		movs	r0, #2
 470 0006 1840     		ands	r0, r3
2713:Generated_Source\PSoC4/CyLib.c ****     }
 471              		.loc 1 2713 0
 472              		@ sp needed
 473 0008 7047     		bx	lr
 474              	.L35:
 475 000a C046     		.align	2
 476              	.L34:
 477 000c 04000B40 		.word	1074462724
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 57


 478              		.cfi_endproc
 479              	.LFE15:
 480              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 481              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 482              		.align	2
 483              		.global	CySysLvdClearInterrupt
 484              		.code	16
 485              		.thumb_func
 486              		.type	CySysLvdClearInterrupt, %function
 487              	CySysLvdClearInterrupt:
 488              	.LFB16:
2714:Generated_Source\PSoC4/CyLib.c **** 
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2717:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2718:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2719:Generated_Source\PSoC4/CyLib.c ****     *
2720:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2721:Generated_Source\PSoC4/CyLib.c ****     *
2722:Generated_Source\PSoC4/CyLib.c ****     * \return
2723:Generated_Source\PSoC4/CyLib.c ****     *  None
2724:Generated_Source\PSoC4/CyLib.c ****     *
2725:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2726:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2727:Generated_Source\PSoC4/CyLib.c ****     {
 489              		.loc 1 2727 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
2728:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 494              		.loc 1 2728 0
 495 0000 0222     		movs	r2, #2
 496 0002 014B     		ldr	r3, .L37
 497 0004 1A60     		str	r2, [r3]
2729:Generated_Source\PSoC4/CyLib.c ****     }
 498              		.loc 1 2729 0
 499              		@ sp needed
 500 0006 7047     		bx	lr
 501              	.L38:
 502              		.align	2
 503              	.L37:
 504 0008 04000B40 		.word	1074462724
 505              		.cfi_endproc
 506              	.LFE16:
 507              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 508              		.section	.text.CySysGetResetReason,"ax",%progbits
 509              		.align	2
 510              		.global	CySysGetResetReason
 511              		.code	16
 512              		.thumb_func
 513              		.type	CySysGetResetReason, %function
 514              	CySysGetResetReason:
 515              	.LFB17:
2730:Generated_Source\PSoC4/CyLib.c **** 
2731:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2732:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 58


2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2735:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2736:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2739:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2740:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2741:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2744:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2745:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2746:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2747:Generated_Source\PSoC4/CyLib.c **** *
2748:Generated_Source\PSoC4/CyLib.c **** * \return
2749:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2752:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2753:Generated_Source\PSoC4/CyLib.c **** {
 516              		.loc 1 2753 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 521              	.LVL22:
 522 0000 0200     		movs	r2, r0
2754:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 523              		.loc 1 2756 0
 524 0002 1920     		movs	r0, #25
 525              	.LVL23:
 526 0004 0240     		ands	r2, r0
 527              	.LVL24:
2757:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 528              		.loc 1 2757 0
 529 0006 0249     		ldr	r1, .L40
 530 0008 0B68     		ldr	r3, [r1]
 531 000a 1840     		ands	r0, r3
 532              	.LVL25:
2758:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2759:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 533              		.loc 1 2759 0
 534 000c 0A60     		str	r2, [r1]
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2762:Generated_Source\PSoC4/CyLib.c **** }
 535              		.loc 1 2762 0
 536              		@ sp needed
 537 000e 7047     		bx	lr
 538              	.L41:
 539              		.align	2
 540              	.L40:
 541 0010 00030B40 		.word	1074463488
 542              		.cfi_endproc
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 59


 543              	.LFE17:
 544              		.size	CySysGetResetReason, .-CySysGetResetReason
 545              		.section	.text.CyDisableInts,"ax",%progbits
 546              		.align	2
 547              		.global	CyDisableInts
 548              		.code	16
 549              		.thumb_func
 550              		.type	CyDisableInts, %function
 551              	CyDisableInts:
 552              	.LFB18:
2763:Generated_Source\PSoC4/CyLib.c **** 
2764:Generated_Source\PSoC4/CyLib.c **** 
2765:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2766:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2767:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2770:Generated_Source\PSoC4/CyLib.c **** *
2771:Generated_Source\PSoC4/CyLib.c **** * \return
2772:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2773:Generated_Source\PSoC4/CyLib.c **** *
2774:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2775:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2776:Generated_Source\PSoC4/CyLib.c **** {
 553              		.loc 1 2776 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              		@ link register save eliminated.
2777:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2778:Generated_Source\PSoC4/CyLib.c **** 
2779:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2780:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 558              		.loc 1 2780 0
 559 0000 024B     		ldr	r3, .L43
 560 0002 1868     		ldr	r0, [r3]
 561              	.LVL26:
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2783:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 562              		.loc 1 2783 0
 563 0004 0122     		movs	r2, #1
 564 0006 5242     		rsbs	r2, r2, #0
 565 0008 1A60     		str	r2, [r3]
2784:Generated_Source\PSoC4/CyLib.c **** 
2785:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2786:Generated_Source\PSoC4/CyLib.c **** }
 566              		.loc 1 2786 0
 567              		@ sp needed
 568 000a 7047     		bx	lr
 569              	.L44:
 570              		.align	2
 571              	.L43:
 572 000c 80E100E0 		.word	-536813184
 573              		.cfi_endproc
 574              	.LFE18:
 575              		.size	CyDisableInts, .-CyDisableInts
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 60


 576              		.section	.text.CyEnableInts,"ax",%progbits
 577              		.align	2
 578              		.global	CyEnableInts
 579              		.code	16
 580              		.thumb_func
 581              		.type	CyEnableInts, %function
 582              	CyEnableInts:
 583              	.LFB19:
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** 
2789:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2790:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2791:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2792:Generated_Source\PSoC4/CyLib.c **** *
2793:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2794:Generated_Source\PSoC4/CyLib.c **** *
2795:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2798:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2799:Generated_Source\PSoC4/CyLib.c **** {
 584              		.loc 1 2799 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              	.LVL27:
2800:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 590              		.loc 1 2800 0
 591 0000 014B     		ldr	r3, .L46
 592 0002 1860     		str	r0, [r3]
2801:Generated_Source\PSoC4/CyLib.c **** }
 593              		.loc 1 2801 0
 594              		@ sp needed
 595 0004 7047     		bx	lr
 596              	.L47:
 597 0006 C046     		.align	2
 598              	.L46:
 599 0008 00E100E0 		.word	-536813312
 600              		.cfi_endproc
 601              	.LFE19:
 602              		.size	CyEnableInts, .-CyEnableInts
 603              		.section	.text.CyIntEnable,"ax",%progbits
 604              		.align	2
 605              		.global	CyIntEnable
 606              		.code	16
 607              		.thumb_func
 608              		.type	CyIntEnable, %function
 609              	CyIntEnable:
 610              	.LFB26:
2802:Generated_Source\PSoC4/CyLib.c **** 
2803:Generated_Source\PSoC4/CyLib.c **** 
2804:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2805:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2806:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 61


2809:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2810:Generated_Source\PSoC4/CyLib.c **** *
2811:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2812:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2813:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2814:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2815:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2816:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2817:Generated_Source\PSoC4/CyLib.c **** *
2818:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2823:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2824:Generated_Source\PSoC4/CyLib.c **** {
2825:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2826:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2827:Generated_Source\PSoC4/CyLib.c **** 
2828:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2831:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2834:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2835:Generated_Source\PSoC4/CyLib.c **** 
2836:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2837:Generated_Source\PSoC4/CyLib.c **** }
2838:Generated_Source\PSoC4/CyLib.c **** 
2839:Generated_Source\PSoC4/CyLib.c **** 
2840:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2841:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2842:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2843:Generated_Source\PSoC4/CyLib.c **** *
2844:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2845:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2846:Generated_Source\PSoC4/CyLib.c **** *
2847:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2848:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2849:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2850:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2851:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2852:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2855:Generated_Source\PSoC4/CyLib.c **** *
2856:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2857:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2858:Generated_Source\PSoC4/CyLib.c **** {
2859:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2860:Generated_Source\PSoC4/CyLib.c **** 
2861:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2864:Generated_Source\PSoC4/CyLib.c **** }
2865:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 62


2866:Generated_Source\PSoC4/CyLib.c **** 
2867:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2868:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2869:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2870:Generated_Source\PSoC4/CyLib.c **** *
2871:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2872:Generated_Source\PSoC4/CyLib.c **** *
2873:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2874:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2882:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2885:Generated_Source\PSoC4/CyLib.c **** 
2886:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2887:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2890:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2891:Generated_Source\PSoC4/CyLib.c **** 
2892:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2893:Generated_Source\PSoC4/CyLib.c **** }
2894:Generated_Source\PSoC4/CyLib.c **** 
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2897:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2898:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2903:Generated_Source\PSoC4/CyLib.c **** *
2904:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2908:Generated_Source\PSoC4/CyLib.c **** {
2909:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2910:Generated_Source\PSoC4/CyLib.c **** 
2911:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2912:Generated_Source\PSoC4/CyLib.c **** 
2913:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2914:Generated_Source\PSoC4/CyLib.c **** }
2915:Generated_Source\PSoC4/CyLib.c **** 
2916:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2917:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2918:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2919:Generated_Source\PSoC4/CyLib.c **** *
2920:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 63


2923:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2924:Generated_Source\PSoC4/CyLib.c **** *
2925:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2927:Generated_Source\PSoC4/CyLib.c **** {
2928:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2929:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2930:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2933:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2934:Generated_Source\PSoC4/CyLib.c **** 
2935:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2936:Generated_Source\PSoC4/CyLib.c **** 
2937:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2940:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2941:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2942:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2945:Generated_Source\PSoC4/CyLib.c **** }
2946:Generated_Source\PSoC4/CyLib.c **** 
2947:Generated_Source\PSoC4/CyLib.c **** 
2948:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2949:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2950:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2951:Generated_Source\PSoC4/CyLib.c **** *
2952:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2953:Generated_Source\PSoC4/CyLib.c **** *
2954:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2955:Generated_Source\PSoC4/CyLib.c **** *
2956:Generated_Source\PSoC4/CyLib.c **** * \return
2957:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2958:Generated_Source\PSoC4/CyLib.c **** *
2959:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2960:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2961:Generated_Source\PSoC4/CyLib.c **** {
2962:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2963:Generated_Source\PSoC4/CyLib.c **** 
2964:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2965:Generated_Source\PSoC4/CyLib.c **** 
2966:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2969:Generated_Source\PSoC4/CyLib.c **** }
2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2979:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 64


2980:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2981:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2982:Generated_Source\PSoC4/CyLib.c **** {
 611              		.loc 1 2982 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 616              	.LVL28:
2983:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 617              		.loc 1 2983 0
 618 0000 1F23     		movs	r3, #31
 619 0002 1840     		ands	r0, r3
 620              	.LVL29:
 621 0004 1E3B     		subs	r3, r3, #30
 622 0006 8340     		lsls	r3, r3, r0
 623 0008 014A     		ldr	r2, .L49
 624 000a 1360     		str	r3, [r2]
2984:Generated_Source\PSoC4/CyLib.c **** }
 625              		.loc 1 2984 0
 626              		@ sp needed
 627 000c 7047     		bx	lr
 628              	.L50:
 629 000e C046     		.align	2
 630              	.L49:
 631 0010 00E100E0 		.word	-536813312
 632              		.cfi_endproc
 633              	.LFE26:
 634              		.size	CyIntEnable, .-CyIntEnable
 635              		.section	.text.CyIntGetState,"ax",%progbits
 636              		.align	2
 637              		.global	CyIntGetState
 638              		.code	16
 639              		.thumb_func
 640              		.type	CyIntGetState, %function
 641              	CyIntGetState:
 642              	.LFB27:
2985:Generated_Source\PSoC4/CyLib.c **** 
2986:Generated_Source\PSoC4/CyLib.c **** 
2987:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2988:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2989:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2990:Generated_Source\PSoC4/CyLib.c **** *
2991:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2992:Generated_Source\PSoC4/CyLib.c **** *
2993:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2994:Generated_Source\PSoC4/CyLib.c **** *
2995:Generated_Source\PSoC4/CyLib.c **** * \return
2996:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2997:Generated_Source\PSoC4/CyLib.c **** *
2998:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2999:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
3000:Generated_Source\PSoC4/CyLib.c **** {
 643              		.loc 1 3000 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 65


 647              		@ link register save eliminated.
 648              	.LVL30:
3001:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
3002:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 649              		.loc 1 3002 0
 650 0000 044B     		ldr	r3, .L52
 651 0002 1B68     		ldr	r3, [r3]
 652 0004 1F22     		movs	r2, #31
 653 0006 1040     		ands	r0, r2
 654              	.LVL31:
 655 0008 C340     		lsrs	r3, r3, r0
 656 000a 1800     		movs	r0, r3
 657 000c 0123     		movs	r3, #1
 658 000e 1840     		ands	r0, r3
3003:Generated_Source\PSoC4/CyLib.c **** }
 659              		.loc 1 3003 0
 660              		@ sp needed
 661 0010 7047     		bx	lr
 662              	.L53:
 663 0012 C046     		.align	2
 664              	.L52:
 665 0014 00E100E0 		.word	-536813312
 666              		.cfi_endproc
 667              	.LFE27:
 668              		.size	CyIntGetState, .-CyIntGetState
 669              		.section	.text.CyIntDisable,"ax",%progbits
 670              		.align	2
 671              		.global	CyIntDisable
 672              		.code	16
 673              		.thumb_func
 674              		.type	CyIntDisable, %function
 675              	CyIntDisable:
 676              	.LFB28:
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3015:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
3016:Generated_Source\PSoC4/CyLib.c **** {
 677              		.loc 1 3016 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682              	.LVL32:
3017:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 683              		.loc 1 3017 0
 684 0000 1F23     		movs	r3, #31
 685 0002 1840     		ands	r0, r3
 686              	.LVL33:
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 66


 687 0004 1E3B     		subs	r3, r3, #30
 688 0006 8340     		lsls	r3, r3, r0
 689 0008 014A     		ldr	r2, .L55
 690 000a 1360     		str	r3, [r2]
3018:Generated_Source\PSoC4/CyLib.c **** }
 691              		.loc 1 3018 0
 692              		@ sp needed
 693 000c 7047     		bx	lr
 694              	.L56:
 695 000e C046     		.align	2
 696              	.L55:
 697 0010 80E100E0 		.word	-536813184
 698              		.cfi_endproc
 699              	.LFE28:
 700              		.size	CyIntDisable, .-CyIntDisable
 701              		.section	.text.CyIntSetPending,"ax",%progbits
 702              		.align	2
 703              		.global	CyIntSetPending
 704              		.code	16
 705              		.thumb_func
 706              		.type	CyIntSetPending, %function
 707              	CyIntSetPending:
 708              	.LFB29:
3019:Generated_Source\PSoC4/CyLib.c **** 
3020:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3021:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
3022:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3023:Generated_Source\PSoC4/CyLib.c **** *
3024:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
3025:Generated_Source\PSoC4/CyLib.c **** *
3026:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3027:Generated_Source\PSoC4/CyLib.c **** *
3028:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3029:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
3030:Generated_Source\PSoC4/CyLib.c **** {
 709              		.loc 1 3030 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 714              	.LVL34:
3031:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 715              		.loc 1 3031 0
 716 0000 1F23     		movs	r3, #31
 717 0002 1840     		ands	r0, r3
 718              	.LVL35:
 719 0004 1E3B     		subs	r3, r3, #30
 720 0006 8340     		lsls	r3, r3, r0
 721 0008 014A     		ldr	r2, .L58
 722 000a 1360     		str	r3, [r2]
3032:Generated_Source\PSoC4/CyLib.c **** }
 723              		.loc 1 3032 0
 724              		@ sp needed
 725 000c 7047     		bx	lr
 726              	.L59:
 727 000e C046     		.align	2
 728              	.L58:
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 67


 729 0010 00E200E0 		.word	-536813056
 730              		.cfi_endproc
 731              	.LFE29:
 732              		.size	CyIntSetPending, .-CyIntSetPending
 733              		.section	.text.CyIntClearPending,"ax",%progbits
 734              		.align	2
 735              		.global	CyIntClearPending
 736              		.code	16
 737              		.thumb_func
 738              		.type	CyIntClearPending, %function
 739              	CyIntClearPending:
 740              	.LFB30:
3033:Generated_Source\PSoC4/CyLib.c **** 
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3036:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
3037:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3038:Generated_Source\PSoC4/CyLib.c **** *
3039:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
3040:Generated_Source\PSoC4/CyLib.c **** *
3041:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3042:Generated_Source\PSoC4/CyLib.c **** *
3043:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3044:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
3045:Generated_Source\PSoC4/CyLib.c **** {
 741              		.loc 1 3045 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 746              	.LVL36:
3046:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 747              		.loc 1 3046 0
 748 0000 1F23     		movs	r3, #31
 749 0002 1840     		ands	r0, r3
 750              	.LVL37:
 751 0004 1E3B     		subs	r3, r3, #30
 752 0006 8340     		lsls	r3, r3, r0
 753 0008 014A     		ldr	r2, .L61
 754 000a 1360     		str	r3, [r2]
3047:Generated_Source\PSoC4/CyLib.c **** }
 755              		.loc 1 3047 0
 756              		@ sp needed
 757 000c 7047     		bx	lr
 758              	.L62:
 759 000e C046     		.align	2
 760              	.L61:
 761 0010 80E200E0 		.word	-536812928
 762              		.cfi_endproc
 763              	.LFE30:
 764              		.size	CyIntClearPending, .-CyIntClearPending
 765              		.section	.text.CyHalt,"ax",%progbits
 766              		.align	2
 767              		.global	CyHalt
 768              		.code	16
 769              		.thumb_func
 770              		.type	CyHalt, %function
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 68


 771              	CyHalt:
 772              	.LFB31:
3048:Generated_Source\PSoC4/CyLib.c **** 
3049:Generated_Source\PSoC4/CyLib.c **** 
3050:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3051:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
3052:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
3055:Generated_Source\PSoC4/CyLib.c **** *
3056:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
3060:Generated_Source\PSoC4/CyLib.c **** {
 773              		.loc 1 3060 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              		@ link register save eliminated.
 778              	.LVL38:
3061:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
3062:Generated_Source\PSoC4/CyLib.c ****     {
3063:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
3064:Generated_Source\PSoC4/CyLib.c ****     }
3065:Generated_Source\PSoC4/CyLib.c **** 
3066:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
3067:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
3068:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
3069:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 779              		.loc 1 3069 0
 780              		.syntax divided
 781              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 782 0000 01BE     		    bkpt    1
 783              	@ 0 "" 2
3070:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
3071:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
3072:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
3073:Generated_Source\PSoC4/CyLib.c **** }
 784              		.loc 1 3073 0
 785              		.thumb
 786              		.syntax unified
 787              		@ sp needed
 788 0002 7047     		bx	lr
 789              		.cfi_endproc
 790              	.LFE31:
 791              		.size	CyHalt, .-CyHalt
 792              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 793              		.align	2
 794              		.global	CySysClkWriteEcoDiv
 795              		.code	16
 796              		.thumb_func
 797              		.type	CySysClkWriteEcoDiv, %function
 798              	CySysClkWriteEcoDiv:
 799              	.LFB12:
1429:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
 800              		.loc 1 1429 0
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 69


 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              	.LVL39:
 805 0000 10B5     		push	{r4, lr}
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 4, -8
 808              		.cfi_offset 14, -4
 809 0002 0400     		movs	r4, r0
1432:Generated_Source\PSoC4/CyLib.c ****             {
 810              		.loc 1 1432 0
 811 0004 0A4B     		ldr	r3, .L67
 812 0006 1B68     		ldr	r3, [r3]
 813 0008 0722     		movs	r2, #7
 814 000a 1340     		ands	r3, r2
 815 000c 022B     		cmp	r3, #2
 816 000e 0BD0     		beq	.L65
1434:Generated_Source\PSoC4/CyLib.c **** 
 817              		.loc 1 1434 0
 818 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 819              	.LVL40:
1436:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 820              		.loc 1 1436 0
 821 0014 0321     		movs	r1, #3
 822 0016 0C40     		ands	r4, r1
 823              	.LVL41:
1437:Generated_Source\PSoC4/CyLib.c **** 
 824              		.loc 1 1437 0
 825 0018 064A     		ldr	r2, .L67+4
 826 001a 1368     		ldr	r3, [r2]
 827 001c 8B43     		bics	r3, r1
1436:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 828              		.loc 1 1436 0
 829 001e 2343     		orrs	r3, r4
 830 0020 1360     		str	r3, [r2]
1439:Generated_Source\PSoC4/CyLib.c ****             }
 831              		.loc 1 1439 0
 832 0022 FFF7FEFF 		bl	CyExitCriticalSection
 833              	.LVL42:
 834 0026 02E0     		b	.L64
 835              	.LVL43:
 836              	.L65:
1444:Generated_Source\PSoC4/CyLib.c ****             }
 837              		.loc 1 1444 0 discriminator 1
 838 0028 0020     		movs	r0, #0
 839              	.LVL44:
 840 002a FFF7FEFF 		bl	CyHalt
 841              	.LVL45:
 842              	.L64:
1446:Generated_Source\PSoC4/CyLib.c **** 
 843              		.loc 1 1446 0
 844              		@ sp needed
 845 002e 10BD     		pop	{r4, pc}
 846              	.L68:
 847              		.align	2
 848              	.L67:
 849 0030 00010B40 		.word	1074462976
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 70


 850 0034 64F02E40 		.word	1076818020
 851              		.cfi_endproc
 852              	.LFE12:
 853              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 854              		.section	.text.CyIntSetSysVector,"ax",%progbits
 855              		.align	2
 856              		.global	CyIntSetSysVector
 857              		.code	16
 858              		.thumb_func
 859              		.type	CyIntSetSysVector, %function
 860              	CyIntSetSysVector:
 861              	.LFB20:
2824:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 862              		.loc 1 2824 0
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 0
 865              		@ frame_needed = 0, uses_anonymous_args = 0
 866              	.LVL46:
 867 0000 70B5     		push	{r4, r5, r6, lr}
 868              		.cfi_def_cfa_offset 16
 869              		.cfi_offset 4, -16
 870              		.cfi_offset 5, -12
 871              		.cfi_offset 6, -8
 872              		.cfi_offset 14, -4
 873 0002 0400     		movs	r4, r0
 874 0004 0D00     		movs	r5, r1
 875              	.LVL47:
2828:Generated_Source\PSoC4/CyLib.c **** 
 876              		.loc 1 2828 0
 877 0006 0F28     		cmp	r0, #15
 878 0008 02D9     		bls	.L70
2828:Generated_Source\PSoC4/CyLib.c **** 
 879              		.loc 1 2828 0 is_stmt 0 discriminator 1
 880 000a 0020     		movs	r0, #0
 881              	.LVL48:
 882 000c FFF7FEFF 		bl	CyHalt
 883              	.LVL49:
 884              	.L70:
2831:Generated_Source\PSoC4/CyLib.c **** 
 885              		.loc 1 2831 0 is_stmt 1
 886 0010 A400     		lsls	r4, r4, #2
 887 0012 8023     		movs	r3, #128
 888 0014 9B05     		lsls	r3, r3, #22
 889 0016 9C46     		mov	ip, r3
 890 0018 6444     		add	r4, r4, ip
 891 001a 2068     		ldr	r0, [r4]
 892              	.LVL50:
2834:Generated_Source\PSoC4/CyLib.c **** 
 893              		.loc 1 2834 0
 894 001c 2560     		str	r5, [r4]
2837:Generated_Source\PSoC4/CyLib.c **** 
 895              		.loc 1 2837 0
 896              		@ sp needed
 897              	.LVL51:
 898 001e 70BD     		pop	{r4, r5, r6, pc}
 899              		.cfi_endproc
 900              	.LFE20:
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 71


 901              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 902              		.section	.text.CyIntGetSysVector,"ax",%progbits
 903              		.align	2
 904              		.global	CyIntGetSysVector
 905              		.code	16
 906              		.thumb_func
 907              		.type	CyIntGetSysVector, %function
 908              	CyIntGetSysVector:
 909              	.LFB21:
2858:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 910              		.loc 1 2858 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914              	.LVL52:
 915 0000 10B5     		push	{r4, lr}
 916              		.cfi_def_cfa_offset 8
 917              		.cfi_offset 4, -8
 918              		.cfi_offset 14, -4
 919 0002 0400     		movs	r4, r0
 920              	.LVL53:
2861:Generated_Source\PSoC4/CyLib.c **** 
 921              		.loc 1 2861 0
 922 0004 0F28     		cmp	r0, #15
 923 0006 02D9     		bls	.L72
2861:Generated_Source\PSoC4/CyLib.c **** 
 924              		.loc 1 2861 0 is_stmt 0 discriminator 1
 925 0008 0020     		movs	r0, #0
 926              	.LVL54:
 927 000a FFF7FEFF 		bl	CyHalt
 928              	.LVL55:
 929              	.L72:
2863:Generated_Source\PSoC4/CyLib.c **** }
 930              		.loc 1 2863 0 is_stmt 1
 931 000e A400     		lsls	r4, r4, #2
 932 0010 8023     		movs	r3, #128
 933 0012 9B05     		lsls	r3, r3, #22
 934 0014 9C46     		mov	ip, r3
 935 0016 6444     		add	r4, r4, ip
 936 0018 2068     		ldr	r0, [r4]
2864:Generated_Source\PSoC4/CyLib.c **** 
 937              		.loc 1 2864 0
 938              		@ sp needed
 939 001a 10BD     		pop	{r4, pc}
 940              		.cfi_endproc
 941              	.LFE21:
 942              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 943              		.section	.text.CyIntSetVector,"ax",%progbits
 944              		.align	2
 945              		.global	CyIntSetVector
 946              		.code	16
 947              		.thumb_func
 948              		.type	CyIntSetVector, %function
 949              	CyIntSetVector:
 950              	.LFB22:
2880:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 951              		.loc 1 2880 0
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 72


 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              	.LVL56:
 956 0000 70B5     		push	{r4, r5, r6, lr}
 957              		.cfi_def_cfa_offset 16
 958              		.cfi_offset 4, -16
 959              		.cfi_offset 5, -12
 960              		.cfi_offset 6, -8
 961              		.cfi_offset 14, -4
 962 0002 0400     		movs	r4, r0
 963 0004 0D00     		movs	r5, r1
 964              	.LVL57:
2884:Generated_Source\PSoC4/CyLib.c **** 
 965              		.loc 1 2884 0
 966 0006 1F28     		cmp	r0, #31
 967 0008 02D9     		bls	.L74
2884:Generated_Source\PSoC4/CyLib.c **** 
 968              		.loc 1 2884 0 is_stmt 0 discriminator 1
 969 000a 0020     		movs	r0, #0
 970              	.LVL58:
 971 000c FFF7FEFF 		bl	CyHalt
 972              	.LVL59:
 973              	.L74:
2887:Generated_Source\PSoC4/CyLib.c **** 
 974              		.loc 1 2887 0 is_stmt 1
 975 0010 1034     		adds	r4, r4, #16
 976 0012 A400     		lsls	r4, r4, #2
 977 0014 8023     		movs	r3, #128
 978 0016 9B05     		lsls	r3, r3, #22
 979 0018 9C46     		mov	ip, r3
 980 001a 6444     		add	r4, r4, ip
 981 001c 2068     		ldr	r0, [r4]
 982              	.LVL60:
2890:Generated_Source\PSoC4/CyLib.c **** 
 983              		.loc 1 2890 0
 984 001e 2560     		str	r5, [r4]
2893:Generated_Source\PSoC4/CyLib.c **** 
 985              		.loc 1 2893 0
 986              		@ sp needed
 987              	.LVL61:
 988 0020 70BD     		pop	{r4, r5, r6, pc}
 989              		.cfi_endproc
 990              	.LFE22:
 991              		.size	CyIntSetVector, .-CyIntSetVector
 992 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 993              		.align	2
 994              		.global	CyIntGetVector
 995              		.code	16
 996              		.thumb_func
 997              		.type	CyIntGetVector, %function
 998              	CyIntGetVector:
 999              	.LFB23:
2908:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1000              		.loc 1 2908 0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 73


 1003              		@ frame_needed = 0, uses_anonymous_args = 0
 1004              	.LVL62:
 1005 0000 10B5     		push	{r4, lr}
 1006              		.cfi_def_cfa_offset 8
 1007              		.cfi_offset 4, -8
 1008              		.cfi_offset 14, -4
 1009 0002 0400     		movs	r4, r0
 1010              	.LVL63:
2911:Generated_Source\PSoC4/CyLib.c **** 
 1011              		.loc 1 2911 0
 1012 0004 1F28     		cmp	r0, #31
 1013 0006 02D9     		bls	.L76
2911:Generated_Source\PSoC4/CyLib.c **** 
 1014              		.loc 1 2911 0 is_stmt 0 discriminator 1
 1015 0008 0020     		movs	r0, #0
 1016              	.LVL64:
 1017 000a FFF7FEFF 		bl	CyHalt
 1018              	.LVL65:
 1019              	.L76:
2913:Generated_Source\PSoC4/CyLib.c **** }
 1020              		.loc 1 2913 0 is_stmt 1
 1021 000e 1034     		adds	r4, r4, #16
 1022 0010 A400     		lsls	r4, r4, #2
 1023 0012 8023     		movs	r3, #128
 1024 0014 9B05     		lsls	r3, r3, #22
 1025 0016 9C46     		mov	ip, r3
 1026 0018 6444     		add	r4, r4, ip
 1027 001a 2068     		ldr	r0, [r4]
2914:Generated_Source\PSoC4/CyLib.c **** 
 1028              		.loc 1 2914 0
 1029              		@ sp needed
 1030 001c 10BD     		pop	{r4, pc}
 1031              		.cfi_endproc
 1032              	.LFE23:
 1033              		.size	CyIntGetVector, .-CyIntGetVector
 1034 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 1035              		.align	2
 1036              		.global	CyIntSetPriority
 1037              		.code	16
 1038              		.thumb_func
 1039              		.type	CyIntSetPriority, %function
 1040              	CyIntSetPriority:
 1041              	.LFB24:
2927:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 1042              		.loc 1 2927 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              	.LVL66:
 1047 0000 70B5     		push	{r4, r5, r6, lr}
 1048              		.cfi_def_cfa_offset 16
 1049              		.cfi_offset 4, -16
 1050              		.cfi_offset 5, -12
 1051              		.cfi_offset 6, -8
 1052              		.cfi_offset 14, -4
 1053 0002 0400     		movs	r4, r0
 1054 0004 0E00     		movs	r6, r1
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 74


2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1055              		.loc 1 2932 0
 1056 0006 0329     		cmp	r1, #3
 1057 0008 02D9     		bls	.L78
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1058              		.loc 1 2932 0 is_stmt 0 discriminator 1
 1059 000a 0020     		movs	r0, #0
 1060              	.LVL67:
 1061 000c FFF7FEFF 		bl	CyHalt
 1062              	.LVL68:
 1063              	.L78:
2933:Generated_Source\PSoC4/CyLib.c **** 
 1064              		.loc 1 2933 0 is_stmt 1
 1065 0010 1F2C     		cmp	r4, #31
 1066 0012 02D9     		bls	.L79
2933:Generated_Source\PSoC4/CyLib.c **** 
 1067              		.loc 1 2933 0 is_stmt 0 discriminator 1
 1068 0014 0020     		movs	r0, #0
 1069 0016 FFF7FEFF 		bl	CyHalt
 1070              	.LVL69:
 1071              	.L79:
2935:Generated_Source\PSoC4/CyLib.c **** 
 1072              		.loc 1 2935 0 is_stmt 1
 1073 001a 0325     		movs	r5, #3
 1074 001c 2540     		ands	r5, r4
 1075 001e ED00     		lsls	r5, r5, #3
 1076 0020 0635     		adds	r5, r5, #6
 1077              	.LVL70:
2937:Generated_Source\PSoC4/CyLib.c **** 
 1078              		.loc 1 2937 0
 1079 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 1080              	.LVL71:
2939:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1081              		.loc 1 2939 0
 1082 0026 A408     		lsrs	r4, r4, #2
 1083 0028 A400     		lsls	r4, r4, #2
 1084 002a 074B     		ldr	r3, .L80
 1085 002c 9C46     		mov	ip, r3
 1086 002e 6444     		add	r4, r4, ip
 1087 0030 2168     		ldr	r1, [r4]
 1088              	.LVL72:
2940:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1089              		.loc 1 2940 0
 1090 0032 0323     		movs	r3, #3
 1091 0034 AB40     		lsls	r3, r3, r5
 1092 0036 9943     		bics	r1, r3
 1093              	.LVL73:
 1094 0038 0B00     		movs	r3, r1
 1095              	.LVL74:
2941:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1096              		.loc 1 2941 0
 1097 003a 3100     		movs	r1, r6
 1098              	.LVL75:
 1099 003c A940     		lsls	r1, r1, r5
 1100 003e 1943     		orrs	r1, r3
 1101              	.LVL76:
2942:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 75


 1102              		.loc 1 2942 0
 1103 0040 2160     		str	r1, [r4]
2944:Generated_Source\PSoC4/CyLib.c **** }
 1104              		.loc 1 2944 0
 1105 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1106              	.LVL77:
2945:Generated_Source\PSoC4/CyLib.c **** 
 1107              		.loc 1 2945 0
 1108              		@ sp needed
 1109              	.LVL78:
 1110 0046 70BD     		pop	{r4, r5, r6, pc}
 1111              	.L81:
 1112              		.align	2
 1113              	.L80:
 1114 0048 00E400E0 		.word	-536812544
 1115              		.cfi_endproc
 1116              	.LFE24:
 1117              		.size	CyIntSetPriority, .-CyIntSetPriority
 1118              		.section	.text.CyIntGetPriority,"ax",%progbits
 1119              		.align	2
 1120              		.global	CyIntGetPriority
 1121              		.code	16
 1122              		.thumb_func
 1123              		.type	CyIntGetPriority, %function
 1124              	CyIntGetPriority:
 1125              	.LFB25:
2961:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 1126              		.loc 1 2961 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130              	.LVL79:
 1131 0000 10B5     		push	{r4, lr}
 1132              		.cfi_def_cfa_offset 8
 1133              		.cfi_offset 4, -8
 1134              		.cfi_offset 14, -4
 1135 0002 0400     		movs	r4, r0
2964:Generated_Source\PSoC4/CyLib.c **** 
 1136              		.loc 1 2964 0
 1137 0004 1F28     		cmp	r0, #31
 1138 0006 02D9     		bls	.L83
2964:Generated_Source\PSoC4/CyLib.c **** 
 1139              		.loc 1 2964 0 is_stmt 0 discriminator 1
 1140 0008 0020     		movs	r0, #0
 1141              	.LVL80:
 1142 000a FFF7FEFF 		bl	CyHalt
 1143              	.LVL81:
 1144              	.L83:
2966:Generated_Source\PSoC4/CyLib.c **** 
 1145              		.loc 1 2966 0 is_stmt 1
 1146 000e A308     		lsrs	r3, r4, #2
 1147 0010 9B00     		lsls	r3, r3, #2
 1148 0012 054A     		ldr	r2, .L84
 1149 0014 9446     		mov	ip, r2
 1150 0016 6344     		add	r3, r3, ip
 1151 0018 1868     		ldr	r0, [r3]
 1152 001a 0323     		movs	r3, #3
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 76


 1153 001c 1C40     		ands	r4, r3
 1154 001e E400     		lsls	r4, r4, #3
 1155 0020 0634     		adds	r4, r4, #6
 1156 0022 E040     		lsrs	r0, r0, r4
 1157              	.LVL82:
2968:Generated_Source\PSoC4/CyLib.c **** }
 1158              		.loc 1 2968 0
 1159 0024 1840     		ands	r0, r3
 1160              	.LVL83:
2969:Generated_Source\PSoC4/CyLib.c **** 
 1161              		.loc 1 2969 0
 1162              		@ sp needed
 1163 0026 10BD     		pop	{r4, pc}
 1164              	.L85:
 1165              		.align	2
 1166              	.L84:
 1167 0028 00E400E0 		.word	-536812544
 1168              		.cfi_endproc
 1169              	.LFE25:
 1170              		.size	CyIntGetPriority, .-CyIntGetPriority
 1171              		.section	.text.CySoftwareReset,"ax",%progbits
 1172              		.align	2
 1173              		.global	CySoftwareReset
 1174              		.code	16
 1175              		.thumb_func
 1176              		.type	CySoftwareReset, %function
 1177              	CySoftwareReset:
 1178              	.LFB32:
3074:Generated_Source\PSoC4/CyLib.c **** 
3075:Generated_Source\PSoC4/CyLib.c **** 
3076:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3077:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
3078:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
3081:Generated_Source\PSoC4/CyLib.c **** *
3082:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3083:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
3084:Generated_Source\PSoC4/CyLib.c **** {
 1179              		.loc 1 3084 0
 1180              		.cfi_startproc
 1181              		@ args = 0, pretend = 0, frame = 0
 1182              		@ frame_needed = 0, uses_anonymous_args = 0
 1183              		@ link register save eliminated.
3085:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
3086:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
3087:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
3088:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
3089:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1184              		.loc 1 3089 0
 1185 0000 034A     		ldr	r2, .L87
 1186 0002 1368     		ldr	r3, [r2]
 1187 0004 1B04     		lsls	r3, r3, #16
 1188 0006 1B0C     		lsrs	r3, r3, #16
3090:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1189              		.loc 1 3090 0
 1190 0008 0249     		ldr	r1, .L87+4
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 77


 1191 000a 0B43     		orrs	r3, r1
3089:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1192              		.loc 1 3089 0
 1193 000c 1360     		str	r3, [r2]
3091:Generated_Source\PSoC4/CyLib.c **** }
 1194              		.loc 1 3091 0
 1195              		@ sp needed
 1196 000e 7047     		bx	lr
 1197              	.L88:
 1198              		.align	2
 1199              	.L87:
 1200 0010 0CED00E0 		.word	-536810228
 1201 0014 0400FA05 		.word	100270084
 1202              		.cfi_endproc
 1203              	.LFE32:
 1204              		.size	CySoftwareReset, .-CySoftwareReset
 1205              		.section	.text.CyDelay,"ax",%progbits
 1206              		.align	2
 1207              		.global	CyDelay
 1208              		.code	16
 1209              		.thumb_func
 1210              		.type	CyDelay, %function
 1211              	CyDelay:
 1212              	.LFB33:
3092:Generated_Source\PSoC4/CyLib.c **** 
3093:Generated_Source\PSoC4/CyLib.c **** 
3094:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3095:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
3096:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3097:Generated_Source\PSoC4/CyLib.c **** *
3098:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
3099:Generated_Source\PSoC4/CyLib.c **** *
3100:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
3101:Generated_Source\PSoC4/CyLib.c **** *
3102:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3103:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
3104:Generated_Source\PSoC4/CyLib.c **** {
 1213              		.loc 1 3104 0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217              	.LVL84:
 1218 0000 10B5     		push	{r4, lr}
 1219              		.cfi_def_cfa_offset 8
 1220              		.cfi_offset 4, -8
 1221              		.cfi_offset 14, -4
 1222 0002 0400     		movs	r4, r0
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1223              		.loc 1 3105 0
 1224 0004 06E0     		b	.L90
 1225              	.LVL85:
 1226              	.L91:
3106:Generated_Source\PSoC4/CyLib.c ****     {
3107:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
3108:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
3109:Generated_Source\PSoC4/CyLib.c ****          */
3110:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 78


 1227              		.loc 1 3110 0
 1228 0006 084B     		ldr	r3, .L92
 1229 0008 5868     		ldr	r0, [r3, #4]
 1230 000a FFF7FEFF 		bl	CyDelayCycles
 1231              	.LVL86:
3111:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1232              		.loc 1 3111 0
 1233 000e 074B     		ldr	r3, .L92+4
 1234 0010 9C46     		mov	ip, r3
 1235 0012 6444     		add	r4, r4, ip
 1236              	.LVL87:
 1237              	.L90:
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1238              		.loc 1 3105 0
 1239 0014 8023     		movs	r3, #128
 1240 0016 1B02     		lsls	r3, r3, #8
 1241 0018 9C42     		cmp	r4, r3
 1242 001a F4D8     		bhi	.L91
3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1243              		.loc 1 3114 0
 1244 001c 024B     		ldr	r3, .L92
 1245 001e 9868     		ldr	r0, [r3, #8]
 1246 0020 6043     		muls	r0, r4
 1247 0022 FFF7FEFF 		bl	CyDelayCycles
 1248              	.LVL88:
3115:Generated_Source\PSoC4/CyLib.c **** }
 1249              		.loc 1 3115 0
 1250              		@ sp needed
 1251              	.LVL89:
 1252 0026 10BD     		pop	{r4, pc}
 1253              	.L93:
 1254              		.align	2
 1255              	.L92:
 1256 0028 00000000 		.word	.LANCHOR0
 1257 002c 0080FFFF 		.word	-32768
 1258              		.cfi_endproc
 1259              	.LFE33:
 1260              		.size	CyDelay, .-CyDelay
 1261              		.section	.text.CyDelayUs,"ax",%progbits
 1262              		.align	2
 1263              		.global	CyDelayUs
 1264              		.code	16
 1265              		.thumb_func
 1266              		.type	CyDelayUs, %function
 1267              	CyDelayUs:
 1268              	.LFB34:
3116:Generated_Source\PSoC4/CyLib.c **** 
3117:Generated_Source\PSoC4/CyLib.c **** 
3118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
3120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3121:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
3122:Generated_Source\PSoC4/CyLib.c **** *
3123:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
3124:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 79


3125:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3126:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
3127:Generated_Source\PSoC4/CyLib.c **** {
 1269              		.loc 1 3127 0
 1270              		.cfi_startproc
 1271              		@ args = 0, pretend = 0, frame = 0
 1272              		@ frame_needed = 0, uses_anonymous_args = 0
 1273              	.LVL90:
 1274 0000 10B5     		push	{r4, lr}
 1275              		.cfi_def_cfa_offset 8
 1276              		.cfi_offset 4, -8
 1277              		.cfi_offset 14, -4
3128:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1278              		.loc 1 3128 0
 1279 0002 034B     		ldr	r3, .L95
 1280 0004 1B7B     		ldrb	r3, [r3, #12]
 1281 0006 5843     		muls	r0, r3
 1282              	.LVL91:
 1283 0008 FFF7FEFF 		bl	CyDelayCycles
 1284              	.LVL92:
3129:Generated_Source\PSoC4/CyLib.c **** }
 1285              		.loc 1 3129 0
 1286              		@ sp needed
 1287 000c 10BD     		pop	{r4, pc}
 1288              	.L96:
 1289 000e C046     		.align	2
 1290              	.L95:
 1291 0010 00000000 		.word	.LANCHOR0
 1292              		.cfi_endproc
 1293              	.LFE34:
 1294              		.size	CyDelayUs, .-CyDelayUs
 1295              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1296              		.align	2
 1297              		.global	CySysClkEcoStart
 1298              		.code	16
 1299              		.thumb_func
 1300              		.type	CySysClkEcoStart, %function
 1301              	CySysClkEcoStart:
 1302              	.LFB9:
1202:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1303              		.loc 1 1202 0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 0
 1306              		@ frame_needed = 0, uses_anonymous_args = 0
 1307              	.LVL93:
 1308 0000 10B5     		push	{r4, lr}
 1309              		.cfi_def_cfa_offset 8
 1310              		.cfi_offset 4, -8
 1311              		.cfi_offset 14, -4
 1312 0002 0400     		movs	r4, r0
 1313              	.LVL94:
1207:Generated_Source\PSoC4/CyLib.c **** 
 1314              		.loc 1 1207 0
 1315 0004 0F4A     		ldr	r2, .L102
 1316 0006 1168     		ldr	r1, [r2]
 1317 0008 0123     		movs	r3, #1
 1318 000a 0B43     		orrs	r3, r1
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 80


 1319 000c 1360     		str	r3, [r2]
1210:Generated_Source\PSoC4/CyLib.c **** 
 1320              		.loc 1 1210 0
 1321 000e 0E4A     		ldr	r2, .L102+4
 1322 0010 0E4B     		ldr	r3, .L102+8
 1323 0012 1A60     		str	r2, [r3]
1213:Generated_Source\PSoC4/CyLib.c **** 
 1324              		.loc 1 1213 0
 1325 0014 0E4A     		ldr	r2, .L102+12
 1326 0016 1368     		ldr	r3, [r2]
 1327 0018 8021     		movs	r1, #128
 1328 001a 0902     		lsls	r1, r1, #8
 1329 001c 0B43     		orrs	r3, r1
 1330 001e 1360     		str	r3, [r2]
1314:Generated_Source\PSoC4/CyLib.c ****         {
 1331              		.loc 1 1314 0
 1332 0020 0028     		cmp	r0, #0
 1333 0022 09D1     		bne	.L98
1203:Generated_Source\PSoC4/CyLib.c **** 
 1334              		.loc 1 1203 0
 1335 0024 0020     		movs	r0, #0
 1336              	.LVL95:
 1337 0026 0CE0     		b	.L99
 1338              	.L100:
1320:Generated_Source\PSoC4/CyLib.c **** 
 1339              		.loc 1 1320 0
 1340 0028 0120     		movs	r0, #1
 1341 002a FFF7FEFF 		bl	CyDelayUs
 1342              	.LVL96:
1322:Generated_Source\PSoC4/CyLib.c ****                 {
 1343              		.loc 1 1322 0
 1344 002e FFF7FEFF 		bl	CySysClkEcoReadStatus
 1345              	.LVL97:
 1346 0032 0028     		cmp	r0, #0
 1347 0034 04D1     		bne	.L101
1318:Generated_Source\PSoC4/CyLib.c ****             {
 1348              		.loc 1 1318 0
 1349 0036 013C     		subs	r4, r4, #1
 1350              	.LVL98:
 1351              	.L98:
1318:Generated_Source\PSoC4/CyLib.c ****             {
 1352              		.loc 1 1318 0 is_stmt 0 discriminator 1
 1353 0038 002C     		cmp	r4, #0
 1354 003a F5D1     		bne	.L100
1316:Generated_Source\PSoC4/CyLib.c **** 
 1355              		.loc 1 1316 0 is_stmt 1
 1356 003c 1020     		movs	r0, #16
 1357 003e 00E0     		b	.L99
 1358              	.L101:
1324:Generated_Source\PSoC4/CyLib.c ****                     break;
 1359              		.loc 1 1324 0
 1360 0040 0020     		movs	r0, #0
 1361              	.L99:
 1362              	.LVL99:
1332:Generated_Source\PSoC4/CyLib.c **** 
 1363              		.loc 1 1332 0
 1364              		@ sp needed
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 81


 1365              	.LVL100:
 1366 0042 10BD     		pop	{r4, pc}
 1367              	.L103:
 1368              		.align	2
 1369              	.L102:
 1370 0044 60F02E40 		.word	1076818016
 1371 0048 02200000 		.word	8194
 1372 004c 78002E40 		.word	1076756600
 1373 0050 10002E40 		.word	1076756496
 1374              		.cfi_endproc
 1375              	.LFE9:
 1376              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1377              		.section	.text.CySysLvdEnable,"ax",%progbits
 1378              		.align	2
 1379              		.global	CySysLvdEnable
 1380              		.code	16
 1381              		.thumb_func
 1382              		.type	CySysLvdEnable, %function
 1383              	CySysLvdEnable:
 1384              	.LFB13:
2663:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1385              		.loc 1 2663 0
 1386              		.cfi_startproc
 1387              		@ args = 0, pretend = 0, frame = 0
 1388              		@ frame_needed = 0, uses_anonymous_args = 0
 1389              	.LVL101:
 1390 0000 70B5     		push	{r4, r5, r6, lr}
 1391              		.cfi_def_cfa_offset 16
 1392              		.cfi_offset 4, -16
 1393              		.cfi_offset 5, -12
 1394              		.cfi_offset 6, -8
 1395              		.cfi_offset 14, -4
 1396 0002 0300     		movs	r3, r0
2665:Generated_Source\PSoC4/CyLib.c **** 
 1397              		.loc 1 2665 0
 1398 0004 0D4C     		ldr	r4, .L105
 1399 0006 2268     		ldr	r2, [r4]
 1400 0008 0225     		movs	r5, #2
 1401 000a AA43     		bics	r2, r5
 1402 000c 2260     		str	r2, [r4]
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1403              		.loc 1 2668 0
 1404 000e 0C4A     		ldr	r2, .L105+4
 1405 0010 1168     		ldr	r1, [r2]
 1406 0012 1E20     		movs	r0, #30
 1407              	.LVL102:
 1408 0014 8143     		bics	r1, r0
2669:Generated_Source\PSoC4/CyLib.c **** 
 1409              		.loc 1 2669 0
 1410 0016 5B00     		lsls	r3, r3, #1
 1411              	.LVL103:
 1412 0018 1840     		ands	r0, r3
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1413              		.loc 1 2668 0
 1414 001a 0843     		orrs	r0, r1
 1415 001c 1060     		str	r0, [r2]
2672:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 82


 1416              		.loc 1 2672 0
 1417 001e 1168     		ldr	r1, [r2]
 1418 0020 0123     		movs	r3, #1
 1419 0022 0B43     		orrs	r3, r1
 1420 0024 1360     		str	r3, [r2]
2675:Generated_Source\PSoC4/CyLib.c **** 
 1421              		.loc 1 2675 0
 1422 0026 FA20     		movs	r0, #250
 1423 0028 8000     		lsls	r0, r0, #2
 1424 002a FFF7FEFF 		bl	CyDelayUs
 1425              	.LVL104:
2678:Generated_Source\PSoC4/CyLib.c **** 
 1426              		.loc 1 2678 0
 1427 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1428              	.LVL105:
2681:Generated_Source\PSoC4/CyLib.c ****     }
 1429              		.loc 1 2681 0
 1430 0032 2368     		ldr	r3, [r4]
 1431 0034 1D43     		orrs	r5, r3
 1432 0036 2560     		str	r5, [r4]
2682:Generated_Source\PSoC4/CyLib.c **** 
 1433              		.loc 1 2682 0
 1434              		@ sp needed
 1435 0038 70BD     		pop	{r4, r5, r6, pc}
 1436              	.L106:
 1437 003a C046     		.align	2
 1438              	.L105:
 1439 003c 08000B40 		.word	1074462728
 1440 0040 18000B40 		.word	1074462744
 1441              		.cfi_endproc
 1442              	.LFE13:
 1443              		.size	CySysLvdEnable, .-CySysLvdEnable
 1444              		.global	__aeabi_uidiv
 1445              		.section	.text.CyDelayFreq,"ax",%progbits
 1446              		.align	2
 1447              		.global	CyDelayFreq
 1448              		.code	16
 1449              		.thumb_func
 1450              		.type	CyDelayFreq, %function
 1451              	CyDelayFreq:
 1452              	.LFB35:
3130:Generated_Source\PSoC4/CyLib.c **** 
3131:Generated_Source\PSoC4/CyLib.c **** 
3132:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3133:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
3134:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3135:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
3136:Generated_Source\PSoC4/CyLib.c **** *
3137:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
3138:Generated_Source\PSoC4/CyLib.c **** *
3139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3140:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
3141:Generated_Source\PSoC4/CyLib.c **** {
 1453              		.loc 1 3141 0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 0
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 83


 1457              	.LVL106:
 1458 0000 70B5     		push	{r4, r5, r6, lr}
 1459              		.cfi_def_cfa_offset 16
 1460              		.cfi_offset 4, -16
 1461              		.cfi_offset 5, -12
 1462              		.cfi_offset 6, -8
 1463              		.cfi_offset 14, -4
3142:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1464              		.loc 1 3142 0
 1465 0002 0028     		cmp	r0, #0
 1466 0004 02D0     		beq	.L108
3143:Generated_Source\PSoC4/CyLib.c ****     {
3144:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1467              		.loc 1 3144 0
 1468 0006 0C4B     		ldr	r3, .L110
 1469 0008 1861     		str	r0, [r3, #16]
 1470 000a 02E0     		b	.L109
 1471              	.L108:
3145:Generated_Source\PSoC4/CyLib.c ****     }
3146:Generated_Source\PSoC4/CyLib.c ****     else
3147:Generated_Source\PSoC4/CyLib.c ****     {
3148:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1472              		.loc 1 3148 0
 1473 000c 0B4A     		ldr	r2, .L110+4
 1474 000e 0A4B     		ldr	r3, .L110
 1475 0010 1A61     		str	r2, [r3, #16]
 1476              	.L109:
3149:Generated_Source\PSoC4/CyLib.c ****     }
3150:Generated_Source\PSoC4/CyLib.c **** 
3151:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1477              		.loc 1 3151 0
 1478 0012 094C     		ldr	r4, .L110
 1479 0014 2569     		ldr	r5, [r4, #16]
 1480 0016 0A4B     		ldr	r3, .L110+8
 1481 0018 E818     		adds	r0, r5, r3
 1482              	.LVL107:
 1483 001a 0A49     		ldr	r1, .L110+12
 1484 001c FFF7FEFF 		bl	__aeabi_uidiv
 1485              	.LVL108:
 1486 0020 2073     		strb	r0, [r4, #12]
3152:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1487              		.loc 1 3152 0
 1488 0022 094B     		ldr	r3, .L110+16
 1489 0024 E818     		adds	r0, r5, r3
 1490 0026 FA21     		movs	r1, #250
 1491 0028 8900     		lsls	r1, r1, #2
 1492 002a FFF7FEFF 		bl	__aeabi_uidiv
 1493              	.LVL109:
 1494 002e A060     		str	r0, [r4, #8]
3153:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1495              		.loc 1 3153 0
 1496 0030 C003     		lsls	r0, r0, #15
 1497 0032 6060     		str	r0, [r4, #4]
3154:Generated_Source\PSoC4/CyLib.c **** }
 1498              		.loc 1 3154 0
 1499              		@ sp needed
 1500 0034 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 84


 1501              	.L111:
 1502 0036 C046     		.align	2
 1503              	.L110:
 1504 0038 00000000 		.word	.LANCHOR0
 1505 003c 006CDC02 		.word	48000000
 1506 0040 3F420F00 		.word	999999
 1507 0044 40420F00 		.word	1000000
 1508 0048 E7030000 		.word	999
 1509              		.cfi_endproc
 1510              	.LFE35:
 1511              		.size	CyDelayFreq, .-CyDelayFreq
 1512              		.section	.text.CySysTickStop,"ax",%progbits
 1513              		.align	2
 1514              		.global	CySysTickStop
 1515              		.code	16
 1516              		.thumb_func
 1517              		.type	CySysTickStop, %function
 1518              	CySysTickStop:
 1519              	.LFB39:
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c **** 
3157:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3158:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
3159:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3160:Generated_Source\PSoC4/CyLib.c **** *
3161:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
3162:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
3163:Generated_Source\PSoC4/CyLib.c **** *
3164:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default
3165:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact
3166:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
3167:Generated_Source\PSoC4/CyLib.c **** *
3168:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3169:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3170:Generated_Source\PSoC4/CyLib.c **** *
3171:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3172:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
3173:Generated_Source\PSoC4/CyLib.c **** {
3174:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
3175:Generated_Source\PSoC4/CyLib.c ****     {
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
3177:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
3178:Generated_Source\PSoC4/CyLib.c ****     }
3179:Generated_Source\PSoC4/CyLib.c **** 
3180:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
3181:Generated_Source\PSoC4/CyLib.c **** }
3182:Generated_Source\PSoC4/CyLib.c **** 
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3185:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
3186:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3187:Generated_Source\PSoC4/CyLib.c **** *
3188:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
3189:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
3190:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
3191:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
3192:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 85


3193:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
3194:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
3195:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
3196:Generated_Source\PSoC4/CyLib.c **** *
3197:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3198:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3199:Generated_Source\PSoC4/CyLib.c **** *
3200:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3201:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
3202:Generated_Source\PSoC4/CyLib.c **** {
3203:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3204:Generated_Source\PSoC4/CyLib.c **** 
3205:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3206:Generated_Source\PSoC4/CyLib.c ****     {
3207:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
3208:Generated_Source\PSoC4/CyLib.c ****     }
3209:Generated_Source\PSoC4/CyLib.c **** 
3210:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
3211:Generated_Source\PSoC4/CyLib.c **** 
3212:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
3213:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
3214:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3215:Generated_Source\PSoC4/CyLib.c **** 
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
3217:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
3218:Generated_Source\PSoC4/CyLib.c **** }
3219:Generated_Source\PSoC4/CyLib.c **** 
3220:Generated_Source\PSoC4/CyLib.c **** 
3221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
3223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3224:Generated_Source\PSoC4/CyLib.c **** *
3225:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
3226:Generated_Source\PSoC4/CyLib.c **** *
3227:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3228:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3229:Generated_Source\PSoC4/CyLib.c **** *
3230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3231:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
3232:Generated_Source\PSoC4/CyLib.c **** {
3233:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
3234:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
3235:Generated_Source\PSoC4/CyLib.c **** }
3236:Generated_Source\PSoC4/CyLib.c **** 
3237:Generated_Source\PSoC4/CyLib.c **** 
3238:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3239:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
3240:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3241:Generated_Source\PSoC4/CyLib.c **** *
3242:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
3243:Generated_Source\PSoC4/CyLib.c **** *
3244:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3245:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3246:Generated_Source\PSoC4/CyLib.c **** *
3247:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3248:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
3249:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 86


 1520              		.loc 1 3249 0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 1524              		@ link register save eliminated.
3250:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1525              		.loc 1 3250 0
 1526 0000 024A     		ldr	r2, .L113
 1527 0002 1368     		ldr	r3, [r2]
 1528 0004 0121     		movs	r1, #1
 1529 0006 8B43     		bics	r3, r1
 1530 0008 1360     		str	r3, [r2]
3251:Generated_Source\PSoC4/CyLib.c **** }
 1531              		.loc 1 3251 0
 1532              		@ sp needed
 1533 000a 7047     		bx	lr
 1534              	.L114:
 1535              		.align	2
 1536              	.L113:
 1537 000c 10E000E0 		.word	-536813552
 1538              		.cfi_endproc
 1539              	.LFE39:
 1540              		.size	CySysTickStop, .-CySysTickStop
 1541              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1542              		.align	2
 1543              		.global	CySysTickEnableInterrupt
 1544              		.code	16
 1545              		.thumb_func
 1546              		.type	CySysTickEnableInterrupt, %function
 1547              	CySysTickEnableInterrupt:
 1548              	.LFB40:
3252:Generated_Source\PSoC4/CyLib.c **** 
3253:Generated_Source\PSoC4/CyLib.c **** 
3254:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3255:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
3256:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3257:Generated_Source\PSoC4/CyLib.c **** *
3258:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
3259:Generated_Source\PSoC4/CyLib.c **** *
3260:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3261:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3262:Generated_Source\PSoC4/CyLib.c **** *
3263:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3264:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
3265:Generated_Source\PSoC4/CyLib.c **** {
 1549              		.loc 1 3265 0
 1550              		.cfi_startproc
 1551              		@ args = 0, pretend = 0, frame = 0
 1552              		@ frame_needed = 0, uses_anonymous_args = 0
 1553              		@ link register save eliminated.
3266:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1554              		.loc 1 3266 0
 1555 0000 024A     		ldr	r2, .L116
 1556 0002 1168     		ldr	r1, [r2]
 1557 0004 0223     		movs	r3, #2
 1558 0006 0B43     		orrs	r3, r1
 1559 0008 1360     		str	r3, [r2]
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 87


3267:Generated_Source\PSoC4/CyLib.c **** }
 1560              		.loc 1 3267 0
 1561              		@ sp needed
 1562 000a 7047     		bx	lr
 1563              	.L117:
 1564              		.align	2
 1565              	.L116:
 1566 000c 10E000E0 		.word	-536813552
 1567              		.cfi_endproc
 1568              	.LFE40:
 1569              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1570              		.section	.text.CySysTickEnable,"ax",%progbits
 1571              		.align	2
 1572              		.global	CySysTickEnable
 1573              		.code	16
 1574              		.thumb_func
 1575              		.type	CySysTickEnable, %function
 1576              	CySysTickEnable:
 1577              	.LFB38:
3232:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1578              		.loc 1 3232 0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 0
 1581              		@ frame_needed = 0, uses_anonymous_args = 0
 1582 0000 10B5     		push	{r4, lr}
 1583              		.cfi_def_cfa_offset 8
 1584              		.cfi_offset 4, -8
 1585              		.cfi_offset 14, -4
3233:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1586              		.loc 1 3233 0
 1587 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1588              	.LVL110:
3234:Generated_Source\PSoC4/CyLib.c **** }
 1589              		.loc 1 3234 0
 1590 0006 034A     		ldr	r2, .L119
 1591 0008 1168     		ldr	r1, [r2]
 1592 000a 0123     		movs	r3, #1
 1593 000c 0B43     		orrs	r3, r1
 1594 000e 1360     		str	r3, [r2]
3235:Generated_Source\PSoC4/CyLib.c **** 
 1595              		.loc 1 3235 0
 1596              		@ sp needed
 1597 0010 10BD     		pop	{r4, pc}
 1598              	.L120:
 1599 0012 C046     		.align	2
 1600              	.L119:
 1601 0014 10E000E0 		.word	-536813552
 1602              		.cfi_endproc
 1603              	.LFE38:
 1604              		.size	CySysTickEnable, .-CySysTickEnable
 1605              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1606              		.align	2
 1607              		.global	CySysTickDisableInterrupt
 1608              		.code	16
 1609              		.thumb_func
 1610              		.type	CySysTickDisableInterrupt, %function
 1611              	CySysTickDisableInterrupt:
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 88


 1612              	.LFB41:
3268:Generated_Source\PSoC4/CyLib.c **** 
3269:Generated_Source\PSoC4/CyLib.c **** 
3270:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3271:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
3272:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3273:Generated_Source\PSoC4/CyLib.c **** *
3274:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
3275:Generated_Source\PSoC4/CyLib.c **** *
3276:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3277:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3278:Generated_Source\PSoC4/CyLib.c **** *
3279:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3280:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
3281:Generated_Source\PSoC4/CyLib.c **** {
 1613              		.loc 1 3281 0
 1614              		.cfi_startproc
 1615              		@ args = 0, pretend = 0, frame = 0
 1616              		@ frame_needed = 0, uses_anonymous_args = 0
 1617              		@ link register save eliminated.
3282:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1618              		.loc 1 3282 0
 1619 0000 024A     		ldr	r2, .L122
 1620 0002 1368     		ldr	r3, [r2]
 1621 0004 0221     		movs	r1, #2
 1622 0006 8B43     		bics	r3, r1
 1623 0008 1360     		str	r3, [r2]
3283:Generated_Source\PSoC4/CyLib.c **** }
 1624              		.loc 1 3283 0
 1625              		@ sp needed
 1626 000a 7047     		bx	lr
 1627              	.L123:
 1628              		.align	2
 1629              	.L122:
 1630 000c 10E000E0 		.word	-536813552
 1631              		.cfi_endproc
 1632              	.LFE41:
 1633              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1634              		.section	.text.CySysTickSetReload,"ax",%progbits
 1635              		.align	2
 1636              		.global	CySysTickSetReload
 1637              		.code	16
 1638              		.thumb_func
 1639              		.type	CySysTickSetReload, %function
 1640              	CySysTickSetReload:
 1641              	.LFB42:
3284:Generated_Source\PSoC4/CyLib.c **** 
3285:Generated_Source\PSoC4/CyLib.c **** 
3286:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3287:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
3288:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3289:Generated_Source\PSoC4/CyLib.c **** *
3290:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
3291:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
3292:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
3293:Generated_Source\PSoC4/CyLib.c **** *
3294:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 89


3295:Generated_Source\PSoC4/CyLib.c **** *
3296:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3297:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
3298:Generated_Source\PSoC4/CyLib.c **** {
 1642              		.loc 1 3298 0
 1643              		.cfi_startproc
 1644              		@ args = 0, pretend = 0, frame = 0
 1645              		@ frame_needed = 0, uses_anonymous_args = 0
 1646              		@ link register save eliminated.
 1647              	.LVL111:
3299:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1648              		.loc 1 3299 0
 1649 0000 0002     		lsls	r0, r0, #8
 1650              	.LVL112:
 1651 0002 000A     		lsrs	r0, r0, #8
 1652 0004 014B     		ldr	r3, .L125
 1653 0006 1860     		str	r0, [r3]
3300:Generated_Source\PSoC4/CyLib.c **** }
 1654              		.loc 1 3300 0
 1655              		@ sp needed
 1656 0008 7047     		bx	lr
 1657              	.L126:
 1658 000a C046     		.align	2
 1659              	.L125:
 1660 000c 14E000E0 		.word	-536813548
 1661              		.cfi_endproc
 1662              	.LFE42:
 1663              		.size	CySysTickSetReload, .-CySysTickSetReload
 1664              		.section	.text.CySysTickGetReload,"ax",%progbits
 1665              		.align	2
 1666              		.global	CySysTickGetReload
 1667              		.code	16
 1668              		.thumb_func
 1669              		.type	CySysTickGetReload, %function
 1670              	CySysTickGetReload:
 1671              	.LFB43:
3301:Generated_Source\PSoC4/CyLib.c **** 
3302:Generated_Source\PSoC4/CyLib.c **** 
3303:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3304:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
3305:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3306:Generated_Source\PSoC4/CyLib.c **** *
3307:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
3308:Generated_Source\PSoC4/CyLib.c **** *
3309:Generated_Source\PSoC4/CyLib.c **** * \return
3310:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
3311:Generated_Source\PSoC4/CyLib.c **** *
3312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3313:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
3314:Generated_Source\PSoC4/CyLib.c **** {
 1672              		.loc 1 3314 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 0
 1675              		@ frame_needed = 0, uses_anonymous_args = 0
 1676              		@ link register save eliminated.
3315:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1677              		.loc 1 3315 0
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 90


 1678 0000 024B     		ldr	r3, .L128
 1679 0002 1868     		ldr	r0, [r3]
 1680 0004 0002     		lsls	r0, r0, #8
 1681 0006 000A     		lsrs	r0, r0, #8
3316:Generated_Source\PSoC4/CyLib.c **** }
 1682              		.loc 1 3316 0
 1683              		@ sp needed
 1684 0008 7047     		bx	lr
 1685              	.L129:
 1686 000a C046     		.align	2
 1687              	.L128:
 1688 000c 14E000E0 		.word	-536813548
 1689              		.cfi_endproc
 1690              	.LFE43:
 1691              		.size	CySysTickGetReload, .-CySysTickGetReload
 1692              		.section	.text.CySysTickGetValue,"ax",%progbits
 1693              		.align	2
 1694              		.global	CySysTickGetValue
 1695              		.code	16
 1696              		.thumb_func
 1697              		.type	CySysTickGetValue, %function
 1698              	CySysTickGetValue:
 1699              	.LFB44:
3317:Generated_Source\PSoC4/CyLib.c **** 
3318:Generated_Source\PSoC4/CyLib.c **** 
3319:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3320:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
3321:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3322:Generated_Source\PSoC4/CyLib.c **** *
3323:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
3324:Generated_Source\PSoC4/CyLib.c **** *
3325:Generated_Source\PSoC4/CyLib.c **** * \return
3326:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
3327:Generated_Source\PSoC4/CyLib.c **** *
3328:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3329:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
3330:Generated_Source\PSoC4/CyLib.c **** {
 1700              		.loc 1 3330 0
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 0
 1703              		@ frame_needed = 0, uses_anonymous_args = 0
 1704              		@ link register save eliminated.
3331:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1705              		.loc 1 3331 0
 1706 0000 024B     		ldr	r3, .L131
 1707 0002 1868     		ldr	r0, [r3]
 1708 0004 0002     		lsls	r0, r0, #8
 1709 0006 000A     		lsrs	r0, r0, #8
3332:Generated_Source\PSoC4/CyLib.c **** }
 1710              		.loc 1 3332 0
 1711              		@ sp needed
 1712 0008 7047     		bx	lr
 1713              	.L132:
 1714 000a C046     		.align	2
 1715              	.L131:
 1716 000c 18E000E0 		.word	-536813544
 1717              		.cfi_endproc
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 91


 1718              	.LFE44:
 1719              		.size	CySysTickGetValue, .-CySysTickGetValue
 1720              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1721              		.align	2
 1722              		.global	CySysTickSetClockSource
 1723              		.code	16
 1724              		.thumb_func
 1725              		.type	CySysTickSetClockSource, %function
 1726              	CySysTickSetClockSource:
 1727              	.LFB45:
3333:Generated_Source\PSoC4/CyLib.c **** 
3334:Generated_Source\PSoC4/CyLib.c **** 
3335:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
3336:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3337:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
3338:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3339:Generated_Source\PSoC4/CyLib.c ****     *
3340:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
3341:Generated_Source\PSoC4/CyLib.c ****     *
3342:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
3343:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
3344:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
3345:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
3346:Generated_Source\PSoC4/CyLib.c ****     *
3347:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change
3348:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be
3349:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.
3350:Generated_Source\PSoC4/CyLib.c ****     *
3351:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
3352:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
3353:Generated_Source\PSoC4/CyLib.c ****     *
3354:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
3355:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
3356:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
3357:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3358:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3359:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3360:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3361:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
3362:Generated_Source\PSoC4/CyLib.c ****     {
 1728              		.loc 1 3362 0
 1729              		.cfi_startproc
 1730              		@ args = 0, pretend = 0, frame = 0
 1731              		@ frame_needed = 0, uses_anonymous_args = 0
 1732              		@ link register save eliminated.
 1733              	.LVL113:
3363:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1734              		.loc 1 3363 0
 1735 0000 0128     		cmp	r0, #1
 1736 0002 05D1     		bne	.L134
3364:Generated_Source\PSoC4/CyLib.c ****         {
3365:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1737              		.loc 1 3365 0
 1738 0004 054A     		ldr	r2, .L136
 1739 0006 1168     		ldr	r1, [r2]
 1740 0008 0423     		movs	r3, #4
 1741 000a 0B43     		orrs	r3, r1
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 92


 1742 000c 1360     		str	r3, [r2]
 1743 000e 04E0     		b	.L133
 1744              	.L134:
3366:Generated_Source\PSoC4/CyLib.c ****         }
3367:Generated_Source\PSoC4/CyLib.c ****         else
3368:Generated_Source\PSoC4/CyLib.c ****         {
3369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1745              		.loc 1 3369 0
 1746 0010 024A     		ldr	r2, .L136
 1747 0012 1368     		ldr	r3, [r2]
 1748 0014 0421     		movs	r1, #4
 1749 0016 8B43     		bics	r3, r1
 1750 0018 1360     		str	r3, [r2]
 1751              	.L133:
3370:Generated_Source\PSoC4/CyLib.c ****         }
3371:Generated_Source\PSoC4/CyLib.c ****     }
 1752              		.loc 1 3371 0
 1753              		@ sp needed
 1754 001a 7047     		bx	lr
 1755              	.L137:
 1756              		.align	2
 1757              	.L136:
 1758 001c 10E000E0 		.word	-536813552
 1759              		.cfi_endproc
 1760              	.LFE45:
 1761              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1762              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1763              		.align	2
 1764              		.global	CySysTickGetClockSource
 1765              		.code	16
 1766              		.thumb_func
 1767              		.type	CySysTickGetClockSource, %function
 1768              	CySysTickGetClockSource:
 1769              	.LFB46:
3372:Generated_Source\PSoC4/CyLib.c **** 
3373:Generated_Source\PSoC4/CyLib.c **** 
3374:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3375:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
3376:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3377:Generated_Source\PSoC4/CyLib.c ****     *
3378:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
3379:Generated_Source\PSoC4/CyLib.c ****     *
3380:Generated_Source\PSoC4/CyLib.c ****     *  \return
3381:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
3382:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3383:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3384:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3385:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3386:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
3387:Generated_Source\PSoC4/CyLib.c ****     {
 1770              		.loc 1 3387 0
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 0
 1773              		@ frame_needed = 0, uses_anonymous_args = 0
 1774              		@ link register save eliminated.
3388:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1775              		.loc 1 3388 0
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 93


 1776 0000 024B     		ldr	r3, .L139
 1777 0002 1868     		ldr	r0, [r3]
 1778 0004 8008     		lsrs	r0, r0, #2
 1779 0006 0123     		movs	r3, #1
 1780 0008 1840     		ands	r0, r3
3389:Generated_Source\PSoC4/CyLib.c ****     }
 1781              		.loc 1 3389 0
 1782              		@ sp needed
 1783 000a 7047     		bx	lr
 1784              	.L140:
 1785              		.align	2
 1786              	.L139:
 1787 000c 10E000E0 		.word	-536813552
 1788              		.cfi_endproc
 1789              	.LFE46:
 1790              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1791              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1792              		.align	2
 1793              		.global	CySysTickGetCountFlag
 1794              		.code	16
 1795              		.thumb_func
 1796              		.type	CySysTickGetCountFlag, %function
 1797              	CySysTickGetCountFlag:
 1798              	.LFB47:
3390:Generated_Source\PSoC4/CyLib.c **** 
3391:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3392:Generated_Source\PSoC4/CyLib.c **** 
3393:Generated_Source\PSoC4/CyLib.c **** 
3394:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3395:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3396:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3397:Generated_Source\PSoC4/CyLib.c **** *
3398:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3399:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3400:Generated_Source\PSoC4/CyLib.c **** *
3401:Generated_Source\PSoC4/CyLib.c **** * \return
3402:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3403:Generated_Source\PSoC4/CyLib.c **** *
3404:Generated_Source\PSoC4/CyLib.c **** *
3405:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3406:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3407:Generated_Source\PSoC4/CyLib.c **** *
3408:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3409:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3410:Generated_Source\PSoC4/CyLib.c **** {
 1799              		.loc 1 3410 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 0
 1802              		@ frame_needed = 0, uses_anonymous_args = 0
 1803              		@ link register save eliminated.
3411:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1804              		.loc 1 3411 0
 1805 0000 024B     		ldr	r3, .L142
 1806 0002 1868     		ldr	r0, [r3]
 1807 0004 000C     		lsrs	r0, r0, #16
 1808 0006 0123     		movs	r3, #1
 1809 0008 1840     		ands	r0, r3
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 94


3412:Generated_Source\PSoC4/CyLib.c **** }
 1810              		.loc 1 3412 0
 1811              		@ sp needed
 1812 000a 7047     		bx	lr
 1813              	.L143:
 1814              		.align	2
 1815              	.L142:
 1816 000c 10E000E0 		.word	-536813552
 1817              		.cfi_endproc
 1818              	.LFE47:
 1819              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1820              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1821              		.align	2
 1822              		.code	16
 1823              		.thumb_func
 1824              		.type	CySysTickServiceCallbacks, %function
 1825              	CySysTickServiceCallbacks:
 1826              	.LFB51:
3413:Generated_Source\PSoC4/CyLib.c **** 
3414:Generated_Source\PSoC4/CyLib.c **** 
3415:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3416:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3417:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3418:Generated_Source\PSoC4/CyLib.c **** *
3419:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3420:Generated_Source\PSoC4/CyLib.c **** *
3421:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3422:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3423:Generated_Source\PSoC4/CyLib.c **** {
3424:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3425:Generated_Source\PSoC4/CyLib.c **** }
3426:Generated_Source\PSoC4/CyLib.c **** 
3427:Generated_Source\PSoC4/CyLib.c **** 
3428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3431:Generated_Source\PSoC4/CyLib.c **** *
3432:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3433:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3434:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3435:Generated_Source\PSoC4/CyLib.c **** *
3436:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3437:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3438:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3439:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3440:Generated_Source\PSoC4/CyLib.c **** *  functions.
3441:Generated_Source\PSoC4/CyLib.c **** *
3442:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3443:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3444:Generated_Source\PSoC4/CyLib.c **** *
3445:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3446:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3447:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3448:Generated_Source\PSoC4/CyLib.c **** *
3449:Generated_Source\PSoC4/CyLib.c **** * \return
3450:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3451:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 95


3452:Generated_Source\PSoC4/CyLib.c **** *
3453:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3454:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3455:Generated_Source\PSoC4/CyLib.c **** *
3456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3457:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3458:Generated_Source\PSoC4/CyLib.c **** {
3459:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3460:Generated_Source\PSoC4/CyLib.c **** 
3461:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3462:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3463:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3464:Generated_Source\PSoC4/CyLib.c **** }
3465:Generated_Source\PSoC4/CyLib.c **** 
3466:Generated_Source\PSoC4/CyLib.c **** 
3467:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3468:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3469:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3470:Generated_Source\PSoC4/CyLib.c **** *
3471:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3472:Generated_Source\PSoC4/CyLib.c **** *
3473:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3474:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3475:Generated_Source\PSoC4/CyLib.c **** *
3476:Generated_Source\PSoC4/CyLib.c **** * \return
3477:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3478:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3479:Generated_Source\PSoC4/CyLib.c **** *
3480:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3481:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3482:Generated_Source\PSoC4/CyLib.c **** {
3483:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3484:Generated_Source\PSoC4/CyLib.c **** }
3485:Generated_Source\PSoC4/CyLib.c **** 
3486:Generated_Source\PSoC4/CyLib.c **** 
3487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3490:Generated_Source\PSoC4/CyLib.c **** *
3491:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3492:Generated_Source\PSoC4/CyLib.c **** *
3493:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3494:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3495:Generated_Source\PSoC4/CyLib.c **** {
 1827              		.loc 1 3495 0
 1828              		.cfi_startproc
 1829              		@ args = 0, pretend = 0, frame = 0
 1830              		@ frame_needed = 0, uses_anonymous_args = 0
 1831 0000 10B5     		push	{r4, lr}
 1832              		.cfi_def_cfa_offset 8
 1833              		.cfi_offset 4, -8
 1834              		.cfi_offset 14, -4
3496:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3497:Generated_Source\PSoC4/CyLib.c **** 
3498:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3499:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1835              		.loc 1 3499 0
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 96


 1836 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1837              	.LVL114:
 1838 0006 0128     		cmp	r0, #1
 1839 0008 0BD1     		bne	.L144
 1840 000a 07E0     		b	.L149
 1841              	.LVL115:
 1842              	.L148:
3500:Generated_Source\PSoC4/CyLib.c ****     {
3501:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3502:Generated_Source\PSoC4/CyLib.c ****         {
3503:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1843              		.loc 1 3503 0
 1844 000c A300     		lsls	r3, r4, #2
 1845 000e 054A     		ldr	r2, .L150
 1846 0010 9B58     		ldr	r3, [r3, r2]
 1847 0012 002B     		cmp	r3, #0
 1848 0014 00D0     		beq	.L147
3504:Generated_Source\PSoC4/CyLib.c ****             {
3505:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1849              		.loc 1 3505 0
 1850 0016 9847     		blx	r3
 1851              	.LVL116:
 1852              	.L147:
3501:Generated_Source\PSoC4/CyLib.c ****         {
 1853              		.loc 1 3501 0 discriminator 2
 1854 0018 0134     		adds	r4, r4, #1
 1855              	.LVL117:
 1856 001a 00E0     		b	.L145
 1857              	.LVL118:
 1858              	.L149:
 1859 001c 0024     		movs	r4, #0
 1860              	.L145:
 1861              	.LVL119:
3501:Generated_Source\PSoC4/CyLib.c ****         {
 1862              		.loc 1 3501 0 is_stmt 0 discriminator 1
 1863 001e 042C     		cmp	r4, #4
 1864 0020 F4D9     		bls	.L148
 1865              	.LVL120:
 1866              	.L144:
3506:Generated_Source\PSoC4/CyLib.c ****             }
3507:Generated_Source\PSoC4/CyLib.c ****         }
3508:Generated_Source\PSoC4/CyLib.c ****     }
3509:Generated_Source\PSoC4/CyLib.c **** }
 1867              		.loc 1 3509 0 is_stmt 1
 1868              		@ sp needed
 1869 0022 10BD     		pop	{r4, pc}
 1870              	.L151:
 1871              		.align	2
 1872              	.L150:
 1873 0024 00000000 		.word	.LANCHOR2
 1874              		.cfi_endproc
 1875              	.LFE51:
 1876              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1877              		.section	.text.CySysTickClear,"ax",%progbits
 1878              		.align	2
 1879              		.global	CySysTickClear
 1880              		.code	16
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 97


 1881              		.thumb_func
 1882              		.type	CySysTickClear, %function
 1883              	CySysTickClear:
 1884              	.LFB48:
3423:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1885              		.loc 1 3423 0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 0
 1888              		@ frame_needed = 0, uses_anonymous_args = 0
 1889              		@ link register save eliminated.
3424:Generated_Source\PSoC4/CyLib.c **** }
 1890              		.loc 1 3424 0
 1891 0000 0022     		movs	r2, #0
 1892 0002 014B     		ldr	r3, .L153
 1893 0004 1A60     		str	r2, [r3]
3425:Generated_Source\PSoC4/CyLib.c **** 
 1894              		.loc 1 3425 0
 1895              		@ sp needed
 1896 0006 7047     		bx	lr
 1897              	.L154:
 1898              		.align	2
 1899              	.L153:
 1900 0008 18E000E0 		.word	-536813544
 1901              		.cfi_endproc
 1902              	.LFE48:
 1903              		.size	CySysTickClear, .-CySysTickClear
 1904              		.section	.text.CySysTickInit,"ax",%progbits
 1905              		.align	2
 1906              		.global	CySysTickInit
 1907              		.code	16
 1908              		.thumb_func
 1909              		.type	CySysTickInit, %function
 1910              	CySysTickInit:
 1911              	.LFB37:
3202:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1912              		.loc 1 3202 0
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 0
 1915              		@ frame_needed = 0, uses_anonymous_args = 0
 1916 0000 10B5     		push	{r4, lr}
 1917              		.cfi_def_cfa_offset 8
 1918              		.cfi_offset 4, -8
 1919              		.cfi_offset 14, -4
 1920              	.LVL121:
3205:Generated_Source\PSoC4/CyLib.c ****     {
 1921              		.loc 1 3205 0
 1922 0002 0023     		movs	r3, #0
 1923 0004 04E0     		b	.L156
 1924              	.LVL122:
 1925              	.L157:
3207:Generated_Source\PSoC4/CyLib.c ****     }
 1926              		.loc 1 3207 0 discriminator 3
 1927 0006 9900     		lsls	r1, r3, #2
 1928 0008 0020     		movs	r0, #0
 1929 000a 0B4A     		ldr	r2, .L158
 1930 000c 8850     		str	r0, [r1, r2]
3205:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 98


 1931              		.loc 1 3205 0 discriminator 3
 1932 000e 0133     		adds	r3, r3, #1
 1933              	.LVL123:
 1934              	.L156:
3205:Generated_Source\PSoC4/CyLib.c ****     {
 1935              		.loc 1 3205 0 is_stmt 0 discriminator 1
 1936 0010 042B     		cmp	r3, #4
 1937 0012 F8D9     		bls	.L157
3210:Generated_Source\PSoC4/CyLib.c **** 
 1938              		.loc 1 3210 0 is_stmt 1
 1939 0014 0949     		ldr	r1, .L158+4
 1940 0016 0F20     		movs	r0, #15
 1941 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1942              	.LVL124:
3213:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 1943              		.loc 1 3213 0
 1944 001c 0120     		movs	r0, #1
 1945 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1946              	.LVL125:
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1947              		.loc 1 3216 0
 1948 0022 074B     		ldr	r3, .L158+8
 1949 0024 1869     		ldr	r0, [r3, #16]
 1950 0026 FA21     		movs	r1, #250
 1951 0028 8900     		lsls	r1, r1, #2
 1952 002a FFF7FEFF 		bl	__aeabi_uidiv
 1953              	.LVL126:
 1954 002e FFF7FEFF 		bl	CySysTickSetReload
 1955              	.LVL127:
3217:Generated_Source\PSoC4/CyLib.c **** }
 1956              		.loc 1 3217 0
 1957 0032 FFF7FEFF 		bl	CySysTickClear
 1958              	.LVL128:
3218:Generated_Source\PSoC4/CyLib.c **** 
 1959              		.loc 1 3218 0
 1960              		@ sp needed
 1961 0036 10BD     		pop	{r4, pc}
 1962              	.L159:
 1963              		.align	2
 1964              	.L158:
 1965 0038 00000000 		.word	.LANCHOR2
 1966 003c 00000000 		.word	CySysTickServiceCallbacks
 1967 0040 00000000 		.word	.LANCHOR0
 1968              		.cfi_endproc
 1969              	.LFE37:
 1970              		.size	CySysTickInit, .-CySysTickInit
 1971              		.section	.text.CySysTickStart,"ax",%progbits
 1972              		.align	2
 1973              		.global	CySysTickStart
 1974              		.code	16
 1975              		.thumb_func
 1976              		.type	CySysTickStart, %function
 1977              	CySysTickStart:
 1978              	.LFB36:
3173:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1979              		.loc 1 3173 0
 1980              		.cfi_startproc
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 99


 1981              		@ args = 0, pretend = 0, frame = 0
 1982              		@ frame_needed = 0, uses_anonymous_args = 0
 1983 0000 10B5     		push	{r4, lr}
 1984              		.cfi_def_cfa_offset 8
 1985              		.cfi_offset 4, -8
 1986              		.cfi_offset 14, -4
3174:Generated_Source\PSoC4/CyLib.c ****     {
 1987              		.loc 1 3174 0
 1988 0002 064B     		ldr	r3, .L162
 1989 0004 5B69     		ldr	r3, [r3, #20]
 1990 0006 002B     		cmp	r3, #0
 1991 0008 04D1     		bne	.L161
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1992              		.loc 1 3176 0
 1993 000a FFF7FEFF 		bl	CySysTickInit
 1994              	.LVL129:
3177:Generated_Source\PSoC4/CyLib.c ****     }
 1995              		.loc 1 3177 0
 1996 000e 0122     		movs	r2, #1
 1997 0010 024B     		ldr	r3, .L162
 1998 0012 5A61     		str	r2, [r3, #20]
 1999              	.L161:
3180:Generated_Source\PSoC4/CyLib.c **** }
 2000              		.loc 1 3180 0
 2001 0014 FFF7FEFF 		bl	CySysTickEnable
 2002              	.LVL130:
3181:Generated_Source\PSoC4/CyLib.c **** 
 2003              		.loc 1 3181 0
 2004              		@ sp needed
 2005 0018 10BD     		pop	{r4, pc}
 2006              	.L163:
 2007 001a C046     		.align	2
 2008              	.L162:
 2009 001c 00000000 		.word	.LANCHOR2
 2010              		.cfi_endproc
 2011              	.LFE36:
 2012              		.size	CySysTickStart, .-CySysTickStart
 2013              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2014              		.align	2
 2015              		.global	CySysTickSetCallback
 2016              		.code	16
 2017              		.thumb_func
 2018              		.type	CySysTickSetCallback, %function
 2019              	CySysTickSetCallback:
 2020              	.LFB49:
3458:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2021              		.loc 1 3458 0
 2022              		.cfi_startproc
 2023              		@ args = 0, pretend = 0, frame = 0
 2024              		@ frame_needed = 0, uses_anonymous_args = 0
 2025              		@ link register save eliminated.
 2026              	.LVL131:
3461:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2027              		.loc 1 3461 0
 2028 0000 024A     		ldr	r2, .L165
 2029 0002 8300     		lsls	r3, r0, #2
 2030 0004 9858     		ldr	r0, [r3, r2]
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 100


 2031              	.LVL132:
3462:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2032              		.loc 1 3462 0
 2033 0006 9950     		str	r1, [r3, r2]
3464:Generated_Source\PSoC4/CyLib.c **** 
 2034              		.loc 1 3464 0
 2035              		@ sp needed
 2036 0008 7047     		bx	lr
 2037              	.L166:
 2038 000a C046     		.align	2
 2039              	.L165:
 2040 000c 00000000 		.word	.LANCHOR2
 2041              		.cfi_endproc
 2042              	.LFE49:
 2043              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2044              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2045              		.align	2
 2046              		.global	CySysTickGetCallback
 2047              		.code	16
 2048              		.thumb_func
 2049              		.type	CySysTickGetCallback, %function
 2050              	CySysTickGetCallback:
 2051              	.LFB50:
3482:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2052              		.loc 1 3482 0
 2053              		.cfi_startproc
 2054              		@ args = 0, pretend = 0, frame = 0
 2055              		@ frame_needed = 0, uses_anonymous_args = 0
 2056              		@ link register save eliminated.
 2057              	.LVL133:
3483:Generated_Source\PSoC4/CyLib.c **** }
 2058              		.loc 1 3483 0
 2059 0000 8000     		lsls	r0, r0, #2
 2060              	.LVL134:
 2061 0002 014B     		ldr	r3, .L168
 2062 0004 C058     		ldr	r0, [r0, r3]
3484:Generated_Source\PSoC4/CyLib.c **** 
 2063              		.loc 1 3484 0
 2064              		@ sp needed
 2065 0006 7047     		bx	lr
 2066              	.L169:
 2067              		.align	2
 2068              	.L168:
 2069 0008 00000000 		.word	.LANCHOR2
 2070              		.cfi_endproc
 2071              	.LFE50:
 2072              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2073              		.section	.text.CyGetUniqueId,"ax",%progbits
 2074              		.align	2
 2075              		.global	CyGetUniqueId
 2076              		.code	16
 2077              		.thumb_func
 2078              		.type	CyGetUniqueId, %function
 2079              	CyGetUniqueId:
 2080              	.LFB52:
3510:Generated_Source\PSoC4/CyLib.c **** 
3511:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 101


3512:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3513:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3514:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3515:Generated_Source\PSoC4/CyLib.c **** *
3516:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3517:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3518:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3519:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3520:Generated_Source\PSoC4/CyLib.c **** *
3521:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3522:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3523:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3524:Generated_Source\PSoC4/CyLib.c **** *
3525:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3526:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3527:Generated_Source\PSoC4/CyLib.c **** {
 2081              		.loc 1 3527 0
 2082              		.cfi_startproc
 2083              		@ args = 0, pretend = 0, frame = 0
 2084              		@ frame_needed = 0, uses_anonymous_args = 0
 2085              		@ link register save eliminated.
 2086              	.LVL135:
3528:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2087              		.loc 1 3529 0
 2088 0000 134B     		ldr	r3, .L171
 2089 0002 1B78     		ldrb	r3, [r3]
 2090 0004 DAB2     		uxtb	r2, r3
 2091 0006 0260     		str	r2, [r0]
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2092              		.loc 1 3530 0
 2093 0008 124B     		ldr	r3, .L171+4
 2094 000a 1B78     		ldrb	r3, [r3]
 2095 000c 1B02     		lsls	r3, r3, #8
 2096 000e 1343     		orrs	r3, r2
 2097 0010 0360     		str	r3, [r0]
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2098              		.loc 1 3531 0
 2099 0012 114A     		ldr	r2, .L171+8
 2100 0014 1278     		ldrb	r2, [r2]
 2101 0016 1204     		lsls	r2, r2, #16
 2102 0018 1343     		orrs	r3, r2
 2103 001a 0360     		str	r3, [r0]
3532:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2104              		.loc 1 3532 0
 2105 001c 0F4A     		ldr	r2, .L171+12
 2106 001e 1278     		ldrb	r2, [r2]
 2107 0020 1206     		lsls	r2, r2, #24
 2108 0022 1343     		orrs	r3, r2
 2109 0024 0360     		str	r3, [r0]
3533:Generated_Source\PSoC4/CyLib.c **** 
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2110              		.loc 1 3534 0
 2111 0026 0E4B     		ldr	r3, .L171+16
 2112 0028 1B78     		ldrb	r3, [r3]
 2113 002a DAB2     		uxtb	r2, r3
 2114 002c 4260     		str	r2, [r0, #4]
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 102


3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2115              		.loc 1 3535 0
 2116 002e 0D4B     		ldr	r3, .L171+20
 2117 0030 1B78     		ldrb	r3, [r3]
 2118 0032 1B02     		lsls	r3, r3, #8
 2119 0034 1343     		orrs	r3, r2
 2120 0036 4360     		str	r3, [r0, #4]
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2121              		.loc 1 3536 0
 2122 0038 0B4A     		ldr	r2, .L171+24
 2123 003a 1278     		ldrb	r2, [r2]
 2124 003c 1204     		lsls	r2, r2, #16
 2125 003e 1343     		orrs	r3, r2
 2126 0040 4360     		str	r3, [r0, #4]
3537:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2127              		.loc 1 3537 0
 2128 0042 0A4A     		ldr	r2, .L171+28
 2129 0044 1278     		ldrb	r2, [r2]
 2130 0046 1206     		lsls	r2, r2, #24
 2131 0048 1343     		orrs	r3, r2
 2132 004a 4360     		str	r3, [r0, #4]
3538:Generated_Source\PSoC4/CyLib.c **** #else
3539:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3540:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3541:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3542:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3543:Generated_Source\PSoC4/CyLib.c **** 
3544:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3545:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3546:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3547:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3549:Generated_Source\PSoC4/CyLib.c **** }
 2133              		.loc 1 3549 0
 2134              		@ sp needed
 2135 004c 7047     		bx	lr
 2136              	.L172:
 2137 004e C046     		.align	2
 2138              	.L171:
 2139 0050 78F1FF0F 		.word	268431736
 2140 0054 79F1FF0F 		.word	268431737
 2141 0058 7AF1FF0F 		.word	268431738
 2142 005c 7BF1FF0F 		.word	268431739
 2143 0060 7CF1FF0F 		.word	268431740
 2144 0064 7DF1FF0F 		.word	268431741
 2145 0068 7EF1FF0F 		.word	268431742
 2146 006c 7FF1FF0F 		.word	268431743
 2147              		.cfi_endproc
 2148              	.LFE52:
 2149              		.size	CyGetUniqueId, .-CyGetUniqueId
 2150              		.global	CySysClkPumpConfig
 2151              		.global	cyImoFreqMhz2Reg
 2152              		.global	CySysTickInitVar
 2153              		.global	cydelay32kMs
 2154              		.global	cydelayFreqMhz
 2155              		.global	cydelayFreqKhz
 2156              		.global	cydelayFreqHz
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 103


 2157              		.section	.rodata
 2158              		.align	2
 2159              		.set	.LANCHOR1,. + 0
 2160              		.type	cyImoFreqMhz2Reg, %object
 2161              		.size	cyImoFreqMhz2Reg, 46
 2162              	cyImoFreqMhz2Reg:
 2163 0000 03       		.byte	3
 2164 0001 04       		.byte	4
 2165 0002 05       		.byte	5
 2166 0003 06       		.byte	6
 2167 0004 07       		.byte	7
 2168 0005 08       		.byte	8
 2169 0006 09       		.byte	9
 2170 0007 0A       		.byte	10
 2171 0008 0B       		.byte	11
 2172 0009 0C       		.byte	12
 2173 000a 0E       		.byte	14
 2174 000b 0F       		.byte	15
 2175 000c 10       		.byte	16
 2176 000d 11       		.byte	17
 2177 000e 12       		.byte	18
 2178 000f 13       		.byte	19
 2179 0010 14       		.byte	20
 2180 0011 15       		.byte	21
 2181 0012 16       		.byte	22
 2182 0013 17       		.byte	23
 2183 0014 18       		.byte	24
 2184 0015 19       		.byte	25
 2185 0016 1B       		.byte	27
 2186 0017 1C       		.byte	28
 2187 0018 1D       		.byte	29
 2188 0019 1E       		.byte	30
 2189 001a 1F       		.byte	31
 2190 001b 20       		.byte	32
 2191 001c 21       		.byte	33
 2192 001d 22       		.byte	34
 2193 001e 23       		.byte	35
 2194 001f 25       		.byte	37
 2195 0020 26       		.byte	38
 2196 0021 27       		.byte	39
 2197 0022 28       		.byte	40
 2198 0023 29       		.byte	41
 2199 0024 2A       		.byte	42
 2200 0025 2B       		.byte	43
 2201 0026 2E       		.byte	46
 2202 0027 2F       		.byte	47
 2203 0028 30       		.byte	48
 2204 0029 31       		.byte	49
 2205 002a 32       		.byte	50
 2206 002b 33       		.byte	51
 2207 002c 34       		.byte	52
 2208 002d 35       		.byte	53
 2209              		.data
 2210              		.align	2
 2211              		.set	.LANCHOR0,. + 0
 2212              		.type	CySysClkPumpConfig, %object
 2213              		.size	CySysClkPumpConfig, 4
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 104


 2214              	CySysClkPumpConfig:
 2215 0000 01000000 		.word	1
 2216              		.type	cydelay32kMs, %object
 2217              		.size	cydelay32kMs, 4
 2218              	cydelay32kMs:
 2219 0004 0000C05D 		.word	1572864000
 2220              		.type	cydelayFreqKhz, %object
 2221              		.size	cydelayFreqKhz, 4
 2222              	cydelayFreqKhz:
 2223 0008 80BB0000 		.word	48000
 2224              		.type	cydelayFreqMhz, %object
 2225              		.size	cydelayFreqMhz, 1
 2226              	cydelayFreqMhz:
 2227 000c 30       		.byte	48
 2228 000d 000000   		.space	3
 2229              		.type	cydelayFreqHz, %object
 2230              		.size	cydelayFreqHz, 4
 2231              	cydelayFreqHz:
 2232 0010 006CDC02 		.word	48000000
 2233              		.bss
 2234              		.align	2
 2235              		.set	.LANCHOR2,. + 0
 2236              		.type	CySysTickCallbacks, %object
 2237              		.size	CySysTickCallbacks, 20
 2238              	CySysTickCallbacks:
 2239 0000 00000000 		.space	20
 2239      00000000 
 2239      00000000 
 2239      00000000 
 2239      00000000 
 2240              		.type	CySysTickInitVar, %object
 2241              		.size	CySysTickInitVar, 4
 2242              	CySysTickInitVar:
 2243 0014 00000000 		.space	4
 2244              		.text
 2245              	.Letext0:
 2246              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2247              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2248              		.section	.debug_info,"",%progbits
 2249              	.Ldebug_info0:
 2250 0000 CD0B0000 		.4byte	0xbcd
 2251 0004 0400     		.2byte	0x4
 2252 0006 00000000 		.4byte	.Ldebug_abbrev0
 2253 000a 04       		.byte	0x4
 2254 000b 01       		.uleb128 0x1
 2255 000c 67000000 		.4byte	.LASF112
 2256 0010 0C       		.byte	0xc
 2257 0011 16070000 		.4byte	.LASF113
 2258 0015 0A050000 		.4byte	.LASF114
 2259 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2260 001d 00000000 		.4byte	0
 2261 0021 00000000 		.4byte	.Ldebug_line0
 2262 0025 02       		.uleb128 0x2
 2263 0026 01       		.byte	0x1
 2264 0027 06       		.byte	0x6
 2265 0028 69010000 		.4byte	.LASF0
 2266 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 105


 2267 002d 01       		.byte	0x1
 2268 002e 08       		.byte	0x8
 2269 002f 93050000 		.4byte	.LASF1
 2270 0033 02       		.uleb128 0x2
 2271 0034 02       		.byte	0x2
 2272 0035 05       		.byte	0x5
 2273 0036 A1050000 		.4byte	.LASF2
 2274 003a 02       		.uleb128 0x2
 2275 003b 02       		.byte	0x2
 2276 003c 07       		.byte	0x7
 2277 003d 4D030000 		.4byte	.LASF3
 2278 0041 02       		.uleb128 0x2
 2279 0042 04       		.byte	0x4
 2280 0043 05       		.byte	0x5
 2281 0044 A8010000 		.4byte	.LASF4
 2282 0048 02       		.uleb128 0x2
 2283 0049 04       		.byte	0x4
 2284 004a 07       		.byte	0x7
 2285 004b C0020000 		.4byte	.LASF5
 2286 004f 02       		.uleb128 0x2
 2287 0050 08       		.byte	0x8
 2288 0051 05       		.byte	0x5
 2289 0052 5B010000 		.4byte	.LASF6
 2290 0056 02       		.uleb128 0x2
 2291 0057 08       		.byte	0x8
 2292 0058 07       		.byte	0x7
 2293 0059 F5000000 		.4byte	.LASF7
 2294 005d 03       		.uleb128 0x3
 2295 005e 04       		.byte	0x4
 2296 005f 05       		.byte	0x5
 2297 0060 696E7400 		.ascii	"int\000"
 2298 0064 02       		.uleb128 0x2
 2299 0065 04       		.byte	0x4
 2300 0066 07       		.byte	0x7
 2301 0067 A4020000 		.4byte	.LASF8
 2302 006b 04       		.uleb128 0x4
 2303 006c C8010000 		.4byte	.LASF9
 2304 0070 02       		.byte	0x2
 2305 0071 FB01     		.2byte	0x1fb
 2306 0073 2C000000 		.4byte	0x2c
 2307 0077 04       		.uleb128 0x4
 2308 0078 0F000000 		.4byte	.LASF10
 2309 007c 02       		.byte	0x2
 2310 007d FC01     		.2byte	0x1fc
 2311 007f 3A000000 		.4byte	0x3a
 2312 0083 04       		.uleb128 0x4
 2313 0084 08020000 		.4byte	.LASF11
 2314 0088 02       		.byte	0x2
 2315 0089 FD01     		.2byte	0x1fd
 2316 008b 48000000 		.4byte	0x48
 2317 008f 02       		.uleb128 0x2
 2318 0090 04       		.byte	0x4
 2319 0091 04       		.byte	0x4
 2320 0092 8D040000 		.4byte	.LASF12
 2321 0096 02       		.uleb128 0x2
 2322 0097 08       		.byte	0x8
 2323 0098 04       		.byte	0x4
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 106


 2324 0099 E4010000 		.4byte	.LASF13
 2325 009d 02       		.uleb128 0x2
 2326 009e 01       		.byte	0x1
 2327 009f 08       		.byte	0x8
 2328 00a0 F5050000 		.4byte	.LASF14
 2329 00a4 04       		.uleb128 0x4
 2330 00a5 FC060000 		.4byte	.LASF15
 2331 00a9 02       		.byte	0x2
 2332 00aa 9D02     		.2byte	0x29d
 2333 00ac 48000000 		.4byte	0x48
 2334 00b0 04       		.uleb128 0x4
 2335 00b1 F4040000 		.4byte	.LASF16
 2336 00b5 02       		.byte	0x2
 2337 00b6 A502     		.2byte	0x2a5
 2338 00b8 BC000000 		.4byte	0xbc
 2339 00bc 05       		.uleb128 0x5
 2340 00bd 6B000000 		.4byte	0x6b
 2341 00c1 04       		.uleb128 0x4
 2342 00c2 D3030000 		.4byte	.LASF17
 2343 00c6 02       		.byte	0x2
 2344 00c7 A702     		.2byte	0x2a7
 2345 00c9 CD000000 		.4byte	0xcd
 2346 00cd 05       		.uleb128 0x5
 2347 00ce 83000000 		.4byte	0x83
 2348 00d2 04       		.uleb128 0x4
 2349 00d3 FA050000 		.4byte	.LASF18
 2350 00d7 02       		.byte	0x2
 2351 00d8 B702     		.2byte	0x2b7
 2352 00da DE000000 		.4byte	0xde
 2353 00de 06       		.uleb128 0x6
 2354 00df 04       		.byte	0x4
 2355 00e0 E4000000 		.4byte	0xe4
 2356 00e4 07       		.uleb128 0x7
 2357 00e5 02       		.uleb128 0x2
 2358 00e6 08       		.byte	0x8
 2359 00e7 04       		.byte	0x4
 2360 00e8 21040000 		.4byte	.LASF19
 2361 00ec 02       		.uleb128 0x2
 2362 00ed 04       		.byte	0x4
 2363 00ee 07       		.byte	0x7
 2364 00ef F5030000 		.4byte	.LASF20
 2365 00f3 04       		.uleb128 0x4
 2366 00f4 B8040000 		.4byte	.LASF21
 2367 00f8 03       		.byte	0x3
 2368 00f9 0801     		.2byte	0x108
 2369 00fb DE000000 		.4byte	0xde
 2370 00ff 08       		.uleb128 0x8
 2371 0100 05070000 		.4byte	.LASF22
 2372 0104 01       		.byte	0x1
 2373 0105 69       		.byte	0x69
 2374 0106 00000000 		.4byte	.LFB2
 2375 010a 14000000 		.4byte	.LFE2-.LFB2
 2376 010e 01       		.uleb128 0x1
 2377 010f 9C       		.byte	0x9c
 2378 0110 08       		.uleb128 0x8
 2379 0111 ED020000 		.4byte	.LASF23
 2380 0115 01       		.byte	0x1
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 107


 2381 0116 8A       		.byte	0x8a
 2382 0117 00000000 		.4byte	.LFB3
 2383 011b 10000000 		.4byte	.LFE3-.LFB3
 2384 011f 01       		.uleb128 0x1
 2385 0120 9C       		.byte	0x9c
 2386 0121 09       		.uleb128 0x9
 2387 0122 1F000000 		.4byte	.LASF26
 2388 0126 01       		.byte	0x1
 2389 0127 4802     		.2byte	0x248
 2390 0129 00000000 		.4byte	.LFB4
 2391 012d 20000000 		.4byte	.LFE4-.LFB4
 2392 0131 01       		.uleb128 0x1
 2393 0132 9C       		.byte	0x9c
 2394 0133 7A010000 		.4byte	0x17a
 2395 0137 0A       		.uleb128 0xa
 2396 0138 C9050000 		.4byte	.LASF28
 2397 013c 01       		.byte	0x1
 2398 013d 4802     		.2byte	0x248
 2399 013f 83000000 		.4byte	0x83
 2400 0143 00000000 		.4byte	.LLST0
 2401 0147 0B       		.uleb128 0xb
 2402 0148 86010000 		.4byte	.LASF24
 2403 014c 01       		.byte	0x1
 2404 014d 4A02     		.2byte	0x24a
 2405 014f 6B000000 		.4byte	0x6b
 2406 0153 2C000000 		.4byte	.LLST1
 2407 0157 0B       		.uleb128 0xb
 2408 0158 42070000 		.4byte	.LASF25
 2409 015c 01       		.byte	0x1
 2410 015d 4B02     		.2byte	0x24b
 2411 015f 83000000 		.4byte	0x83
 2412 0163 3F000000 		.4byte	.LLST2
 2413 0167 0C       		.uleb128 0xc
 2414 0168 08000000 		.4byte	.LVL1
 2415 016c AF0B0000 		.4byte	0xbaf
 2416 0170 0C       		.uleb128 0xc
 2417 0171 1A000000 		.4byte	.LVL5
 2418 0175 BA0B0000 		.4byte	0xbba
 2419 0179 00       		.byte	0
 2420 017a 09       		.uleb128 0x9
 2421 017b BE030000 		.4byte	.LASF27
 2422 017f 01       		.byte	0x1
 2423 0180 9502     		.2byte	0x295
 2424 0182 00000000 		.4byte	.LFB5
 2425 0186 38000000 		.4byte	.LFE5-.LFB5
 2426 018a 01       		.uleb128 0x1
 2427 018b 9C       		.byte	0x9c
 2428 018c 9F010000 		.4byte	0x19f
 2429 0190 0D       		.uleb128 0xd
 2430 0191 DD010000 		.4byte	.LASF29
 2431 0195 01       		.byte	0x1
 2432 0196 9502     		.2byte	0x295
 2433 0198 83000000 		.4byte	0x83
 2434 019c 01       		.uleb128 0x1
 2435 019d 50       		.byte	0x50
 2436 019e 00       		.byte	0
 2437 019f 0E       		.uleb128 0xe
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 108


 2438 01a0 2A020000 		.4byte	.LASF38
 2439 01a4 01       		.byte	0x1
 2440 01a5 BA02     		.2byte	0x2ba
 2441 01a7 83000000 		.4byte	0x83
 2442 01ab 00000000 		.4byte	.LFB6
 2443 01af 1C000000 		.4byte	.LFE6-.LFB6
 2444 01b3 01       		.uleb128 0x1
 2445 01b4 9C       		.byte	0x9c
 2446 01b5 EC010000 		.4byte	0x1ec
 2447 01b9 0B       		.uleb128 0xb
 2448 01ba 86010000 		.4byte	.LASF24
 2449 01be 01       		.byte	0x1
 2450 01bf BC02     		.2byte	0x2bc
 2451 01c1 6B000000 		.4byte	0x6b
 2452 01c5 5D000000 		.4byte	.LLST3
 2453 01c9 0B       		.uleb128 0xb
 2454 01ca 35040000 		.4byte	.LASF30
 2455 01ce 01       		.byte	0x1
 2456 01cf BD02     		.2byte	0x2bd
 2457 01d1 83000000 		.4byte	0x83
 2458 01d5 70000000 		.4byte	.LLST4
 2459 01d9 0C       		.uleb128 0xc
 2460 01da 06000000 		.4byte	.LVL8
 2461 01de AF0B0000 		.4byte	0xbaf
 2462 01e2 0C       		.uleb128 0xc
 2463 01e3 12000000 		.4byte	.LVL10
 2464 01e7 BA0B0000 		.4byte	0xbba
 2465 01eb 00       		.byte	0
 2466 01ec 09       		.uleb128 0x9
 2467 01ed 17060000 		.4byte	.LASF31
 2468 01f1 01       		.byte	0x1
 2469 01f2 F702     		.2byte	0x2f7
 2470 01f4 00000000 		.4byte	.LFB7
 2471 01f8 30000000 		.4byte	.LFE7-.LFB7
 2472 01fc 01       		.uleb128 0x1
 2473 01fd 9C       		.byte	0x9c
 2474 01fe 35020000 		.4byte	0x235
 2475 0202 0A       		.uleb128 0xa
 2476 0203 E0060000 		.4byte	.LASF32
 2477 0207 01       		.byte	0x1
 2478 0208 F702     		.2byte	0x2f7
 2479 020a 83000000 		.4byte	0x83
 2480 020e 8E000000 		.4byte	.LLST5
 2481 0212 0B       		.uleb128 0xb
 2482 0213 86010000 		.4byte	.LASF24
 2483 0217 01       		.byte	0x1
 2484 0218 F902     		.2byte	0x2f9
 2485 021a 6B000000 		.4byte	0x6b
 2486 021e BA000000 		.4byte	.LLST6
 2487 0222 0C       		.uleb128 0xc
 2488 0223 08000000 		.4byte	.LVL13
 2489 0227 AF0B0000 		.4byte	0xbaf
 2490 022b 0C       		.uleb128 0xc
 2491 022c 24000000 		.4byte	.LVL15
 2492 0230 BA0B0000 		.4byte	0xbba
 2493 0234 00       		.byte	0
 2494 0235 09       		.uleb128 0x9
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 109


 2495 0236 97030000 		.4byte	.LASF33
 2496 023a 01       		.byte	0x1
 2497 023b 3103     		.2byte	0x331
 2498 023d 00000000 		.4byte	.LFB8
 2499 0241 64000000 		.4byte	.LFE8-.LFB8
 2500 0245 01       		.uleb128 0x1
 2501 0246 9C       		.byte	0x9c
 2502 0247 9C020000 		.4byte	0x29c
 2503 024b 0A       		.uleb128 0xa
 2504 024c 75010000 		.4byte	.LASF34
 2505 0250 01       		.byte	0x1
 2506 0251 3103     		.2byte	0x331
 2507 0253 83000000 		.4byte	0x83
 2508 0257 CD000000 		.4byte	.LLST7
 2509 025b 0F       		.uleb128 0xf
 2510 025c 0C010000 		.4byte	.LASF35
 2511 0260 01       		.byte	0x1
 2512 0261 3403     		.2byte	0x334
 2513 0263 AC020000 		.4byte	0x2ac
 2514 0267 02       		.uleb128 0x2
 2515 0268 91       		.byte	0x91
 2516 0269 70       		.sleb128 -16
 2517 026a 0F       		.uleb128 0xf
 2518 026b BE010000 		.4byte	.LASF36
 2519 026f 01       		.byte	0x1
 2520 0270 3503     		.2byte	0x335
 2521 0272 C1020000 		.4byte	0x2c1
 2522 0276 02       		.uleb128 0x2
 2523 0277 91       		.byte	0x91
 2524 0278 60       		.sleb128 -32
 2525 0279 0B       		.uleb128 0xb
 2526 027a 86010000 		.4byte	.LASF24
 2527 027e 01       		.byte	0x1
 2528 027f 4503     		.2byte	0x345
 2529 0281 6B000000 		.4byte	0x6b
 2530 0285 06010000 		.4byte	.LLST8
 2531 0289 0C       		.uleb128 0xc
 2532 028a 0A000000 		.4byte	.LVL17
 2533 028e AF0B0000 		.4byte	0xbaf
 2534 0292 0C       		.uleb128 0xc
 2535 0293 3E000000 		.4byte	.LVL19
 2536 0297 BA0B0000 		.4byte	0xbba
 2537 029b 00       		.byte	0
 2538 029c 10       		.uleb128 0x10
 2539 029d CD000000 		.4byte	0xcd
 2540 02a1 AC020000 		.4byte	0x2ac
 2541 02a5 11       		.uleb128 0x11
 2542 02a6 EC000000 		.4byte	0xec
 2543 02aa 01       		.byte	0x1
 2544 02ab 00       		.byte	0
 2545 02ac 05       		.uleb128 0x5
 2546 02ad 9C020000 		.4byte	0x29c
 2547 02b1 10       		.uleb128 0x10
 2548 02b2 CD000000 		.4byte	0xcd
 2549 02b6 C1020000 		.4byte	0x2c1
 2550 02ba 11       		.uleb128 0x11
 2551 02bb EC000000 		.4byte	0xec
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 110


 2552 02bf 03       		.byte	0x3
 2553 02c0 00       		.byte	0
 2554 02c1 05       		.uleb128 0x5
 2555 02c2 B1020000 		.4byte	0x2b1
 2556 02c6 12       		.uleb128 0x12
 2557 02c7 B8060000 		.4byte	.LASF37
 2558 02cb 01       		.byte	0x1
 2559 02cc 4205     		.2byte	0x542
 2560 02ce 00000000 		.4byte	.LFB10
 2561 02d2 24000000 		.4byte	.LFE10-.LFB10
 2562 02d6 01       		.uleb128 0x1
 2563 02d7 9C       		.byte	0x9c
 2564 02d8 0E       		.uleb128 0xe
 2565 02d9 0F020000 		.4byte	.LASF39
 2566 02dd 01       		.byte	0x1
 2567 02de 6505     		.2byte	0x565
 2568 02e0 83000000 		.4byte	0x83
 2569 02e4 00000000 		.4byte	.LFB11
 2570 02e8 10000000 		.4byte	.LFE11-.LFB11
 2571 02ec 01       		.uleb128 0x1
 2572 02ed 9C       		.byte	0x9c
 2573 02ee 01030000 		.4byte	0x301
 2574 02f2 0F       		.uleb128 0xf
 2575 02f3 76070000 		.4byte	.LASF40
 2576 02f7 01       		.byte	0x1
 2577 02f8 6705     		.2byte	0x567
 2578 02fa 83000000 		.4byte	0x83
 2579 02fe 01       		.uleb128 0x1
 2580 02ff 50       		.byte	0x50
 2581 0300 00       		.byte	0
 2582 0301 12       		.uleb128 0x12
 2583 0302 99060000 		.4byte	.LASF41
 2584 0306 01       		.byte	0x1
 2585 0307 840A     		.2byte	0xa84
 2586 0309 00000000 		.4byte	.LFB14
 2587 030d 20000000 		.4byte	.LFE14-.LFB14
 2588 0311 01       		.uleb128 0x1
 2589 0312 9C       		.byte	0x9c
 2590 0313 13       		.uleb128 0x13
 2591 0314 D2020000 		.4byte	.LASF85
 2592 0318 01       		.byte	0x1
 2593 0319 960A     		.2byte	0xa96
 2594 031b 83000000 		.4byte	0x83
 2595 031f 00000000 		.4byte	.LFB15
 2596 0323 10000000 		.4byte	.LFE15-.LFB15
 2597 0327 01       		.uleb128 0x1
 2598 0328 9C       		.byte	0x9c
 2599 0329 12       		.uleb128 0x12
 2600 032a F1010000 		.4byte	.LASF42
 2601 032e 01       		.byte	0x1
 2602 032f A60A     		.2byte	0xaa6
 2603 0331 00000000 		.4byte	.LFB16
 2604 0335 0C000000 		.4byte	.LFE16-.LFB16
 2605 0339 01       		.uleb128 0x1
 2606 033a 9C       		.byte	0x9c
 2607 033b 0E       		.uleb128 0xe
 2608 033c 39030000 		.4byte	.LASF43
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 111


 2609 0340 01       		.byte	0x1
 2610 0341 C00A     		.2byte	0xac0
 2611 0343 83000000 		.4byte	0x83
 2612 0347 00000000 		.4byte	.LFB17
 2613 034b 14000000 		.4byte	.LFE17-.LFB17
 2614 034f 01       		.uleb128 0x1
 2615 0350 9C       		.byte	0x9c
 2616 0351 74030000 		.4byte	0x374
 2617 0355 0A       		.uleb128 0xa
 2618 0356 EE050000 		.4byte	.LASF44
 2619 035a 01       		.byte	0x1
 2620 035b C00A     		.2byte	0xac0
 2621 035d 83000000 		.4byte	0x83
 2622 0361 19010000 		.4byte	.LLST9
 2623 0365 0F       		.uleb128 0xf
 2624 0366 E8030000 		.4byte	.LASF45
 2625 036a 01       		.byte	0x1
 2626 036b C20A     		.2byte	0xac2
 2627 036d 83000000 		.4byte	0x83
 2628 0371 01       		.uleb128 0x1
 2629 0372 50       		.byte	0x50
 2630 0373 00       		.byte	0
 2631 0374 0E       		.uleb128 0xe
 2632 0375 59000000 		.4byte	.LASF46
 2633 0379 01       		.byte	0x1
 2634 037a D70A     		.2byte	0xad7
 2635 037c 83000000 		.4byte	0x83
 2636 0380 00000000 		.4byte	.LFB18
 2637 0384 10000000 		.4byte	.LFE18-.LFB18
 2638 0388 01       		.uleb128 0x1
 2639 0389 9C       		.byte	0x9c
 2640 038a 9D030000 		.4byte	0x39d
 2641 038e 0F       		.uleb128 0xf
 2642 038f 16000000 		.4byte	.LASF47
 2643 0393 01       		.byte	0x1
 2644 0394 D90A     		.2byte	0xad9
 2645 0396 83000000 		.4byte	0x83
 2646 039a 01       		.uleb128 0x1
 2647 039b 50       		.byte	0x50
 2648 039c 00       		.byte	0
 2649 039d 09       		.uleb128 0x9
 2650 039e 17010000 		.4byte	.LASF48
 2651 03a2 01       		.byte	0x1
 2652 03a3 EE0A     		.2byte	0xaee
 2653 03a5 00000000 		.4byte	.LFB19
 2654 03a9 0C000000 		.4byte	.LFE19-.LFB19
 2655 03ad 01       		.uleb128 0x1
 2656 03ae 9C       		.byte	0x9c
 2657 03af C2030000 		.4byte	0x3c2
 2658 03b3 0D       		.uleb128 0xd
 2659 03b4 25020000 		.4byte	.LASF49
 2660 03b8 01       		.byte	0x1
 2661 03b9 EE0A     		.2byte	0xaee
 2662 03bb 83000000 		.4byte	0x83
 2663 03bf 01       		.uleb128 0x1
 2664 03c0 50       		.byte	0x50
 2665 03c1 00       		.byte	0
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 112


 2666 03c2 09       		.uleb128 0x9
 2667 03c3 AB050000 		.4byte	.LASF50
 2668 03c7 01       		.byte	0x1
 2669 03c8 A50B     		.2byte	0xba5
 2670 03ca 00000000 		.4byte	.LFB26
 2671 03ce 14000000 		.4byte	.LFE26-.LFB26
 2672 03d2 01       		.uleb128 0x1
 2673 03d3 9C       		.byte	0x9c
 2674 03d4 E9030000 		.4byte	0x3e9
 2675 03d8 0A       		.uleb128 0xa
 2676 03d9 87030000 		.4byte	.LASF51
 2677 03dd 01       		.byte	0x1
 2678 03de A50B     		.2byte	0xba5
 2679 03e0 6B000000 		.4byte	0x6b
 2680 03e4 37010000 		.4byte	.LLST10
 2681 03e8 00       		.byte	0
 2682 03e9 0E       		.uleb128 0xe
 2683 03ea 4D010000 		.4byte	.LASF52
 2684 03ee 01       		.byte	0x1
 2685 03ef B70B     		.2byte	0xbb7
 2686 03f1 6B000000 		.4byte	0x6b
 2687 03f5 00000000 		.4byte	.LFB27
 2688 03f9 18000000 		.4byte	.LFE27-.LFB27
 2689 03fd 01       		.uleb128 0x1
 2690 03fe 9C       		.byte	0x9c
 2691 03ff 14040000 		.4byte	0x414
 2692 0403 0A       		.uleb128 0xa
 2693 0404 87030000 		.4byte	.LASF51
 2694 0408 01       		.byte	0x1
 2695 0409 B70B     		.2byte	0xbb7
 2696 040b 6B000000 		.4byte	0x6b
 2697 040f 58010000 		.4byte	.LLST11
 2698 0413 00       		.byte	0
 2699 0414 09       		.uleb128 0x9
 2700 0415 B1010000 		.4byte	.LASF53
 2701 0419 01       		.byte	0x1
 2702 041a C70B     		.2byte	0xbc7
 2703 041c 00000000 		.4byte	.LFB28
 2704 0420 14000000 		.4byte	.LFE28-.LFB28
 2705 0424 01       		.uleb128 0x1
 2706 0425 9C       		.byte	0x9c
 2707 0426 3B040000 		.4byte	0x43b
 2708 042a 0A       		.uleb128 0xa
 2709 042b 87030000 		.4byte	.LASF51
 2710 042f 01       		.byte	0x1
 2711 0430 C70B     		.2byte	0xbc7
 2712 0432 6B000000 		.4byte	0x6b
 2713 0436 79010000 		.4byte	.LLST12
 2714 043a 00       		.byte	0
 2715 043b 09       		.uleb128 0x9
 2716 043c 14030000 		.4byte	.LASF54
 2717 0440 01       		.byte	0x1
 2718 0441 D50B     		.2byte	0xbd5
 2719 0443 00000000 		.4byte	.LFB29
 2720 0447 14000000 		.4byte	.LFE29-.LFB29
 2721 044b 01       		.uleb128 0x1
 2722 044c 9C       		.byte	0x9c
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 113


 2723 044d 62040000 		.4byte	0x462
 2724 0451 0A       		.uleb128 0xa
 2725 0452 87030000 		.4byte	.LASF51
 2726 0456 01       		.byte	0x1
 2727 0457 D50B     		.2byte	0xbd5
 2728 0459 6B000000 		.4byte	0x6b
 2729 045d 9A010000 		.4byte	.LLST13
 2730 0461 00       		.byte	0
 2731 0462 09       		.uleb128 0x9
 2732 0463 0F040000 		.4byte	.LASF55
 2733 0467 01       		.byte	0x1
 2734 0468 E40B     		.2byte	0xbe4
 2735 046a 00000000 		.4byte	.LFB30
 2736 046e 14000000 		.4byte	.LFE30-.LFB30
 2737 0472 01       		.uleb128 0x1
 2738 0473 9C       		.byte	0x9c
 2739 0474 89040000 		.4byte	0x489
 2740 0478 0A       		.uleb128 0xa
 2741 0479 87030000 		.4byte	.LASF51
 2742 047d 01       		.byte	0x1
 2743 047e E40B     		.2byte	0xbe4
 2744 0480 6B000000 		.4byte	0x6b
 2745 0484 BB010000 		.4byte	.LLST14
 2746 0488 00       		.byte	0
 2747 0489 09       		.uleb128 0x9
 2748 048a 03050000 		.4byte	.LASF56
 2749 048e 01       		.byte	0x1
 2750 048f F30B     		.2byte	0xbf3
 2751 0491 00000000 		.4byte	.LFB31
 2752 0495 04000000 		.4byte	.LFE31-.LFB31
 2753 0499 01       		.uleb128 0x1
 2754 049a 9C       		.byte	0x9c
 2755 049b AE040000 		.4byte	0x4ae
 2756 049f 0D       		.uleb128 0xd
 2757 04a0 EE050000 		.4byte	.LASF44
 2758 04a4 01       		.byte	0x1
 2759 04a5 F30B     		.2byte	0xbf3
 2760 04a7 6B000000 		.4byte	0x6b
 2761 04ab 01       		.uleb128 0x1
 2762 04ac 50       		.byte	0x50
 2763 04ad 00       		.byte	0
 2764 04ae 09       		.uleb128 0x9
 2765 04af E8060000 		.4byte	.LASF57
 2766 04b3 01       		.byte	0x1
 2767 04b4 9405     		.2byte	0x594
 2768 04b6 00000000 		.4byte	.LFB12
 2769 04ba 38000000 		.4byte	.LFE12-.LFB12
 2770 04be 01       		.uleb128 0x1
 2771 04bf 9C       		.byte	0x9c
 2772 04c0 06050000 		.4byte	0x506
 2773 04c4 0A       		.uleb128 0xa
 2774 04c5 E0060000 		.4byte	.LASF32
 2775 04c9 01       		.byte	0x1
 2776 04ca 9405     		.2byte	0x594
 2777 04cc 83000000 		.4byte	0x83
 2778 04d0 DC010000 		.4byte	.LLST15
 2779 04d4 0B       		.uleb128 0xb
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 114


 2780 04d5 86010000 		.4byte	.LASF24
 2781 04d9 01       		.byte	0x1
 2782 04da 9605     		.2byte	0x596
 2783 04dc 6B000000 		.4byte	0x6b
 2784 04e0 2C020000 		.4byte	.LLST16
 2785 04e4 0C       		.uleb128 0xc
 2786 04e5 14000000 		.4byte	.LVL40
 2787 04e9 AF0B0000 		.4byte	0xbaf
 2788 04ed 0C       		.uleb128 0xc
 2789 04ee 26000000 		.4byte	.LVL42
 2790 04f2 BA0B0000 		.4byte	0xbba
 2791 04f6 14       		.uleb128 0x14
 2792 04f7 2E000000 		.4byte	.LVL45
 2793 04fb 89040000 		.4byte	0x489
 2794 04ff 15       		.uleb128 0x15
 2795 0500 01       		.uleb128 0x1
 2796 0501 50       		.byte	0x50
 2797 0502 01       		.uleb128 0x1
 2798 0503 30       		.byte	0x30
 2799 0504 00       		.byte	0
 2800 0505 00       		.byte	0
 2801 0506 0E       		.uleb128 0xe
 2802 0507 AC030000 		.4byte	.LASF58
 2803 050b 01       		.byte	0x1
 2804 050c 070B     		.2byte	0xb07
 2805 050e D2000000 		.4byte	0xd2
 2806 0512 00000000 		.4byte	.LFB20
 2807 0516 20000000 		.4byte	.LFE20-.LFB20
 2808 051a 01       		.uleb128 0x1
 2809 051b 9C       		.byte	0x9c
 2810 051c 6E050000 		.4byte	0x56e
 2811 0520 0A       		.uleb128 0xa
 2812 0521 87030000 		.4byte	.LASF51
 2813 0525 01       		.byte	0x1
 2814 0526 070B     		.2byte	0xb07
 2815 0528 6B000000 		.4byte	0x6b
 2816 052c 3F020000 		.4byte	.LLST17
 2817 0530 0A       		.uleb128 0xa
 2818 0531 2D040000 		.4byte	.LASF59
 2819 0535 01       		.byte	0x1
 2820 0536 070B     		.2byte	0xb07
 2821 0538 D2000000 		.4byte	0xd2
 2822 053c 60020000 		.4byte	.LLST18
 2823 0540 0F       		.uleb128 0xf
 2824 0541 4B000000 		.4byte	.LASF60
 2825 0545 01       		.byte	0x1
 2826 0546 090B     		.2byte	0xb09
 2827 0548 D2000000 		.4byte	0xd2
 2828 054c 01       		.uleb128 0x1
 2829 054d 50       		.byte	0x50
 2830 054e 16       		.uleb128 0x16
 2831 054f 00000000 		.4byte	.LASF61
 2832 0553 01       		.byte	0x1
 2833 0554 0A0B     		.2byte	0xb0a
 2834 0556 6E050000 		.4byte	0x56e
 2835 055a 00000020 		.4byte	0x20000000
 2836 055e 14       		.uleb128 0x14
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 115


 2837 055f 10000000 		.4byte	.LVL49
 2838 0563 89040000 		.4byte	0x489
 2839 0567 15       		.uleb128 0x15
 2840 0568 01       		.uleb128 0x1
 2841 0569 50       		.byte	0x50
 2842 056a 01       		.uleb128 0x1
 2843 056b 30       		.byte	0x30
 2844 056c 00       		.byte	0
 2845 056d 00       		.byte	0
 2846 056e 06       		.uleb128 0x6
 2847 056f 04       		.byte	0x4
 2848 0570 D2000000 		.4byte	0xd2
 2849 0574 0E       		.uleb128 0xe
 2850 0575 B7050000 		.4byte	.LASF62
 2851 0579 01       		.byte	0x1
 2852 057a 290B     		.2byte	0xb29
 2853 057c D2000000 		.4byte	0xd2
 2854 0580 00000000 		.4byte	.LFB21
 2855 0584 1C000000 		.4byte	.LFE21-.LFB21
 2856 0588 01       		.uleb128 0x1
 2857 0589 9C       		.byte	0x9c
 2858 058a BE050000 		.4byte	0x5be
 2859 058e 0A       		.uleb128 0xa
 2860 058f 87030000 		.4byte	.LASF51
 2861 0593 01       		.byte	0x1
 2862 0594 290B     		.2byte	0xb29
 2863 0596 6B000000 		.4byte	0x6b
 2864 059a 8C020000 		.4byte	.LLST19
 2865 059e 16       		.uleb128 0x16
 2866 059f 00000000 		.4byte	.LASF61
 2867 05a3 01       		.byte	0x1
 2868 05a4 2B0B     		.2byte	0xb2b
 2869 05a6 6E050000 		.4byte	0x56e
 2870 05aa 00000020 		.4byte	0x20000000
 2871 05ae 14       		.uleb128 0x14
 2872 05af 0E000000 		.4byte	.LVL55
 2873 05b3 89040000 		.4byte	0x489
 2874 05b7 15       		.uleb128 0x15
 2875 05b8 01       		.uleb128 0x1
 2876 05b9 50       		.byte	0x50
 2877 05ba 01       		.uleb128 0x1
 2878 05bb 30       		.byte	0x30
 2879 05bc 00       		.byte	0
 2880 05bd 00       		.byte	0
 2881 05be 0E       		.uleb128 0xe
 2882 05bf 78030000 		.4byte	.LASF63
 2883 05c3 01       		.byte	0x1
 2884 05c4 3F0B     		.2byte	0xb3f
 2885 05c6 D2000000 		.4byte	0xd2
 2886 05ca 00000000 		.4byte	.LFB22
 2887 05ce 22000000 		.4byte	.LFE22-.LFB22
 2888 05d2 01       		.uleb128 0x1
 2889 05d3 9C       		.byte	0x9c
 2890 05d4 26060000 		.4byte	0x626
 2891 05d8 0A       		.uleb128 0xa
 2892 05d9 87030000 		.4byte	.LASF51
 2893 05dd 01       		.byte	0x1
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 116


 2894 05de 3F0B     		.2byte	0xb3f
 2895 05e0 6B000000 		.4byte	0x6b
 2896 05e4 AD020000 		.4byte	.LLST20
 2897 05e8 0A       		.uleb128 0xa
 2898 05e9 2D040000 		.4byte	.LASF59
 2899 05ed 01       		.byte	0x1
 2900 05ee 3F0B     		.2byte	0xb3f
 2901 05f0 D2000000 		.4byte	0xd2
 2902 05f4 CE020000 		.4byte	.LLST21
 2903 05f8 0F       		.uleb128 0xf
 2904 05f9 4B000000 		.4byte	.LASF60
 2905 05fd 01       		.byte	0x1
 2906 05fe 410B     		.2byte	0xb41
 2907 0600 D2000000 		.4byte	0xd2
 2908 0604 01       		.uleb128 0x1
 2909 0605 50       		.byte	0x50
 2910 0606 16       		.uleb128 0x16
 2911 0607 00000000 		.4byte	.LASF61
 2912 060b 01       		.byte	0x1
 2913 060c 420B     		.2byte	0xb42
 2914 060e 6E050000 		.4byte	0x56e
 2915 0612 00000020 		.4byte	0x20000000
 2916 0616 14       		.uleb128 0x14
 2917 0617 10000000 		.4byte	.LVL59
 2918 061b 89040000 		.4byte	0x489
 2919 061f 15       		.uleb128 0x15
 2920 0620 01       		.uleb128 0x1
 2921 0621 50       		.byte	0x50
 2922 0622 01       		.uleb128 0x1
 2923 0623 30       		.byte	0x30
 2924 0624 00       		.byte	0
 2925 0625 00       		.byte	0
 2926 0626 0E       		.uleb128 0xe
 2927 0627 CA040000 		.4byte	.LASF64
 2928 062b 01       		.byte	0x1
 2929 062c 5B0B     		.2byte	0xb5b
 2930 062e D2000000 		.4byte	0xd2
 2931 0632 00000000 		.4byte	.LFB23
 2932 0636 1E000000 		.4byte	.LFE23-.LFB23
 2933 063a 01       		.uleb128 0x1
 2934 063b 9C       		.byte	0x9c
 2935 063c 70060000 		.4byte	0x670
 2936 0640 0A       		.uleb128 0xa
 2937 0641 87030000 		.4byte	.LASF51
 2938 0645 01       		.byte	0x1
 2939 0646 5B0B     		.2byte	0xb5b
 2940 0648 6B000000 		.4byte	0x6b
 2941 064c FA020000 		.4byte	.LLST22
 2942 0650 16       		.uleb128 0x16
 2943 0651 00000000 		.4byte	.LASF61
 2944 0655 01       		.byte	0x1
 2945 0656 5D0B     		.2byte	0xb5d
 2946 0658 6E050000 		.4byte	0x56e
 2947 065c 00000020 		.4byte	0x20000000
 2948 0660 14       		.uleb128 0x14
 2949 0661 0E000000 		.4byte	.LVL65
 2950 0665 89040000 		.4byte	0x489
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 117


 2951 0669 15       		.uleb128 0x15
 2952 066a 01       		.uleb128 0x1
 2953 066b 50       		.byte	0x50
 2954 066c 01       		.uleb128 0x1
 2955 066d 30       		.byte	0x30
 2956 066e 00       		.byte	0
 2957 066f 00       		.byte	0
 2958 0670 09       		.uleb128 0x9
 2959 0671 7C040000 		.4byte	.LASF65
 2960 0675 01       		.byte	0x1
 2961 0676 6E0B     		.2byte	0xb6e
 2962 0678 00000000 		.4byte	.LFB24
 2963 067c 4C000000 		.4byte	.LFE24-.LFB24
 2964 0680 01       		.uleb128 0x1
 2965 0681 9C       		.byte	0x9c
 2966 0682 0F070000 		.4byte	0x70f
 2967 0686 0A       		.uleb128 0xa
 2968 0687 87030000 		.4byte	.LASF51
 2969 068b 01       		.byte	0x1
 2970 068c 6E0B     		.2byte	0xb6e
 2971 068e 6B000000 		.4byte	0x6b
 2972 0692 1B030000 		.4byte	.LLST23
 2973 0696 0A       		.uleb128 0xa
 2974 0697 8E030000 		.4byte	.LASF66
 2975 069b 01       		.byte	0x1
 2976 069c 6E0B     		.2byte	0xb6e
 2977 069e 6B000000 		.4byte	0x6b
 2978 06a2 3C030000 		.4byte	.LLST24
 2979 06a6 0B       		.uleb128 0xb
 2980 06a7 86010000 		.4byte	.LASF24
 2981 06ab 01       		.byte	0x1
 2982 06ac 700B     		.2byte	0xb70
 2983 06ae 6B000000 		.4byte	0x6b
 2984 06b2 5D030000 		.4byte	.LLST25
 2985 06b6 0B       		.uleb128 0xb
 2986 06b7 EB010000 		.4byte	.LASF67
 2987 06bb 01       		.byte	0x1
 2988 06bc 710B     		.2byte	0xb71
 2989 06be 83000000 		.4byte	0x83
 2990 06c2 70030000 		.4byte	.LLST26
 2991 06c6 0B       		.uleb128 0xb
 2992 06c7 6E020000 		.4byte	.LASF68
 2993 06cb 01       		.byte	0x1
 2994 06cc 720B     		.2byte	0xb72
 2995 06ce 83000000 		.4byte	0x83
 2996 06d2 83030000 		.4byte	.LLST27
 2997 06d6 17       		.uleb128 0x17
 2998 06d7 10000000 		.4byte	.LVL68
 2999 06db 89040000 		.4byte	0x489
 3000 06df E9060000 		.4byte	0x6e9
 3001 06e3 15       		.uleb128 0x15
 3002 06e4 01       		.uleb128 0x1
 3003 06e5 50       		.byte	0x50
 3004 06e6 01       		.uleb128 0x1
 3005 06e7 30       		.byte	0x30
 3006 06e8 00       		.byte	0
 3007 06e9 17       		.uleb128 0x17
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 118


 3008 06ea 1A000000 		.4byte	.LVL69
 3009 06ee 89040000 		.4byte	0x489
 3010 06f2 FC060000 		.4byte	0x6fc
 3011 06f6 15       		.uleb128 0x15
 3012 06f7 01       		.uleb128 0x1
 3013 06f8 50       		.byte	0x50
 3014 06f9 01       		.uleb128 0x1
 3015 06fa 30       		.byte	0x30
 3016 06fb 00       		.byte	0
 3017 06fc 0C       		.uleb128 0xc
 3018 06fd 26000000 		.4byte	.LVL71
 3019 0701 AF0B0000 		.4byte	0xbaf
 3020 0705 0C       		.uleb128 0xc
 3021 0706 46000000 		.4byte	.LVL77
 3022 070a BA0B0000 		.4byte	0xbba
 3023 070e 00       		.byte	0
 3024 070f 0E       		.uleb128 0xe
 3025 0710 42020000 		.4byte	.LASF69
 3026 0714 01       		.byte	0x1
 3027 0715 900B     		.2byte	0xb90
 3028 0717 6B000000 		.4byte	0x6b
 3029 071b 00000000 		.4byte	.LFB25
 3030 071f 2C000000 		.4byte	.LFE25-.LFB25
 3031 0723 01       		.uleb128 0x1
 3032 0724 9C       		.byte	0x9c
 3033 0725 59070000 		.4byte	0x759
 3034 0729 0A       		.uleb128 0xa
 3035 072a 87030000 		.4byte	.LASF51
 3036 072e 01       		.byte	0x1
 3037 072f 900B     		.2byte	0xb90
 3038 0731 6B000000 		.4byte	0x6b
 3039 0735 B7030000 		.4byte	.LLST28
 3040 0739 0B       		.uleb128 0xb
 3041 073a 8E030000 		.4byte	.LASF66
 3042 073e 01       		.byte	0x1
 3043 073f 920B     		.2byte	0xb92
 3044 0741 6B000000 		.4byte	0x6b
 3045 0745 D8030000 		.4byte	.LLST29
 3046 0749 14       		.uleb128 0x14
 3047 074a 0E000000 		.4byte	.LVL81
 3048 074e 89040000 		.4byte	0x489
 3049 0752 15       		.uleb128 0x15
 3050 0753 01       		.uleb128 0x1
 3051 0754 50       		.byte	0x50
 3052 0755 01       		.uleb128 0x1
 3053 0756 30       		.byte	0x30
 3054 0757 00       		.byte	0
 3055 0758 00       		.byte	0
 3056 0759 12       		.uleb128 0x12
 3057 075a 24010000 		.4byte	.LASF70
 3058 075e 01       		.byte	0x1
 3059 075f 0B0C     		.2byte	0xc0b
 3060 0761 00000000 		.4byte	.LFB32
 3061 0765 18000000 		.4byte	.LFE32-.LFB32
 3062 0769 01       		.uleb128 0x1
 3063 076a 9C       		.byte	0x9c
 3064 076b 09       		.uleb128 0x9
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 119


 3065 076c 5F060000 		.4byte	.LASF71
 3066 0770 01       		.byte	0x1
 3067 0771 1F0C     		.2byte	0xc1f
 3068 0773 00000000 		.4byte	.LFB33
 3069 0777 30000000 		.4byte	.LFE33-.LFB33
 3070 077b 01       		.uleb128 0x1
 3071 077c 9C       		.byte	0x9c
 3072 077d A4070000 		.4byte	0x7a4
 3073 0781 0A       		.uleb128 0xa
 3074 0782 D9040000 		.4byte	.LASF72
 3075 0786 01       		.byte	0x1
 3076 0787 1F0C     		.2byte	0xc1f
 3077 0789 83000000 		.4byte	0x83
 3078 078d EB030000 		.4byte	.LLST30
 3079 0791 0C       		.uleb128 0xc
 3080 0792 0E000000 		.4byte	.LVL86
 3081 0796 C50B0000 		.4byte	0xbc5
 3082 079a 0C       		.uleb128 0xc
 3083 079b 26000000 		.4byte	.LVL88
 3084 079f C50B0000 		.4byte	0xbc5
 3085 07a3 00       		.byte	0
 3086 07a4 09       		.uleb128 0x9
 3087 07a5 E4050000 		.4byte	.LASF73
 3088 07a9 01       		.byte	0x1
 3089 07aa 360C     		.2byte	0xc36
 3090 07ac 00000000 		.4byte	.LFB34
 3091 07b0 14000000 		.4byte	.LFE34-.LFB34
 3092 07b4 01       		.uleb128 0x1
 3093 07b5 9C       		.byte	0x9c
 3094 07b6 D4070000 		.4byte	0x7d4
 3095 07ba 0A       		.uleb128 0xa
 3096 07bb 35070000 		.4byte	.LASF74
 3097 07bf 01       		.byte	0x1
 3098 07c0 360C     		.2byte	0xc36
 3099 07c2 77000000 		.4byte	0x77
 3100 07c6 09040000 		.4byte	.LLST31
 3101 07ca 0C       		.uleb128 0xc
 3102 07cb 0C000000 		.4byte	.LVL92
 3103 07cf C50B0000 		.4byte	0xbc5
 3104 07d3 00       		.byte	0
 3105 07d4 0E       		.uleb128 0xe
 3106 07d5 D3050000 		.4byte	.LASF75
 3107 07d9 01       		.byte	0x1
 3108 07da B104     		.2byte	0x4b1
 3109 07dc A4000000 		.4byte	0xa4
 3110 07e0 00000000 		.4byte	.LFB9
 3111 07e4 54000000 		.4byte	.LFE9-.LFB9
 3112 07e8 01       		.uleb128 0x1
 3113 07e9 9C       		.byte	0x9c
 3114 07ea 2B080000 		.4byte	0x82b
 3115 07ee 0A       		.uleb128 0xa
 3116 07ef D6060000 		.4byte	.LASF76
 3117 07f3 01       		.byte	0x1
 3118 07f4 B104     		.2byte	0x4b1
 3119 07f6 83000000 		.4byte	0x83
 3120 07fa 2A040000 		.4byte	.LLST32
 3121 07fe 0B       		.uleb128 0xb
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 120


 3122 07ff E8030000 		.4byte	.LASF45
 3123 0803 01       		.byte	0x1
 3124 0804 B304     		.2byte	0x4b3
 3125 0806 A4000000 		.4byte	0xa4
 3126 080a 48040000 		.4byte	.LLST33
 3127 080e 17       		.uleb128 0x17
 3128 080f 2E000000 		.4byte	.LVL96
 3129 0813 A4070000 		.4byte	0x7a4
 3130 0817 21080000 		.4byte	0x821
 3131 081b 15       		.uleb128 0x15
 3132 081c 01       		.uleb128 0x1
 3133 081d 50       		.byte	0x50
 3134 081e 01       		.uleb128 0x1
 3135 081f 31       		.byte	0x31
 3136 0820 00       		.byte	0
 3137 0821 0C       		.uleb128 0xc
 3138 0822 32000000 		.4byte	.LVL97
 3139 0826 D8020000 		.4byte	0x2d8
 3140 082a 00       		.byte	0
 3141 082b 09       		.uleb128 0x9
 3142 082c A9040000 		.4byte	.LASF77
 3143 0830 01       		.byte	0x1
 3144 0831 660A     		.2byte	0xa66
 3145 0833 00000000 		.4byte	.LFB13
 3146 0837 44000000 		.4byte	.LFE13-.LFB13
 3147 083b 01       		.uleb128 0x1
 3148 083c 9C       		.byte	0x9c
 3149 083d 70080000 		.4byte	0x870
 3150 0841 0A       		.uleb128 0xa
 3151 0842 F9040000 		.4byte	.LASF78
 3152 0846 01       		.byte	0x1
 3153 0847 660A     		.2byte	0xa66
 3154 0849 83000000 		.4byte	0x83
 3155 084d 67040000 		.4byte	.LLST34
 3156 0851 17       		.uleb128 0x17
 3157 0852 2E000000 		.4byte	.LVL104
 3158 0856 A4070000 		.4byte	0x7a4
 3159 085a 66080000 		.4byte	0x866
 3160 085e 15       		.uleb128 0x15
 3161 085f 01       		.uleb128 0x1
 3162 0860 50       		.byte	0x50
 3163 0861 03       		.uleb128 0x3
 3164 0862 0A       		.byte	0xa
 3165 0863 E803     		.2byte	0x3e8
 3166 0865 00       		.byte	0
 3167 0866 0C       		.uleb128 0xc
 3168 0867 32000000 		.4byte	.LVL105
 3169 086b 29030000 		.4byte	0x329
 3170 086f 00       		.byte	0
 3171 0870 18       		.uleb128 0x18
 3172 0871 7A010000 		.4byte	.LASF79
 3173 0875 01       		.byte	0x1
 3174 0876 440C     		.2byte	0xc44
 3175 0878 00000000 		.4byte	.LFB35
 3176 087c 4C000000 		.4byte	.LFE35-.LFB35
 3177 0880 01       		.uleb128 0x1
 3178 0881 9C       		.byte	0x9c
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 121


 3179 0882 97080000 		.4byte	0x897
 3180 0886 0A       		.uleb128 0xa
 3181 0887 75010000 		.4byte	.LASF34
 3182 088b 01       		.byte	0x1
 3183 088c 440C     		.2byte	0xc44
 3184 088e 83000000 		.4byte	0x83
 3185 0892 93040000 		.4byte	.LLST35
 3186 0896 00       		.byte	0
 3187 0897 12       		.uleb128 0x12
 3188 0898 C8060000 		.4byte	.LASF80
 3189 089c 01       		.byte	0x1
 3190 089d B00C     		.2byte	0xcb0
 3191 089f 00000000 		.4byte	.LFB39
 3192 08a3 10000000 		.4byte	.LFE39-.LFB39
 3193 08a7 01       		.uleb128 0x1
 3194 08a8 9C       		.byte	0x9c
 3195 08a9 12       		.uleb128 0x12
 3196 08aa 34010000 		.4byte	.LASF81
 3197 08ae 01       		.byte	0x1
 3198 08af C00C     		.2byte	0xcc0
 3199 08b1 00000000 		.4byte	.LFB40
 3200 08b5 10000000 		.4byte	.LFE40-.LFB40
 3201 08b9 01       		.uleb128 0x1
 3202 08ba 9C       		.byte	0x9c
 3203 08bb 09       		.uleb128 0x9
 3204 08bc 07060000 		.4byte	.LASF82
 3205 08c0 01       		.byte	0x1
 3206 08c1 9F0C     		.2byte	0xc9f
 3207 08c3 00000000 		.4byte	.LFB38
 3208 08c7 18000000 		.4byte	.LFE38-.LFB38
 3209 08cb 01       		.uleb128 0x1
 3210 08cc 9C       		.byte	0x9c
 3211 08cd DB080000 		.4byte	0x8db
 3212 08d1 0C       		.uleb128 0xc
 3213 08d2 06000000 		.4byte	.LVL110
 3214 08d6 A9080000 		.4byte	0x8a9
 3215 08da 00       		.byte	0
 3216 08db 12       		.uleb128 0x12
 3217 08dc 7F060000 		.4byte	.LASF83
 3218 08e0 01       		.byte	0x1
 3219 08e1 D00C     		.2byte	0xcd0
 3220 08e3 00000000 		.4byte	.LFB41
 3221 08e7 10000000 		.4byte	.LFE41-.LFB41
 3222 08eb 01       		.uleb128 0x1
 3223 08ec 9C       		.byte	0x9c
 3224 08ed 09       		.uleb128 0x9
 3225 08ee 49070000 		.4byte	.LASF84
 3226 08f2 01       		.byte	0x1
 3227 08f3 E10C     		.2byte	0xce1
 3228 08f5 00000000 		.4byte	.LFB42
 3229 08f9 10000000 		.4byte	.LFE42-.LFB42
 3230 08fd 01       		.uleb128 0x1
 3231 08fe 9C       		.byte	0x9c
 3232 08ff 14090000 		.4byte	0x914
 3233 0903 0A       		.uleb128 0xa
 3234 0904 6E020000 		.4byte	.LASF68
 3235 0908 01       		.byte	0x1
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 122


 3236 0909 E10C     		.2byte	0xce1
 3237 090b 83000000 		.4byte	0x83
 3238 090f B4040000 		.4byte	.LLST36
 3239 0913 00       		.byte	0
 3240 0914 13       		.uleb128 0x13
 3241 0915 95010000 		.4byte	.LASF86
 3242 0919 01       		.byte	0x1
 3243 091a F10C     		.2byte	0xcf1
 3244 091c 83000000 		.4byte	0x83
 3245 0920 00000000 		.4byte	.LFB43
 3246 0924 10000000 		.4byte	.LFE43-.LFB43
 3247 0928 01       		.uleb128 0x1
 3248 0929 9C       		.byte	0x9c
 3249 092a 13       		.uleb128 0x13
 3250 092b 5C040000 		.4byte	.LASF87
 3251 092f 01       		.byte	0x1
 3252 0930 010D     		.2byte	0xd01
 3253 0932 83000000 		.4byte	0x83
 3254 0936 00000000 		.4byte	.LFB44
 3255 093a 10000000 		.4byte	.LFE44-.LFB44
 3256 093e 01       		.uleb128 0x1
 3257 093f 9C       		.byte	0x9c
 3258 0940 09       		.uleb128 0x9
 3259 0941 60030000 		.4byte	.LASF88
 3260 0945 01       		.byte	0x1
 3261 0946 210D     		.2byte	0xd21
 3262 0948 00000000 		.4byte	.LFB45
 3263 094c 20000000 		.4byte	.LFE45-.LFB45
 3264 0950 01       		.uleb128 0x1
 3265 0951 9C       		.byte	0x9c
 3266 0952 65090000 		.4byte	0x965
 3267 0956 0D       		.uleb128 0xd
 3268 0957 74020000 		.4byte	.LASF89
 3269 095b 01       		.byte	0x1
 3270 095c 210D     		.2byte	0xd21
 3271 095e 83000000 		.4byte	0x83
 3272 0962 01       		.uleb128 0x1
 3273 0963 50       		.byte	0x50
 3274 0964 00       		.byte	0
 3275 0965 13       		.uleb128 0x13
 3276 0966 67060000 		.4byte	.LASF90
 3277 096a 01       		.byte	0x1
 3278 096b 3A0D     		.2byte	0xd3a
 3279 096d 83000000 		.4byte	0x83
 3280 0971 00000000 		.4byte	.LFB46
 3281 0975 10000000 		.4byte	.LFE46-.LFB46
 3282 0979 01       		.uleb128 0x1
 3283 097a 9C       		.byte	0x9c
 3284 097b 13       		.uleb128 0x13
 3285 097c 8E020000 		.4byte	.LASF91
 3286 0980 01       		.byte	0x1
 3287 0981 510D     		.2byte	0xd51
 3288 0983 83000000 		.4byte	0x83
 3289 0987 00000000 		.4byte	.LFB47
 3290 098b 10000000 		.4byte	.LFE47-.LFB47
 3291 098f 01       		.uleb128 0x1
 3292 0990 9C       		.byte	0x9c
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 123


 3293 0991 19       		.uleb128 0x19
 3294 0992 5C070000 		.4byte	.LASF115
 3295 0996 01       		.byte	0x1
 3296 0997 A60D     		.2byte	0xda6
 3297 0999 00000000 		.4byte	.LFB51
 3298 099d 28000000 		.4byte	.LFE51-.LFB51
 3299 09a1 01       		.uleb128 0x1
 3300 09a2 9C       		.byte	0x9c
 3301 09a3 BF090000 		.4byte	0x9bf
 3302 09a7 1A       		.uleb128 0x1a
 3303 09a8 6900     		.ascii	"i\000"
 3304 09aa 01       		.byte	0x1
 3305 09ab A80D     		.2byte	0xda8
 3306 09ad 83000000 		.4byte	0x83
 3307 09b1 D5040000 		.4byte	.LLST37
 3308 09b5 0C       		.uleb128 0xc
 3309 09b6 06000000 		.4byte	.LVL114
 3310 09ba 7B090000 		.4byte	0x97b
 3311 09be 00       		.byte	0
 3312 09bf 12       		.uleb128 0x12
 3313 09c0 B1020000 		.4byte	.LASF92
 3314 09c4 01       		.byte	0x1
 3315 09c5 5E0D     		.2byte	0xd5e
 3316 09c7 00000000 		.4byte	.LFB48
 3317 09cb 0C000000 		.4byte	.LFE48-.LFB48
 3318 09cf 01       		.uleb128 0x1
 3319 09d0 9C       		.byte	0x9c
 3320 09d1 18       		.uleb128 0x18
 3321 09d2 60020000 		.4byte	.LASF93
 3322 09d6 01       		.byte	0x1
 3323 09d7 810C     		.2byte	0xc81
 3324 09d9 00000000 		.4byte	.LFB37
 3325 09dd 44000000 		.4byte	.LFE37-.LFB37
 3326 09e1 01       		.uleb128 0x1
 3327 09e2 9C       		.byte	0x9c
 3328 09e3 370A0000 		.4byte	0xa37
 3329 09e7 1A       		.uleb128 0x1a
 3330 09e8 6900     		.ascii	"i\000"
 3331 09ea 01       		.byte	0x1
 3332 09eb 830C     		.2byte	0xc83
 3333 09ed 83000000 		.4byte	0x83
 3334 09f1 F3040000 		.4byte	.LLST38
 3335 09f5 17       		.uleb128 0x17
 3336 09f6 1C000000 		.4byte	.LVL124
 3337 09fa 06050000 		.4byte	0x506
 3338 09fe 110A0000 		.4byte	0xa11
 3339 0a02 15       		.uleb128 0x15
 3340 0a03 01       		.uleb128 0x1
 3341 0a04 50       		.byte	0x50
 3342 0a05 01       		.uleb128 0x1
 3343 0a06 3F       		.byte	0x3f
 3344 0a07 15       		.uleb128 0x15
 3345 0a08 01       		.uleb128 0x1
 3346 0a09 51       		.byte	0x51
 3347 0a0a 05       		.uleb128 0x5
 3348 0a0b 03       		.byte	0x3
 3349 0a0c 00000000 		.4byte	CySysTickServiceCallbacks
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 124


 3350 0a10 00       		.byte	0
 3351 0a11 17       		.uleb128 0x17
 3352 0a12 22000000 		.4byte	.LVL125
 3353 0a16 40090000 		.4byte	0x940
 3354 0a1a 240A0000 		.4byte	0xa24
 3355 0a1e 15       		.uleb128 0x15
 3356 0a1f 01       		.uleb128 0x1
 3357 0a20 50       		.byte	0x50
 3358 0a21 01       		.uleb128 0x1
 3359 0a22 31       		.byte	0x31
 3360 0a23 00       		.byte	0
 3361 0a24 0C       		.uleb128 0xc
 3362 0a25 32000000 		.4byte	.LVL127
 3363 0a29 ED080000 		.4byte	0x8ed
 3364 0a2d 0C       		.uleb128 0xc
 3365 0a2e 36000000 		.4byte	.LVL128
 3366 0a32 BF090000 		.4byte	0x9bf
 3367 0a36 00       		.byte	0
 3368 0a37 09       		.uleb128 0x9
 3369 0a38 D9030000 		.4byte	.LASF94
 3370 0a3c 01       		.byte	0x1
 3371 0a3d 640C     		.2byte	0xc64
 3372 0a3f 00000000 		.4byte	.LFB36
 3373 0a43 20000000 		.4byte	.LFE36-.LFB36
 3374 0a47 01       		.uleb128 0x1
 3375 0a48 9C       		.byte	0x9c
 3376 0a49 600A0000 		.4byte	0xa60
 3377 0a4d 0C       		.uleb128 0xc
 3378 0a4e 0E000000 		.4byte	.LVL129
 3379 0a52 D1090000 		.4byte	0x9d1
 3380 0a56 0C       		.uleb128 0xc
 3381 0a57 18000000 		.4byte	.LVL130
 3382 0a5b BB080000 		.4byte	0x8bb
 3383 0a5f 00       		.byte	0
 3384 0a60 0E       		.uleb128 0xe
 3385 0a61 2E060000 		.4byte	.LASF95
 3386 0a65 01       		.byte	0x1
 3387 0a66 810D     		.2byte	0xd81
 3388 0a68 F3000000 		.4byte	0xf3
 3389 0a6c 00000000 		.4byte	.LFB49
 3390 0a70 10000000 		.4byte	.LFE49-.LFB49
 3391 0a74 01       		.uleb128 0x1
 3392 0a75 9C       		.byte	0x9c
 3393 0a76 A70A0000 		.4byte	0xaa7
 3394 0a7a 0A       		.uleb128 0xa
 3395 0a7b 87030000 		.4byte	.LASF51
 3396 0a7f 01       		.byte	0x1
 3397 0a80 810D     		.2byte	0xd81
 3398 0a82 83000000 		.4byte	0x83
 3399 0a86 12050000 		.4byte	.LLST39
 3400 0a8a 0D       		.uleb128 0xd
 3401 0a8b 42040000 		.4byte	.LASF96
 3402 0a8f 01       		.byte	0x1
 3403 0a90 810D     		.2byte	0xd81
 3404 0a92 F3000000 		.4byte	0xf3
 3405 0a96 01       		.uleb128 0x1
 3406 0a97 51       		.byte	0x51
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 125


 3407 0a98 0F       		.uleb128 0xf
 3408 0a99 52000000 		.4byte	.LASF97
 3409 0a9d 01       		.byte	0x1
 3410 0a9e 830D     		.2byte	0xd83
 3411 0aa0 F3000000 		.4byte	0xf3
 3412 0aa4 01       		.uleb128 0x1
 3413 0aa5 50       		.byte	0x50
 3414 0aa6 00       		.byte	0
 3415 0aa7 0E       		.uleb128 0xe
 3416 0aa8 24030000 		.4byte	.LASF98
 3417 0aac 01       		.byte	0x1
 3418 0aad 990D     		.2byte	0xd99
 3419 0aaf F3000000 		.4byte	0xf3
 3420 0ab3 00000000 		.4byte	.LFB50
 3421 0ab7 0C000000 		.4byte	.LFE50-.LFB50
 3422 0abb 01       		.uleb128 0x1
 3423 0abc 9C       		.byte	0x9c
 3424 0abd D20A0000 		.4byte	0xad2
 3425 0ac1 0A       		.uleb128 0xa
 3426 0ac2 87030000 		.4byte	.LASF51
 3427 0ac6 01       		.byte	0x1
 3428 0ac7 990D     		.2byte	0xd99
 3429 0ac9 83000000 		.4byte	0x83
 3430 0acd 33050000 		.4byte	.LLST40
 3431 0ad1 00       		.byte	0
 3432 0ad2 09       		.uleb128 0x9
 3433 0ad3 80020000 		.4byte	.LASF99
 3434 0ad7 01       		.byte	0x1
 3435 0ad8 C60D     		.2byte	0xdc6
 3436 0ada 00000000 		.4byte	.LFB52
 3437 0ade 70000000 		.4byte	.LFE52-.LFB52
 3438 0ae2 01       		.uleb128 0x1
 3439 0ae3 9C       		.byte	0x9c
 3440 0ae4 F70A0000 		.4byte	0xaf7
 3441 0ae8 0D       		.uleb128 0xd
 3442 0ae9 56060000 		.4byte	.LASF100
 3443 0aed 01       		.byte	0x1
 3444 0aee C60D     		.2byte	0xdc6
 3445 0af0 F70A0000 		.4byte	0xaf7
 3446 0af4 01       		.uleb128 0x1
 3447 0af5 50       		.byte	0x50
 3448 0af6 00       		.byte	0
 3449 0af7 06       		.uleb128 0x6
 3450 0af8 04       		.byte	0x4
 3451 0af9 83000000 		.4byte	0x83
 3452 0afd 10       		.uleb128 0x10
 3453 0afe F3000000 		.4byte	0xf3
 3454 0b02 0D0B0000 		.4byte	0xb0d
 3455 0b06 11       		.uleb128 0x11
 3456 0b07 EC000000 		.4byte	0xec
 3457 0b0b 04       		.byte	0x4
 3458 0b0c 00       		.byte	0
 3459 0b0d 1B       		.uleb128 0x1b
 3460 0b0e 43060000 		.4byte	.LASF101
 3461 0b12 01       		.byte	0x1
 3462 0b13 22       		.byte	0x22
 3463 0b14 FD0A0000 		.4byte	0xafd
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 126


 3464 0b18 05       		.uleb128 0x5
 3465 0b19 03       		.byte	0x3
 3466 0b1a 00000000 		.4byte	CySysTickCallbacks
 3467 0b1e 1C       		.uleb128 0x1c
 3468 0b1f 6E040000 		.4byte	.LASF102
 3469 0b23 01       		.byte	0x1
 3470 0b24 1B       		.byte	0x1b
 3471 0b25 83000000 		.4byte	0x83
 3472 0b29 05       		.uleb128 0x5
 3473 0b2a 03       		.byte	0x3
 3474 0b2b 00000000 		.4byte	cydelayFreqHz
 3475 0b2f 1C       		.uleb128 0x1c
 3476 0b30 CE010000 		.4byte	.LASF103
 3477 0b34 01       		.byte	0x1
 3478 0b35 1C       		.byte	0x1c
 3479 0b36 83000000 		.4byte	0x83
 3480 0b3a 05       		.uleb128 0x5
 3481 0b3b 03       		.byte	0x3
 3482 0b3c 00000000 		.4byte	cydelayFreqKhz
 3483 0b40 1C       		.uleb128 0x1c
 3484 0b41 A9060000 		.4byte	.LASF104
 3485 0b45 01       		.byte	0x1
 3486 0b46 1D       		.byte	0x1d
 3487 0b47 6B000000 		.4byte	0x6b
 3488 0b4b 05       		.uleb128 0x5
 3489 0b4c 03       		.byte	0x3
 3490 0b4d 00000000 		.4byte	cydelayFreqMhz
 3491 0b51 1C       		.uleb128 0x1c
 3492 0b52 53020000 		.4byte	.LASF105
 3493 0b56 01       		.byte	0x1
 3494 0b57 1E       		.byte	0x1e
 3495 0b58 83000000 		.4byte	0x83
 3496 0b5c 05       		.uleb128 0x5
 3497 0b5d 03       		.byte	0x3
 3498 0b5e 00000000 		.4byte	cydelay32kMs
 3499 0b62 1C       		.uleb128 0x1c
 3500 0b63 FE030000 		.4byte	.LASF106
 3501 0b67 01       		.byte	0x1
 3502 0b68 36       		.byte	0x36
 3503 0b69 83000000 		.4byte	0x83
 3504 0b6d 05       		.uleb128 0x5
 3505 0b6e 03       		.byte	0x3
 3506 0b6f 00000000 		.4byte	CySysTickInitVar
 3507 0b73 10       		.uleb128 0x10
 3508 0b74 830B0000 		.4byte	0xb83
 3509 0b78 830B0000 		.4byte	0xb83
 3510 0b7c 11       		.uleb128 0x11
 3511 0b7d EC000000 		.4byte	0xec
 3512 0b81 2D       		.byte	0x2d
 3513 0b82 00       		.byte	0
 3514 0b83 1D       		.uleb128 0x1d
 3515 0b84 6B000000 		.4byte	0x6b
 3516 0b88 1C       		.uleb128 0x1c
 3517 0b89 4B040000 		.4byte	.LASF107
 3518 0b8d 01       		.byte	0x1
 3519 0b8e 3B       		.byte	0x3b
 3520 0b8f 990B0000 		.4byte	0xb99
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 127


 3521 0b93 05       		.uleb128 0x5
 3522 0b94 03       		.byte	0x3
 3523 0b95 00000000 		.4byte	cyImoFreqMhz2Reg
 3524 0b99 1D       		.uleb128 0x1d
 3525 0b9a 730B0000 		.4byte	0xb73
 3526 0b9e 1C       		.uleb128 0x1c
 3527 0b9f 38000000 		.4byte	.LASF108
 3528 0ba3 01       		.byte	0x1
 3529 0ba4 58       		.byte	0x58
 3530 0ba5 83000000 		.4byte	0x83
 3531 0ba9 05       		.uleb128 0x5
 3532 0baa 03       		.byte	0x3
 3533 0bab 00000000 		.4byte	CySysClkPumpConfig
 3534 0baf 1E       		.uleb128 0x1e
 3535 0bb0 FD020000 		.4byte	.LASF109
 3536 0bb4 FD020000 		.4byte	.LASF109
 3537 0bb8 03       		.byte	0x3
 3538 0bb9 F8       		.byte	0xf8
 3539 0bba 1E       		.uleb128 0x1e
 3540 0bbb 93040000 		.4byte	.LASF110
 3541 0bbf 93040000 		.4byte	.LASF110
 3542 0bc3 03       		.byte	0x3
 3543 0bc4 F9       		.byte	0xf9
 3544 0bc5 1E       		.uleb128 0x1e
 3545 0bc6 E6040000 		.4byte	.LASF111
 3546 0bca E6040000 		.4byte	.LASF111
 3547 0bce 03       		.byte	0x3
 3548 0bcf EF       		.byte	0xef
 3549 0bd0 00       		.byte	0
 3550              		.section	.debug_abbrev,"",%progbits
 3551              	.Ldebug_abbrev0:
 3552 0000 01       		.uleb128 0x1
 3553 0001 11       		.uleb128 0x11
 3554 0002 01       		.byte	0x1
 3555 0003 25       		.uleb128 0x25
 3556 0004 0E       		.uleb128 0xe
 3557 0005 13       		.uleb128 0x13
 3558 0006 0B       		.uleb128 0xb
 3559 0007 03       		.uleb128 0x3
 3560 0008 0E       		.uleb128 0xe
 3561 0009 1B       		.uleb128 0x1b
 3562 000a 0E       		.uleb128 0xe
 3563 000b 55       		.uleb128 0x55
 3564 000c 17       		.uleb128 0x17
 3565 000d 11       		.uleb128 0x11
 3566 000e 01       		.uleb128 0x1
 3567 000f 10       		.uleb128 0x10
 3568 0010 17       		.uleb128 0x17
 3569 0011 00       		.byte	0
 3570 0012 00       		.byte	0
 3571 0013 02       		.uleb128 0x2
 3572 0014 24       		.uleb128 0x24
 3573 0015 00       		.byte	0
 3574 0016 0B       		.uleb128 0xb
 3575 0017 0B       		.uleb128 0xb
 3576 0018 3E       		.uleb128 0x3e
 3577 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 128


 3578 001a 03       		.uleb128 0x3
 3579 001b 0E       		.uleb128 0xe
 3580 001c 00       		.byte	0
 3581 001d 00       		.byte	0
 3582 001e 03       		.uleb128 0x3
 3583 001f 24       		.uleb128 0x24
 3584 0020 00       		.byte	0
 3585 0021 0B       		.uleb128 0xb
 3586 0022 0B       		.uleb128 0xb
 3587 0023 3E       		.uleb128 0x3e
 3588 0024 0B       		.uleb128 0xb
 3589 0025 03       		.uleb128 0x3
 3590 0026 08       		.uleb128 0x8
 3591 0027 00       		.byte	0
 3592 0028 00       		.byte	0
 3593 0029 04       		.uleb128 0x4
 3594 002a 16       		.uleb128 0x16
 3595 002b 00       		.byte	0
 3596 002c 03       		.uleb128 0x3
 3597 002d 0E       		.uleb128 0xe
 3598 002e 3A       		.uleb128 0x3a
 3599 002f 0B       		.uleb128 0xb
 3600 0030 3B       		.uleb128 0x3b
 3601 0031 05       		.uleb128 0x5
 3602 0032 49       		.uleb128 0x49
 3603 0033 13       		.uleb128 0x13
 3604 0034 00       		.byte	0
 3605 0035 00       		.byte	0
 3606 0036 05       		.uleb128 0x5
 3607 0037 35       		.uleb128 0x35
 3608 0038 00       		.byte	0
 3609 0039 49       		.uleb128 0x49
 3610 003a 13       		.uleb128 0x13
 3611 003b 00       		.byte	0
 3612 003c 00       		.byte	0
 3613 003d 06       		.uleb128 0x6
 3614 003e 0F       		.uleb128 0xf
 3615 003f 00       		.byte	0
 3616 0040 0B       		.uleb128 0xb
 3617 0041 0B       		.uleb128 0xb
 3618 0042 49       		.uleb128 0x49
 3619 0043 13       		.uleb128 0x13
 3620 0044 00       		.byte	0
 3621 0045 00       		.byte	0
 3622 0046 07       		.uleb128 0x7
 3623 0047 15       		.uleb128 0x15
 3624 0048 00       		.byte	0
 3625 0049 27       		.uleb128 0x27
 3626 004a 19       		.uleb128 0x19
 3627 004b 00       		.byte	0
 3628 004c 00       		.byte	0
 3629 004d 08       		.uleb128 0x8
 3630 004e 2E       		.uleb128 0x2e
 3631 004f 00       		.byte	0
 3632 0050 3F       		.uleb128 0x3f
 3633 0051 19       		.uleb128 0x19
 3634 0052 03       		.uleb128 0x3
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 129


 3635 0053 0E       		.uleb128 0xe
 3636 0054 3A       		.uleb128 0x3a
 3637 0055 0B       		.uleb128 0xb
 3638 0056 3B       		.uleb128 0x3b
 3639 0057 0B       		.uleb128 0xb
 3640 0058 27       		.uleb128 0x27
 3641 0059 19       		.uleb128 0x19
 3642 005a 11       		.uleb128 0x11
 3643 005b 01       		.uleb128 0x1
 3644 005c 12       		.uleb128 0x12
 3645 005d 06       		.uleb128 0x6
 3646 005e 40       		.uleb128 0x40
 3647 005f 18       		.uleb128 0x18
 3648 0060 9742     		.uleb128 0x2117
 3649 0062 19       		.uleb128 0x19
 3650 0063 00       		.byte	0
 3651 0064 00       		.byte	0
 3652 0065 09       		.uleb128 0x9
 3653 0066 2E       		.uleb128 0x2e
 3654 0067 01       		.byte	0x1
 3655 0068 3F       		.uleb128 0x3f
 3656 0069 19       		.uleb128 0x19
 3657 006a 03       		.uleb128 0x3
 3658 006b 0E       		.uleb128 0xe
 3659 006c 3A       		.uleb128 0x3a
 3660 006d 0B       		.uleb128 0xb
 3661 006e 3B       		.uleb128 0x3b
 3662 006f 05       		.uleb128 0x5
 3663 0070 27       		.uleb128 0x27
 3664 0071 19       		.uleb128 0x19
 3665 0072 11       		.uleb128 0x11
 3666 0073 01       		.uleb128 0x1
 3667 0074 12       		.uleb128 0x12
 3668 0075 06       		.uleb128 0x6
 3669 0076 40       		.uleb128 0x40
 3670 0077 18       		.uleb128 0x18
 3671 0078 9742     		.uleb128 0x2117
 3672 007a 19       		.uleb128 0x19
 3673 007b 01       		.uleb128 0x1
 3674 007c 13       		.uleb128 0x13
 3675 007d 00       		.byte	0
 3676 007e 00       		.byte	0
 3677 007f 0A       		.uleb128 0xa
 3678 0080 05       		.uleb128 0x5
 3679 0081 00       		.byte	0
 3680 0082 03       		.uleb128 0x3
 3681 0083 0E       		.uleb128 0xe
 3682 0084 3A       		.uleb128 0x3a
 3683 0085 0B       		.uleb128 0xb
 3684 0086 3B       		.uleb128 0x3b
 3685 0087 05       		.uleb128 0x5
 3686 0088 49       		.uleb128 0x49
 3687 0089 13       		.uleb128 0x13
 3688 008a 02       		.uleb128 0x2
 3689 008b 17       		.uleb128 0x17
 3690 008c 00       		.byte	0
 3691 008d 00       		.byte	0
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 130


 3692 008e 0B       		.uleb128 0xb
 3693 008f 34       		.uleb128 0x34
 3694 0090 00       		.byte	0
 3695 0091 03       		.uleb128 0x3
 3696 0092 0E       		.uleb128 0xe
 3697 0093 3A       		.uleb128 0x3a
 3698 0094 0B       		.uleb128 0xb
 3699 0095 3B       		.uleb128 0x3b
 3700 0096 05       		.uleb128 0x5
 3701 0097 49       		.uleb128 0x49
 3702 0098 13       		.uleb128 0x13
 3703 0099 02       		.uleb128 0x2
 3704 009a 17       		.uleb128 0x17
 3705 009b 00       		.byte	0
 3706 009c 00       		.byte	0
 3707 009d 0C       		.uleb128 0xc
 3708 009e 898201   		.uleb128 0x4109
 3709 00a1 00       		.byte	0
 3710 00a2 11       		.uleb128 0x11
 3711 00a3 01       		.uleb128 0x1
 3712 00a4 31       		.uleb128 0x31
 3713 00a5 13       		.uleb128 0x13
 3714 00a6 00       		.byte	0
 3715 00a7 00       		.byte	0
 3716 00a8 0D       		.uleb128 0xd
 3717 00a9 05       		.uleb128 0x5
 3718 00aa 00       		.byte	0
 3719 00ab 03       		.uleb128 0x3
 3720 00ac 0E       		.uleb128 0xe
 3721 00ad 3A       		.uleb128 0x3a
 3722 00ae 0B       		.uleb128 0xb
 3723 00af 3B       		.uleb128 0x3b
 3724 00b0 05       		.uleb128 0x5
 3725 00b1 49       		.uleb128 0x49
 3726 00b2 13       		.uleb128 0x13
 3727 00b3 02       		.uleb128 0x2
 3728 00b4 18       		.uleb128 0x18
 3729 00b5 00       		.byte	0
 3730 00b6 00       		.byte	0
 3731 00b7 0E       		.uleb128 0xe
 3732 00b8 2E       		.uleb128 0x2e
 3733 00b9 01       		.byte	0x1
 3734 00ba 3F       		.uleb128 0x3f
 3735 00bb 19       		.uleb128 0x19
 3736 00bc 03       		.uleb128 0x3
 3737 00bd 0E       		.uleb128 0xe
 3738 00be 3A       		.uleb128 0x3a
 3739 00bf 0B       		.uleb128 0xb
 3740 00c0 3B       		.uleb128 0x3b
 3741 00c1 05       		.uleb128 0x5
 3742 00c2 27       		.uleb128 0x27
 3743 00c3 19       		.uleb128 0x19
 3744 00c4 49       		.uleb128 0x49
 3745 00c5 13       		.uleb128 0x13
 3746 00c6 11       		.uleb128 0x11
 3747 00c7 01       		.uleb128 0x1
 3748 00c8 12       		.uleb128 0x12
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 131


 3749 00c9 06       		.uleb128 0x6
 3750 00ca 40       		.uleb128 0x40
 3751 00cb 18       		.uleb128 0x18
 3752 00cc 9742     		.uleb128 0x2117
 3753 00ce 19       		.uleb128 0x19
 3754 00cf 01       		.uleb128 0x1
 3755 00d0 13       		.uleb128 0x13
 3756 00d1 00       		.byte	0
 3757 00d2 00       		.byte	0
 3758 00d3 0F       		.uleb128 0xf
 3759 00d4 34       		.uleb128 0x34
 3760 00d5 00       		.byte	0
 3761 00d6 03       		.uleb128 0x3
 3762 00d7 0E       		.uleb128 0xe
 3763 00d8 3A       		.uleb128 0x3a
 3764 00d9 0B       		.uleb128 0xb
 3765 00da 3B       		.uleb128 0x3b
 3766 00db 05       		.uleb128 0x5
 3767 00dc 49       		.uleb128 0x49
 3768 00dd 13       		.uleb128 0x13
 3769 00de 02       		.uleb128 0x2
 3770 00df 18       		.uleb128 0x18
 3771 00e0 00       		.byte	0
 3772 00e1 00       		.byte	0
 3773 00e2 10       		.uleb128 0x10
 3774 00e3 01       		.uleb128 0x1
 3775 00e4 01       		.byte	0x1
 3776 00e5 49       		.uleb128 0x49
 3777 00e6 13       		.uleb128 0x13
 3778 00e7 01       		.uleb128 0x1
 3779 00e8 13       		.uleb128 0x13
 3780 00e9 00       		.byte	0
 3781 00ea 00       		.byte	0
 3782 00eb 11       		.uleb128 0x11
 3783 00ec 21       		.uleb128 0x21
 3784 00ed 00       		.byte	0
 3785 00ee 49       		.uleb128 0x49
 3786 00ef 13       		.uleb128 0x13
 3787 00f0 2F       		.uleb128 0x2f
 3788 00f1 0B       		.uleb128 0xb
 3789 00f2 00       		.byte	0
 3790 00f3 00       		.byte	0
 3791 00f4 12       		.uleb128 0x12
 3792 00f5 2E       		.uleb128 0x2e
 3793 00f6 00       		.byte	0
 3794 00f7 3F       		.uleb128 0x3f
 3795 00f8 19       		.uleb128 0x19
 3796 00f9 03       		.uleb128 0x3
 3797 00fa 0E       		.uleb128 0xe
 3798 00fb 3A       		.uleb128 0x3a
 3799 00fc 0B       		.uleb128 0xb
 3800 00fd 3B       		.uleb128 0x3b
 3801 00fe 05       		.uleb128 0x5
 3802 00ff 27       		.uleb128 0x27
 3803 0100 19       		.uleb128 0x19
 3804 0101 11       		.uleb128 0x11
 3805 0102 01       		.uleb128 0x1
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 132


 3806 0103 12       		.uleb128 0x12
 3807 0104 06       		.uleb128 0x6
 3808 0105 40       		.uleb128 0x40
 3809 0106 18       		.uleb128 0x18
 3810 0107 9742     		.uleb128 0x2117
 3811 0109 19       		.uleb128 0x19
 3812 010a 00       		.byte	0
 3813 010b 00       		.byte	0
 3814 010c 13       		.uleb128 0x13
 3815 010d 2E       		.uleb128 0x2e
 3816 010e 00       		.byte	0
 3817 010f 3F       		.uleb128 0x3f
 3818 0110 19       		.uleb128 0x19
 3819 0111 03       		.uleb128 0x3
 3820 0112 0E       		.uleb128 0xe
 3821 0113 3A       		.uleb128 0x3a
 3822 0114 0B       		.uleb128 0xb
 3823 0115 3B       		.uleb128 0x3b
 3824 0116 05       		.uleb128 0x5
 3825 0117 27       		.uleb128 0x27
 3826 0118 19       		.uleb128 0x19
 3827 0119 49       		.uleb128 0x49
 3828 011a 13       		.uleb128 0x13
 3829 011b 11       		.uleb128 0x11
 3830 011c 01       		.uleb128 0x1
 3831 011d 12       		.uleb128 0x12
 3832 011e 06       		.uleb128 0x6
 3833 011f 40       		.uleb128 0x40
 3834 0120 18       		.uleb128 0x18
 3835 0121 9742     		.uleb128 0x2117
 3836 0123 19       		.uleb128 0x19
 3837 0124 00       		.byte	0
 3838 0125 00       		.byte	0
 3839 0126 14       		.uleb128 0x14
 3840 0127 898201   		.uleb128 0x4109
 3841 012a 01       		.byte	0x1
 3842 012b 11       		.uleb128 0x11
 3843 012c 01       		.uleb128 0x1
 3844 012d 31       		.uleb128 0x31
 3845 012e 13       		.uleb128 0x13
 3846 012f 00       		.byte	0
 3847 0130 00       		.byte	0
 3848 0131 15       		.uleb128 0x15
 3849 0132 8A8201   		.uleb128 0x410a
 3850 0135 00       		.byte	0
 3851 0136 02       		.uleb128 0x2
 3852 0137 18       		.uleb128 0x18
 3853 0138 9142     		.uleb128 0x2111
 3854 013a 18       		.uleb128 0x18
 3855 013b 00       		.byte	0
 3856 013c 00       		.byte	0
 3857 013d 16       		.uleb128 0x16
 3858 013e 34       		.uleb128 0x34
 3859 013f 00       		.byte	0
 3860 0140 03       		.uleb128 0x3
 3861 0141 0E       		.uleb128 0xe
 3862 0142 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 133


 3863 0143 0B       		.uleb128 0xb
 3864 0144 3B       		.uleb128 0x3b
 3865 0145 05       		.uleb128 0x5
 3866 0146 49       		.uleb128 0x49
 3867 0147 13       		.uleb128 0x13
 3868 0148 1C       		.uleb128 0x1c
 3869 0149 06       		.uleb128 0x6
 3870 014a 00       		.byte	0
 3871 014b 00       		.byte	0
 3872 014c 17       		.uleb128 0x17
 3873 014d 898201   		.uleb128 0x4109
 3874 0150 01       		.byte	0x1
 3875 0151 11       		.uleb128 0x11
 3876 0152 01       		.uleb128 0x1
 3877 0153 31       		.uleb128 0x31
 3878 0154 13       		.uleb128 0x13
 3879 0155 01       		.uleb128 0x1
 3880 0156 13       		.uleb128 0x13
 3881 0157 00       		.byte	0
 3882 0158 00       		.byte	0
 3883 0159 18       		.uleb128 0x18
 3884 015a 2E       		.uleb128 0x2e
 3885 015b 01       		.byte	0x1
 3886 015c 3F       		.uleb128 0x3f
 3887 015d 19       		.uleb128 0x19
 3888 015e 03       		.uleb128 0x3
 3889 015f 0E       		.uleb128 0xe
 3890 0160 3A       		.uleb128 0x3a
 3891 0161 0B       		.uleb128 0xb
 3892 0162 3B       		.uleb128 0x3b
 3893 0163 05       		.uleb128 0x5
 3894 0164 27       		.uleb128 0x27
 3895 0165 19       		.uleb128 0x19
 3896 0166 11       		.uleb128 0x11
 3897 0167 01       		.uleb128 0x1
 3898 0168 12       		.uleb128 0x12
 3899 0169 06       		.uleb128 0x6
 3900 016a 40       		.uleb128 0x40
 3901 016b 18       		.uleb128 0x18
 3902 016c 9642     		.uleb128 0x2116
 3903 016e 19       		.uleb128 0x19
 3904 016f 01       		.uleb128 0x1
 3905 0170 13       		.uleb128 0x13
 3906 0171 00       		.byte	0
 3907 0172 00       		.byte	0
 3908 0173 19       		.uleb128 0x19
 3909 0174 2E       		.uleb128 0x2e
 3910 0175 01       		.byte	0x1
 3911 0176 03       		.uleb128 0x3
 3912 0177 0E       		.uleb128 0xe
 3913 0178 3A       		.uleb128 0x3a
 3914 0179 0B       		.uleb128 0xb
 3915 017a 3B       		.uleb128 0x3b
 3916 017b 05       		.uleb128 0x5
 3917 017c 27       		.uleb128 0x27
 3918 017d 19       		.uleb128 0x19
 3919 017e 11       		.uleb128 0x11
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 134


 3920 017f 01       		.uleb128 0x1
 3921 0180 12       		.uleb128 0x12
 3922 0181 06       		.uleb128 0x6
 3923 0182 40       		.uleb128 0x40
 3924 0183 18       		.uleb128 0x18
 3925 0184 9642     		.uleb128 0x2116
 3926 0186 19       		.uleb128 0x19
 3927 0187 01       		.uleb128 0x1
 3928 0188 13       		.uleb128 0x13
 3929 0189 00       		.byte	0
 3930 018a 00       		.byte	0
 3931 018b 1A       		.uleb128 0x1a
 3932 018c 34       		.uleb128 0x34
 3933 018d 00       		.byte	0
 3934 018e 03       		.uleb128 0x3
 3935 018f 08       		.uleb128 0x8
 3936 0190 3A       		.uleb128 0x3a
 3937 0191 0B       		.uleb128 0xb
 3938 0192 3B       		.uleb128 0x3b
 3939 0193 05       		.uleb128 0x5
 3940 0194 49       		.uleb128 0x49
 3941 0195 13       		.uleb128 0x13
 3942 0196 02       		.uleb128 0x2
 3943 0197 17       		.uleb128 0x17
 3944 0198 00       		.byte	0
 3945 0199 00       		.byte	0
 3946 019a 1B       		.uleb128 0x1b
 3947 019b 34       		.uleb128 0x34
 3948 019c 00       		.byte	0
 3949 019d 03       		.uleb128 0x3
 3950 019e 0E       		.uleb128 0xe
 3951 019f 3A       		.uleb128 0x3a
 3952 01a0 0B       		.uleb128 0xb
 3953 01a1 3B       		.uleb128 0x3b
 3954 01a2 0B       		.uleb128 0xb
 3955 01a3 49       		.uleb128 0x49
 3956 01a4 13       		.uleb128 0x13
 3957 01a5 02       		.uleb128 0x2
 3958 01a6 18       		.uleb128 0x18
 3959 01a7 00       		.byte	0
 3960 01a8 00       		.byte	0
 3961 01a9 1C       		.uleb128 0x1c
 3962 01aa 34       		.uleb128 0x34
 3963 01ab 00       		.byte	0
 3964 01ac 03       		.uleb128 0x3
 3965 01ad 0E       		.uleb128 0xe
 3966 01ae 3A       		.uleb128 0x3a
 3967 01af 0B       		.uleb128 0xb
 3968 01b0 3B       		.uleb128 0x3b
 3969 01b1 0B       		.uleb128 0xb
 3970 01b2 49       		.uleb128 0x49
 3971 01b3 13       		.uleb128 0x13
 3972 01b4 3F       		.uleb128 0x3f
 3973 01b5 19       		.uleb128 0x19
 3974 01b6 02       		.uleb128 0x2
 3975 01b7 18       		.uleb128 0x18
 3976 01b8 00       		.byte	0
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 135


 3977 01b9 00       		.byte	0
 3978 01ba 1D       		.uleb128 0x1d
 3979 01bb 26       		.uleb128 0x26
 3980 01bc 00       		.byte	0
 3981 01bd 49       		.uleb128 0x49
 3982 01be 13       		.uleb128 0x13
 3983 01bf 00       		.byte	0
 3984 01c0 00       		.byte	0
 3985 01c1 1E       		.uleb128 0x1e
 3986 01c2 2E       		.uleb128 0x2e
 3987 01c3 00       		.byte	0
 3988 01c4 3F       		.uleb128 0x3f
 3989 01c5 19       		.uleb128 0x19
 3990 01c6 3C       		.uleb128 0x3c
 3991 01c7 19       		.uleb128 0x19
 3992 01c8 6E       		.uleb128 0x6e
 3993 01c9 0E       		.uleb128 0xe
 3994 01ca 03       		.uleb128 0x3
 3995 01cb 0E       		.uleb128 0xe
 3996 01cc 3A       		.uleb128 0x3a
 3997 01cd 0B       		.uleb128 0xb
 3998 01ce 3B       		.uleb128 0x3b
 3999 01cf 0B       		.uleb128 0xb
 4000 01d0 00       		.byte	0
 4001 01d1 00       		.byte	0
 4002 01d2 00       		.byte	0
 4003              		.section	.debug_loc,"",%progbits
 4004              	.Ldebug_loc0:
 4005              	.LLST0:
 4006 0000 00000000 		.4byte	.LVL0
 4007 0004 07000000 		.4byte	.LVL1-1
 4008 0008 0100     		.2byte	0x1
 4009 000a 50       		.byte	0x50
 4010 000b 07000000 		.4byte	.LVL1-1
 4011 000f 12000000 		.4byte	.LVL3
 4012 0013 0100     		.2byte	0x1
 4013 0015 54       		.byte	0x54
 4014 0016 12000000 		.4byte	.LVL3
 4015 001a 20000000 		.4byte	.LFE4
 4016 001e 0400     		.2byte	0x4
 4017 0020 F3       		.byte	0xf3
 4018 0021 01       		.uleb128 0x1
 4019 0022 50       		.byte	0x50
 4020 0023 9F       		.byte	0x9f
 4021 0024 00000000 		.4byte	0
 4022 0028 00000000 		.4byte	0
 4023              	.LLST1:
 4024 002c 08000000 		.4byte	.LVL1
 4025 0030 19000000 		.4byte	.LVL5-1
 4026 0034 0100     		.2byte	0x1
 4027 0036 50       		.byte	0x50
 4028 0037 00000000 		.4byte	0
 4029 003b 00000000 		.4byte	0
 4030              	.LLST2:
 4031 003f 10000000 		.4byte	.LVL2
 4032 0043 14000000 		.4byte	.LVL4
 4033 0047 0100     		.2byte	0x1
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 136


 4034 0049 53       		.byte	0x53
 4035 004a 14000000 		.4byte	.LVL4
 4036 004e 1A000000 		.4byte	.LVL6
 4037 0052 0100     		.2byte	0x1
 4038 0054 54       		.byte	0x54
 4039 0055 00000000 		.4byte	0
 4040 0059 00000000 		.4byte	0
 4041              	.LLST3:
 4042 005d 06000000 		.4byte	.LVL8
 4043 0061 11000000 		.4byte	.LVL10-1
 4044 0065 0100     		.2byte	0x1
 4045 0067 50       		.byte	0x50
 4046 0068 00000000 		.4byte	0
 4047 006c 00000000 		.4byte	0
 4048              	.LLST4:
 4049 0070 0E000000 		.4byte	.LVL9
 4050 0074 14000000 		.4byte	.LVL11
 4051 0078 0100     		.2byte	0x1
 4052 007a 54       		.byte	0x54
 4053 007b 14000000 		.4byte	.LVL11
 4054 007f 1C000000 		.4byte	.LFE6
 4055 0083 0100     		.2byte	0x1
 4056 0085 50       		.byte	0x50
 4057 0086 00000000 		.4byte	0
 4058 008a 00000000 		.4byte	0
 4059              	.LLST5:
 4060 008e 00000000 		.4byte	.LVL12
 4061 0092 07000000 		.4byte	.LVL13-1
 4062 0096 0100     		.2byte	0x1
 4063 0098 50       		.byte	0x50
 4064 0099 07000000 		.4byte	.LVL13-1
 4065 009d 14000000 		.4byte	.LVL14
 4066 00a1 0100     		.2byte	0x1
 4067 00a3 54       		.byte	0x54
 4068 00a4 14000000 		.4byte	.LVL14
 4069 00a8 30000000 		.4byte	.LFE7
 4070 00ac 0400     		.2byte	0x4
 4071 00ae F3       		.byte	0xf3
 4072 00af 01       		.uleb128 0x1
 4073 00b0 50       		.byte	0x50
 4074 00b1 9F       		.byte	0x9f
 4075 00b2 00000000 		.4byte	0
 4076 00b6 00000000 		.4byte	0
 4077              	.LLST6:
 4078 00ba 08000000 		.4byte	.LVL13
 4079 00be 23000000 		.4byte	.LVL15-1
 4080 00c2 0100     		.2byte	0x1
 4081 00c4 50       		.byte	0x50
 4082 00c5 00000000 		.4byte	0
 4083 00c9 00000000 		.4byte	0
 4084              	.LLST7:
 4085 00cd 00000000 		.4byte	.LVL16
 4086 00d1 09000000 		.4byte	.LVL17-1
 4087 00d5 0100     		.2byte	0x1
 4088 00d7 50       		.byte	0x50
 4089 00d8 09000000 		.4byte	.LVL17-1
 4090 00dc 18000000 		.4byte	.LVL18
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 137


 4091 00e0 0100     		.2byte	0x1
 4092 00e2 54       		.byte	0x54
 4093 00e3 18000000 		.4byte	.LVL18
 4094 00e7 40000000 		.4byte	.LVL20
 4095 00eb 0300     		.2byte	0x3
 4096 00ed 74       		.byte	0x74
 4097 00ee 03       		.sleb128 3
 4098 00ef 9F       		.byte	0x9f
 4099 00f0 40000000 		.4byte	.LVL20
 4100 00f4 64000000 		.4byte	.LFE8
 4101 00f8 0400     		.2byte	0x4
 4102 00fa F3       		.byte	0xf3
 4103 00fb 01       		.uleb128 0x1
 4104 00fc 50       		.byte	0x50
 4105 00fd 9F       		.byte	0x9f
 4106 00fe 00000000 		.4byte	0
 4107 0102 00000000 		.4byte	0
 4108              	.LLST8:
 4109 0106 0A000000 		.4byte	.LVL17
 4110 010a 3D000000 		.4byte	.LVL19-1
 4111 010e 0100     		.2byte	0x1
 4112 0110 50       		.byte	0x50
 4113 0111 00000000 		.4byte	0
 4114 0115 00000000 		.4byte	0
 4115              	.LLST9:
 4116 0119 00000000 		.4byte	.LVL22
 4117 011d 04000000 		.4byte	.LVL23
 4118 0121 0100     		.2byte	0x1
 4119 0123 50       		.byte	0x50
 4120 0124 04000000 		.4byte	.LVL23
 4121 0128 14000000 		.4byte	.LFE17
 4122 012c 0100     		.2byte	0x1
 4123 012e 52       		.byte	0x52
 4124 012f 00000000 		.4byte	0
 4125 0133 00000000 		.4byte	0
 4126              	.LLST10:
 4127 0137 00000000 		.4byte	.LVL28
 4128 013b 04000000 		.4byte	.LVL29
 4129 013f 0100     		.2byte	0x1
 4130 0141 50       		.byte	0x50
 4131 0142 04000000 		.4byte	.LVL29
 4132 0146 14000000 		.4byte	.LFE26
 4133 014a 0400     		.2byte	0x4
 4134 014c F3       		.byte	0xf3
 4135 014d 01       		.uleb128 0x1
 4136 014e 50       		.byte	0x50
 4137 014f 9F       		.byte	0x9f
 4138 0150 00000000 		.4byte	0
 4139 0154 00000000 		.4byte	0
 4140              	.LLST11:
 4141 0158 00000000 		.4byte	.LVL30
 4142 015c 08000000 		.4byte	.LVL31
 4143 0160 0100     		.2byte	0x1
 4144 0162 50       		.byte	0x50
 4145 0163 08000000 		.4byte	.LVL31
 4146 0167 18000000 		.4byte	.LFE27
 4147 016b 0400     		.2byte	0x4
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 138


 4148 016d F3       		.byte	0xf3
 4149 016e 01       		.uleb128 0x1
 4150 016f 50       		.byte	0x50
 4151 0170 9F       		.byte	0x9f
 4152 0171 00000000 		.4byte	0
 4153 0175 00000000 		.4byte	0
 4154              	.LLST12:
 4155 0179 00000000 		.4byte	.LVL32
 4156 017d 04000000 		.4byte	.LVL33
 4157 0181 0100     		.2byte	0x1
 4158 0183 50       		.byte	0x50
 4159 0184 04000000 		.4byte	.LVL33
 4160 0188 14000000 		.4byte	.LFE28
 4161 018c 0400     		.2byte	0x4
 4162 018e F3       		.byte	0xf3
 4163 018f 01       		.uleb128 0x1
 4164 0190 50       		.byte	0x50
 4165 0191 9F       		.byte	0x9f
 4166 0192 00000000 		.4byte	0
 4167 0196 00000000 		.4byte	0
 4168              	.LLST13:
 4169 019a 00000000 		.4byte	.LVL34
 4170 019e 04000000 		.4byte	.LVL35
 4171 01a2 0100     		.2byte	0x1
 4172 01a4 50       		.byte	0x50
 4173 01a5 04000000 		.4byte	.LVL35
 4174 01a9 14000000 		.4byte	.LFE29
 4175 01ad 0400     		.2byte	0x4
 4176 01af F3       		.byte	0xf3
 4177 01b0 01       		.uleb128 0x1
 4178 01b1 50       		.byte	0x50
 4179 01b2 9F       		.byte	0x9f
 4180 01b3 00000000 		.4byte	0
 4181 01b7 00000000 		.4byte	0
 4182              	.LLST14:
 4183 01bb 00000000 		.4byte	.LVL36
 4184 01bf 04000000 		.4byte	.LVL37
 4185 01c3 0100     		.2byte	0x1
 4186 01c5 50       		.byte	0x50
 4187 01c6 04000000 		.4byte	.LVL37
 4188 01ca 14000000 		.4byte	.LFE30
 4189 01ce 0400     		.2byte	0x4
 4190 01d0 F3       		.byte	0xf3
 4191 01d1 01       		.uleb128 0x1
 4192 01d2 50       		.byte	0x50
 4193 01d3 9F       		.byte	0x9f
 4194 01d4 00000000 		.4byte	0
 4195 01d8 00000000 		.4byte	0
 4196              	.LLST15:
 4197 01dc 00000000 		.4byte	.LVL39
 4198 01e0 13000000 		.4byte	.LVL40-1
 4199 01e4 0100     		.2byte	0x1
 4200 01e6 50       		.byte	0x50
 4201 01e7 13000000 		.4byte	.LVL40-1
 4202 01eb 18000000 		.4byte	.LVL41
 4203 01ef 0100     		.2byte	0x1
 4204 01f1 54       		.byte	0x54
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 139


 4205 01f2 18000000 		.4byte	.LVL41
 4206 01f6 28000000 		.4byte	.LVL43
 4207 01fa 0400     		.2byte	0x4
 4208 01fc F3       		.byte	0xf3
 4209 01fd 01       		.uleb128 0x1
 4210 01fe 50       		.byte	0x50
 4211 01ff 9F       		.byte	0x9f
 4212 0200 28000000 		.4byte	.LVL43
 4213 0204 2A000000 		.4byte	.LVL44
 4214 0208 0100     		.2byte	0x1
 4215 020a 50       		.byte	0x50
 4216 020b 2A000000 		.4byte	.LVL44
 4217 020f 2E000000 		.4byte	.LVL45
 4218 0213 0100     		.2byte	0x1
 4219 0215 54       		.byte	0x54
 4220 0216 2E000000 		.4byte	.LVL45
 4221 021a 38000000 		.4byte	.LFE12
 4222 021e 0400     		.2byte	0x4
 4223 0220 F3       		.byte	0xf3
 4224 0221 01       		.uleb128 0x1
 4225 0222 50       		.byte	0x50
 4226 0223 9F       		.byte	0x9f
 4227 0224 00000000 		.4byte	0
 4228 0228 00000000 		.4byte	0
 4229              	.LLST16:
 4230 022c 14000000 		.4byte	.LVL40
 4231 0230 25000000 		.4byte	.LVL42-1
 4232 0234 0100     		.2byte	0x1
 4233 0236 50       		.byte	0x50
 4234 0237 00000000 		.4byte	0
 4235 023b 00000000 		.4byte	0
 4236              	.LLST17:
 4237 023f 00000000 		.4byte	.LVL46
 4238 0243 0C000000 		.4byte	.LVL48
 4239 0247 0100     		.2byte	0x1
 4240 0249 50       		.byte	0x50
 4241 024a 0C000000 		.4byte	.LVL48
 4242 024e 20000000 		.4byte	.LFE20
 4243 0252 0400     		.2byte	0x4
 4244 0254 F3       		.byte	0xf3
 4245 0255 01       		.uleb128 0x1
 4246 0256 50       		.byte	0x50
 4247 0257 9F       		.byte	0x9f
 4248 0258 00000000 		.4byte	0
 4249 025c 00000000 		.4byte	0
 4250              	.LLST18:
 4251 0260 00000000 		.4byte	.LVL46
 4252 0264 0F000000 		.4byte	.LVL49-1
 4253 0268 0100     		.2byte	0x1
 4254 026a 51       		.byte	0x51
 4255 026b 0F000000 		.4byte	.LVL49-1
 4256 026f 1E000000 		.4byte	.LVL51
 4257 0273 0100     		.2byte	0x1
 4258 0275 55       		.byte	0x55
 4259 0276 1E000000 		.4byte	.LVL51
 4260 027a 20000000 		.4byte	.LFE20
 4261 027e 0400     		.2byte	0x4
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 140


 4262 0280 F3       		.byte	0xf3
 4263 0281 01       		.uleb128 0x1
 4264 0282 51       		.byte	0x51
 4265 0283 9F       		.byte	0x9f
 4266 0284 00000000 		.4byte	0
 4267 0288 00000000 		.4byte	0
 4268              	.LLST19:
 4269 028c 00000000 		.4byte	.LVL52
 4270 0290 0A000000 		.4byte	.LVL54
 4271 0294 0100     		.2byte	0x1
 4272 0296 50       		.byte	0x50
 4273 0297 0A000000 		.4byte	.LVL54
 4274 029b 1C000000 		.4byte	.LFE21
 4275 029f 0400     		.2byte	0x4
 4276 02a1 F3       		.byte	0xf3
 4277 02a2 01       		.uleb128 0x1
 4278 02a3 50       		.byte	0x50
 4279 02a4 9F       		.byte	0x9f
 4280 02a5 00000000 		.4byte	0
 4281 02a9 00000000 		.4byte	0
 4282              	.LLST20:
 4283 02ad 00000000 		.4byte	.LVL56
 4284 02b1 0C000000 		.4byte	.LVL58
 4285 02b5 0100     		.2byte	0x1
 4286 02b7 50       		.byte	0x50
 4287 02b8 0C000000 		.4byte	.LVL58
 4288 02bc 22000000 		.4byte	.LFE22
 4289 02c0 0400     		.2byte	0x4
 4290 02c2 F3       		.byte	0xf3
 4291 02c3 01       		.uleb128 0x1
 4292 02c4 50       		.byte	0x50
 4293 02c5 9F       		.byte	0x9f
 4294 02c6 00000000 		.4byte	0
 4295 02ca 00000000 		.4byte	0
 4296              	.LLST21:
 4297 02ce 00000000 		.4byte	.LVL56
 4298 02d2 0F000000 		.4byte	.LVL59-1
 4299 02d6 0100     		.2byte	0x1
 4300 02d8 51       		.byte	0x51
 4301 02d9 0F000000 		.4byte	.LVL59-1
 4302 02dd 20000000 		.4byte	.LVL61
 4303 02e1 0100     		.2byte	0x1
 4304 02e3 55       		.byte	0x55
 4305 02e4 20000000 		.4byte	.LVL61
 4306 02e8 22000000 		.4byte	.LFE22
 4307 02ec 0400     		.2byte	0x4
 4308 02ee F3       		.byte	0xf3
 4309 02ef 01       		.uleb128 0x1
 4310 02f0 51       		.byte	0x51
 4311 02f1 9F       		.byte	0x9f
 4312 02f2 00000000 		.4byte	0
 4313 02f6 00000000 		.4byte	0
 4314              	.LLST22:
 4315 02fa 00000000 		.4byte	.LVL62
 4316 02fe 0A000000 		.4byte	.LVL64
 4317 0302 0100     		.2byte	0x1
 4318 0304 50       		.byte	0x50
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 141


 4319 0305 0A000000 		.4byte	.LVL64
 4320 0309 1E000000 		.4byte	.LFE23
 4321 030d 0400     		.2byte	0x4
 4322 030f F3       		.byte	0xf3
 4323 0310 01       		.uleb128 0x1
 4324 0311 50       		.byte	0x50
 4325 0312 9F       		.byte	0x9f
 4326 0313 00000000 		.4byte	0
 4327 0317 00000000 		.4byte	0
 4328              	.LLST23:
 4329 031b 00000000 		.4byte	.LVL66
 4330 031f 0C000000 		.4byte	.LVL67
 4331 0323 0100     		.2byte	0x1
 4332 0325 50       		.byte	0x50
 4333 0326 0C000000 		.4byte	.LVL67
 4334 032a 4C000000 		.4byte	.LFE24
 4335 032e 0400     		.2byte	0x4
 4336 0330 F3       		.byte	0xf3
 4337 0331 01       		.uleb128 0x1
 4338 0332 50       		.byte	0x50
 4339 0333 9F       		.byte	0x9f
 4340 0334 00000000 		.4byte	0
 4341 0338 00000000 		.4byte	0
 4342              	.LLST24:
 4343 033c 00000000 		.4byte	.LVL66
 4344 0340 0F000000 		.4byte	.LVL68-1
 4345 0344 0100     		.2byte	0x1
 4346 0346 51       		.byte	0x51
 4347 0347 0F000000 		.4byte	.LVL68-1
 4348 034b 4C000000 		.4byte	.LFE24
 4349 034f 0400     		.2byte	0x4
 4350 0351 F3       		.byte	0xf3
 4351 0352 01       		.uleb128 0x1
 4352 0353 51       		.byte	0x51
 4353 0354 9F       		.byte	0x9f
 4354 0355 00000000 		.4byte	0
 4355 0359 00000000 		.4byte	0
 4356              	.LLST25:
 4357 035d 26000000 		.4byte	.LVL71
 4358 0361 45000000 		.4byte	.LVL77-1
 4359 0365 0100     		.2byte	0x1
 4360 0367 50       		.byte	0x50
 4361 0368 00000000 		.4byte	0
 4362 036c 00000000 		.4byte	0
 4363              	.LLST26:
 4364 0370 22000000 		.4byte	.LVL70
 4365 0374 46000000 		.4byte	.LVL78
 4366 0378 0100     		.2byte	0x1
 4367 037a 55       		.byte	0x55
 4368 037b 00000000 		.4byte	0
 4369 037f 00000000 		.4byte	0
 4370              	.LLST27:
 4371 0383 32000000 		.4byte	.LVL72
 4372 0387 38000000 		.4byte	.LVL73
 4373 038b 0100     		.2byte	0x1
 4374 038d 51       		.byte	0x51
 4375 038e 3A000000 		.4byte	.LVL74
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 142


 4376 0392 3C000000 		.4byte	.LVL75
 4377 0396 0100     		.2byte	0x1
 4378 0398 51       		.byte	0x51
 4379 0399 3C000000 		.4byte	.LVL75
 4380 039d 40000000 		.4byte	.LVL76
 4381 03a1 0100     		.2byte	0x1
 4382 03a3 53       		.byte	0x53
 4383 03a4 40000000 		.4byte	.LVL76
 4384 03a8 45000000 		.4byte	.LVL77-1
 4385 03ac 0100     		.2byte	0x1
 4386 03ae 51       		.byte	0x51
 4387 03af 00000000 		.4byte	0
 4388 03b3 00000000 		.4byte	0
 4389              	.LLST28:
 4390 03b7 00000000 		.4byte	.LVL79
 4391 03bb 0A000000 		.4byte	.LVL80
 4392 03bf 0100     		.2byte	0x1
 4393 03c1 50       		.byte	0x50
 4394 03c2 0A000000 		.4byte	.LVL80
 4395 03c6 2C000000 		.4byte	.LFE25
 4396 03ca 0400     		.2byte	0x4
 4397 03cc F3       		.byte	0xf3
 4398 03cd 01       		.uleb128 0x1
 4399 03ce 50       		.byte	0x50
 4400 03cf 9F       		.byte	0x9f
 4401 03d0 00000000 		.4byte	0
 4402 03d4 00000000 		.4byte	0
 4403              	.LLST29:
 4404 03d8 24000000 		.4byte	.LVL82
 4405 03dc 26000000 		.4byte	.LVL83
 4406 03e0 0100     		.2byte	0x1
 4407 03e2 50       		.byte	0x50
 4408 03e3 00000000 		.4byte	0
 4409 03e7 00000000 		.4byte	0
 4410              	.LLST30:
 4411 03eb 00000000 		.4byte	.LVL84
 4412 03ef 06000000 		.4byte	.LVL85
 4413 03f3 0100     		.2byte	0x1
 4414 03f5 50       		.byte	0x50
 4415 03f6 06000000 		.4byte	.LVL85
 4416 03fa 26000000 		.4byte	.LVL89
 4417 03fe 0100     		.2byte	0x1
 4418 0400 54       		.byte	0x54
 4419 0401 00000000 		.4byte	0
 4420 0405 00000000 		.4byte	0
 4421              	.LLST31:
 4422 0409 00000000 		.4byte	.LVL90
 4423 040d 08000000 		.4byte	.LVL91
 4424 0411 0100     		.2byte	0x1
 4425 0413 50       		.byte	0x50
 4426 0414 08000000 		.4byte	.LVL91
 4427 0418 14000000 		.4byte	.LFE34
 4428 041c 0400     		.2byte	0x4
 4429 041e F3       		.byte	0xf3
 4430 041f 01       		.uleb128 0x1
 4431 0420 50       		.byte	0x50
 4432 0421 9F       		.byte	0x9f
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 143


 4433 0422 00000000 		.4byte	0
 4434 0426 00000000 		.4byte	0
 4435              	.LLST32:
 4436 042a 00000000 		.4byte	.LVL93
 4437 042e 26000000 		.4byte	.LVL95
 4438 0432 0100     		.2byte	0x1
 4439 0434 50       		.byte	0x50
 4440 0435 26000000 		.4byte	.LVL95
 4441 0439 42000000 		.4byte	.LVL100
 4442 043d 0100     		.2byte	0x1
 4443 043f 54       		.byte	0x54
 4444 0440 00000000 		.4byte	0
 4445 0444 00000000 		.4byte	0
 4446              	.LLST33:
 4447 0448 04000000 		.4byte	.LVL94
 4448 044c 42000000 		.4byte	.LVL99
 4449 0450 0200     		.2byte	0x2
 4450 0452 30       		.byte	0x30
 4451 0453 9F       		.byte	0x9f
 4452 0454 42000000 		.4byte	.LVL99
 4453 0458 54000000 		.4byte	.LFE9
 4454 045c 0100     		.2byte	0x1
 4455 045e 50       		.byte	0x50
 4456 045f 00000000 		.4byte	0
 4457 0463 00000000 		.4byte	0
 4458              	.LLST34:
 4459 0467 00000000 		.4byte	.LVL101
 4460 046b 14000000 		.4byte	.LVL102
 4461 046f 0100     		.2byte	0x1
 4462 0471 50       		.byte	0x50
 4463 0472 14000000 		.4byte	.LVL102
 4464 0476 18000000 		.4byte	.LVL103
 4465 047a 0100     		.2byte	0x1
 4466 047c 53       		.byte	0x53
 4467 047d 18000000 		.4byte	.LVL103
 4468 0481 44000000 		.4byte	.LFE13
 4469 0485 0400     		.2byte	0x4
 4470 0487 F3       		.byte	0xf3
 4471 0488 01       		.uleb128 0x1
 4472 0489 50       		.byte	0x50
 4473 048a 9F       		.byte	0x9f
 4474 048b 00000000 		.4byte	0
 4475 048f 00000000 		.4byte	0
 4476              	.LLST35:
 4477 0493 00000000 		.4byte	.LVL106
 4478 0497 1A000000 		.4byte	.LVL107
 4479 049b 0100     		.2byte	0x1
 4480 049d 50       		.byte	0x50
 4481 049e 1A000000 		.4byte	.LVL107
 4482 04a2 4C000000 		.4byte	.LFE35
 4483 04a6 0400     		.2byte	0x4
 4484 04a8 F3       		.byte	0xf3
 4485 04a9 01       		.uleb128 0x1
 4486 04aa 50       		.byte	0x50
 4487 04ab 9F       		.byte	0x9f
 4488 04ac 00000000 		.4byte	0
 4489 04b0 00000000 		.4byte	0
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 144


 4490              	.LLST36:
 4491 04b4 00000000 		.4byte	.LVL111
 4492 04b8 02000000 		.4byte	.LVL112
 4493 04bc 0100     		.2byte	0x1
 4494 04be 50       		.byte	0x50
 4495 04bf 02000000 		.4byte	.LVL112
 4496 04c3 10000000 		.4byte	.LFE42
 4497 04c7 0400     		.2byte	0x4
 4498 04c9 F3       		.byte	0xf3
 4499 04ca 01       		.uleb128 0x1
 4500 04cb 50       		.byte	0x50
 4501 04cc 9F       		.byte	0x9f
 4502 04cd 00000000 		.4byte	0
 4503 04d1 00000000 		.4byte	0
 4504              	.LLST37:
 4505 04d5 0C000000 		.4byte	.LVL115
 4506 04d9 1C000000 		.4byte	.LVL118
 4507 04dd 0100     		.2byte	0x1
 4508 04df 54       		.byte	0x54
 4509 04e0 1E000000 		.4byte	.LVL119
 4510 04e4 22000000 		.4byte	.LVL120
 4511 04e8 0100     		.2byte	0x1
 4512 04ea 54       		.byte	0x54
 4513 04eb 00000000 		.4byte	0
 4514 04ef 00000000 		.4byte	0
 4515              	.LLST38:
 4516 04f3 02000000 		.4byte	.LVL121
 4517 04f7 06000000 		.4byte	.LVL122
 4518 04fb 0200     		.2byte	0x2
 4519 04fd 30       		.byte	0x30
 4520 04fe 9F       		.byte	0x9f
 4521 04ff 06000000 		.4byte	.LVL122
 4522 0503 1B000000 		.4byte	.LVL124-1
 4523 0507 0100     		.2byte	0x1
 4524 0509 53       		.byte	0x53
 4525 050a 00000000 		.4byte	0
 4526 050e 00000000 		.4byte	0
 4527              	.LLST39:
 4528 0512 00000000 		.4byte	.LVL131
 4529 0516 06000000 		.4byte	.LVL132
 4530 051a 0100     		.2byte	0x1
 4531 051c 50       		.byte	0x50
 4532 051d 06000000 		.4byte	.LVL132
 4533 0521 10000000 		.4byte	.LFE49
 4534 0525 0400     		.2byte	0x4
 4535 0527 F3       		.byte	0xf3
 4536 0528 01       		.uleb128 0x1
 4537 0529 50       		.byte	0x50
 4538 052a 9F       		.byte	0x9f
 4539 052b 00000000 		.4byte	0
 4540 052f 00000000 		.4byte	0
 4541              	.LLST40:
 4542 0533 00000000 		.4byte	.LVL133
 4543 0537 02000000 		.4byte	.LVL134
 4544 053b 0100     		.2byte	0x1
 4545 053d 50       		.byte	0x50
 4546 053e 02000000 		.4byte	.LVL134
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 145


 4547 0542 0C000000 		.4byte	.LFE50
 4548 0546 0400     		.2byte	0x4
 4549 0548 F3       		.byte	0xf3
 4550 0549 01       		.uleb128 0x1
 4551 054a 50       		.byte	0x50
 4552 054b 9F       		.byte	0x9f
 4553 054c 00000000 		.4byte	0
 4554 0550 00000000 		.4byte	0
 4555              		.section	.debug_aranges,"",%progbits
 4556 0000 AC010000 		.4byte	0x1ac
 4557 0004 0200     		.2byte	0x2
 4558 0006 00000000 		.4byte	.Ldebug_info0
 4559 000a 04       		.byte	0x4
 4560 000b 00       		.byte	0
 4561 000c 0000     		.2byte	0
 4562 000e 0000     		.2byte	0
 4563 0010 00000000 		.4byte	.LFB2
 4564 0014 14000000 		.4byte	.LFE2-.LFB2
 4565 0018 00000000 		.4byte	.LFB3
 4566 001c 10000000 		.4byte	.LFE3-.LFB3
 4567 0020 00000000 		.4byte	.LFB4
 4568 0024 20000000 		.4byte	.LFE4-.LFB4
 4569 0028 00000000 		.4byte	.LFB5
 4570 002c 38000000 		.4byte	.LFE5-.LFB5
 4571 0030 00000000 		.4byte	.LFB6
 4572 0034 1C000000 		.4byte	.LFE6-.LFB6
 4573 0038 00000000 		.4byte	.LFB7
 4574 003c 30000000 		.4byte	.LFE7-.LFB7
 4575 0040 00000000 		.4byte	.LFB8
 4576 0044 64000000 		.4byte	.LFE8-.LFB8
 4577 0048 00000000 		.4byte	.LFB10
 4578 004c 24000000 		.4byte	.LFE10-.LFB10
 4579 0050 00000000 		.4byte	.LFB11
 4580 0054 10000000 		.4byte	.LFE11-.LFB11
 4581 0058 00000000 		.4byte	.LFB14
 4582 005c 20000000 		.4byte	.LFE14-.LFB14
 4583 0060 00000000 		.4byte	.LFB15
 4584 0064 10000000 		.4byte	.LFE15-.LFB15
 4585 0068 00000000 		.4byte	.LFB16
 4586 006c 0C000000 		.4byte	.LFE16-.LFB16
 4587 0070 00000000 		.4byte	.LFB17
 4588 0074 14000000 		.4byte	.LFE17-.LFB17
 4589 0078 00000000 		.4byte	.LFB18
 4590 007c 10000000 		.4byte	.LFE18-.LFB18
 4591 0080 00000000 		.4byte	.LFB19
 4592 0084 0C000000 		.4byte	.LFE19-.LFB19
 4593 0088 00000000 		.4byte	.LFB26
 4594 008c 14000000 		.4byte	.LFE26-.LFB26
 4595 0090 00000000 		.4byte	.LFB27
 4596 0094 18000000 		.4byte	.LFE27-.LFB27
 4597 0098 00000000 		.4byte	.LFB28
 4598 009c 14000000 		.4byte	.LFE28-.LFB28
 4599 00a0 00000000 		.4byte	.LFB29
 4600 00a4 14000000 		.4byte	.LFE29-.LFB29
 4601 00a8 00000000 		.4byte	.LFB30
 4602 00ac 14000000 		.4byte	.LFE30-.LFB30
 4603 00b0 00000000 		.4byte	.LFB31
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 146


 4604 00b4 04000000 		.4byte	.LFE31-.LFB31
 4605 00b8 00000000 		.4byte	.LFB12
 4606 00bc 38000000 		.4byte	.LFE12-.LFB12
 4607 00c0 00000000 		.4byte	.LFB20
 4608 00c4 20000000 		.4byte	.LFE20-.LFB20
 4609 00c8 00000000 		.4byte	.LFB21
 4610 00cc 1C000000 		.4byte	.LFE21-.LFB21
 4611 00d0 00000000 		.4byte	.LFB22
 4612 00d4 22000000 		.4byte	.LFE22-.LFB22
 4613 00d8 00000000 		.4byte	.LFB23
 4614 00dc 1E000000 		.4byte	.LFE23-.LFB23
 4615 00e0 00000000 		.4byte	.LFB24
 4616 00e4 4C000000 		.4byte	.LFE24-.LFB24
 4617 00e8 00000000 		.4byte	.LFB25
 4618 00ec 2C000000 		.4byte	.LFE25-.LFB25
 4619 00f0 00000000 		.4byte	.LFB32
 4620 00f4 18000000 		.4byte	.LFE32-.LFB32
 4621 00f8 00000000 		.4byte	.LFB33
 4622 00fc 30000000 		.4byte	.LFE33-.LFB33
 4623 0100 00000000 		.4byte	.LFB34
 4624 0104 14000000 		.4byte	.LFE34-.LFB34
 4625 0108 00000000 		.4byte	.LFB9
 4626 010c 54000000 		.4byte	.LFE9-.LFB9
 4627 0110 00000000 		.4byte	.LFB13
 4628 0114 44000000 		.4byte	.LFE13-.LFB13
 4629 0118 00000000 		.4byte	.LFB35
 4630 011c 4C000000 		.4byte	.LFE35-.LFB35
 4631 0120 00000000 		.4byte	.LFB39
 4632 0124 10000000 		.4byte	.LFE39-.LFB39
 4633 0128 00000000 		.4byte	.LFB40
 4634 012c 10000000 		.4byte	.LFE40-.LFB40
 4635 0130 00000000 		.4byte	.LFB38
 4636 0134 18000000 		.4byte	.LFE38-.LFB38
 4637 0138 00000000 		.4byte	.LFB41
 4638 013c 10000000 		.4byte	.LFE41-.LFB41
 4639 0140 00000000 		.4byte	.LFB42
 4640 0144 10000000 		.4byte	.LFE42-.LFB42
 4641 0148 00000000 		.4byte	.LFB43
 4642 014c 10000000 		.4byte	.LFE43-.LFB43
 4643 0150 00000000 		.4byte	.LFB44
 4644 0154 10000000 		.4byte	.LFE44-.LFB44
 4645 0158 00000000 		.4byte	.LFB45
 4646 015c 20000000 		.4byte	.LFE45-.LFB45
 4647 0160 00000000 		.4byte	.LFB46
 4648 0164 10000000 		.4byte	.LFE46-.LFB46
 4649 0168 00000000 		.4byte	.LFB47
 4650 016c 10000000 		.4byte	.LFE47-.LFB47
 4651 0170 00000000 		.4byte	.LFB51
 4652 0174 28000000 		.4byte	.LFE51-.LFB51
 4653 0178 00000000 		.4byte	.LFB48
 4654 017c 0C000000 		.4byte	.LFE48-.LFB48
 4655 0180 00000000 		.4byte	.LFB37
 4656 0184 44000000 		.4byte	.LFE37-.LFB37
 4657 0188 00000000 		.4byte	.LFB36
 4658 018c 20000000 		.4byte	.LFE36-.LFB36
 4659 0190 00000000 		.4byte	.LFB49
 4660 0194 10000000 		.4byte	.LFE49-.LFB49
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 147


 4661 0198 00000000 		.4byte	.LFB50
 4662 019c 0C000000 		.4byte	.LFE50-.LFB50
 4663 01a0 00000000 		.4byte	.LFB52
 4664 01a4 70000000 		.4byte	.LFE52-.LFB52
 4665 01a8 00000000 		.4byte	0
 4666 01ac 00000000 		.4byte	0
 4667              		.section	.debug_ranges,"",%progbits
 4668              	.Ldebug_ranges0:
 4669 0000 00000000 		.4byte	.LFB2
 4670 0004 14000000 		.4byte	.LFE2
 4671 0008 00000000 		.4byte	.LFB3
 4672 000c 10000000 		.4byte	.LFE3
 4673 0010 00000000 		.4byte	.LFB4
 4674 0014 20000000 		.4byte	.LFE4
 4675 0018 00000000 		.4byte	.LFB5
 4676 001c 38000000 		.4byte	.LFE5
 4677 0020 00000000 		.4byte	.LFB6
 4678 0024 1C000000 		.4byte	.LFE6
 4679 0028 00000000 		.4byte	.LFB7
 4680 002c 30000000 		.4byte	.LFE7
 4681 0030 00000000 		.4byte	.LFB8
 4682 0034 64000000 		.4byte	.LFE8
 4683 0038 00000000 		.4byte	.LFB10
 4684 003c 24000000 		.4byte	.LFE10
 4685 0040 00000000 		.4byte	.LFB11
 4686 0044 10000000 		.4byte	.LFE11
 4687 0048 00000000 		.4byte	.LFB14
 4688 004c 20000000 		.4byte	.LFE14
 4689 0050 00000000 		.4byte	.LFB15
 4690 0054 10000000 		.4byte	.LFE15
 4691 0058 00000000 		.4byte	.LFB16
 4692 005c 0C000000 		.4byte	.LFE16
 4693 0060 00000000 		.4byte	.LFB17
 4694 0064 14000000 		.4byte	.LFE17
 4695 0068 00000000 		.4byte	.LFB18
 4696 006c 10000000 		.4byte	.LFE18
 4697 0070 00000000 		.4byte	.LFB19
 4698 0074 0C000000 		.4byte	.LFE19
 4699 0078 00000000 		.4byte	.LFB26
 4700 007c 14000000 		.4byte	.LFE26
 4701 0080 00000000 		.4byte	.LFB27
 4702 0084 18000000 		.4byte	.LFE27
 4703 0088 00000000 		.4byte	.LFB28
 4704 008c 14000000 		.4byte	.LFE28
 4705 0090 00000000 		.4byte	.LFB29
 4706 0094 14000000 		.4byte	.LFE29
 4707 0098 00000000 		.4byte	.LFB30
 4708 009c 14000000 		.4byte	.LFE30
 4709 00a0 00000000 		.4byte	.LFB31
 4710 00a4 04000000 		.4byte	.LFE31
 4711 00a8 00000000 		.4byte	.LFB12
 4712 00ac 38000000 		.4byte	.LFE12
 4713 00b0 00000000 		.4byte	.LFB20
 4714 00b4 20000000 		.4byte	.LFE20
 4715 00b8 00000000 		.4byte	.LFB21
 4716 00bc 1C000000 		.4byte	.LFE21
 4717 00c0 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 148


 4718 00c4 22000000 		.4byte	.LFE22
 4719 00c8 00000000 		.4byte	.LFB23
 4720 00cc 1E000000 		.4byte	.LFE23
 4721 00d0 00000000 		.4byte	.LFB24
 4722 00d4 4C000000 		.4byte	.LFE24
 4723 00d8 00000000 		.4byte	.LFB25
 4724 00dc 2C000000 		.4byte	.LFE25
 4725 00e0 00000000 		.4byte	.LFB32
 4726 00e4 18000000 		.4byte	.LFE32
 4727 00e8 00000000 		.4byte	.LFB33
 4728 00ec 30000000 		.4byte	.LFE33
 4729 00f0 00000000 		.4byte	.LFB34
 4730 00f4 14000000 		.4byte	.LFE34
 4731 00f8 00000000 		.4byte	.LFB9
 4732 00fc 54000000 		.4byte	.LFE9
 4733 0100 00000000 		.4byte	.LFB13
 4734 0104 44000000 		.4byte	.LFE13
 4735 0108 00000000 		.4byte	.LFB35
 4736 010c 4C000000 		.4byte	.LFE35
 4737 0110 00000000 		.4byte	.LFB39
 4738 0114 10000000 		.4byte	.LFE39
 4739 0118 00000000 		.4byte	.LFB40
 4740 011c 10000000 		.4byte	.LFE40
 4741 0120 00000000 		.4byte	.LFB38
 4742 0124 18000000 		.4byte	.LFE38
 4743 0128 00000000 		.4byte	.LFB41
 4744 012c 10000000 		.4byte	.LFE41
 4745 0130 00000000 		.4byte	.LFB42
 4746 0134 10000000 		.4byte	.LFE42
 4747 0138 00000000 		.4byte	.LFB43
 4748 013c 10000000 		.4byte	.LFE43
 4749 0140 00000000 		.4byte	.LFB44
 4750 0144 10000000 		.4byte	.LFE44
 4751 0148 00000000 		.4byte	.LFB45
 4752 014c 20000000 		.4byte	.LFE45
 4753 0150 00000000 		.4byte	.LFB46
 4754 0154 10000000 		.4byte	.LFE46
 4755 0158 00000000 		.4byte	.LFB47
 4756 015c 10000000 		.4byte	.LFE47
 4757 0160 00000000 		.4byte	.LFB51
 4758 0164 28000000 		.4byte	.LFE51
 4759 0168 00000000 		.4byte	.LFB48
 4760 016c 0C000000 		.4byte	.LFE48
 4761 0170 00000000 		.4byte	.LFB37
 4762 0174 44000000 		.4byte	.LFE37
 4763 0178 00000000 		.4byte	.LFB36
 4764 017c 20000000 		.4byte	.LFE36
 4765 0180 00000000 		.4byte	.LFB49
 4766 0184 10000000 		.4byte	.LFE49
 4767 0188 00000000 		.4byte	.LFB50
 4768 018c 0C000000 		.4byte	.LFE50
 4769 0190 00000000 		.4byte	.LFB52
 4770 0194 70000000 		.4byte	.LFE52
 4771 0198 00000000 		.4byte	0
 4772 019c 00000000 		.4byte	0
 4773              		.section	.debug_line,"",%progbits
 4774              	.Ldebug_line0:
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 149


 4775 0000 CC040000 		.section	.debug_str,"MS",%progbits,1
 4775      02004D00 
 4775      00000201 
 4775      FB0E0D00 
 4775      01010101 
 4776              	.LASF61:
 4777 0000 72616D56 		.ascii	"ramVectorTable\000"
 4777      6563746F 
 4777      72546162 
 4777      6C6500
 4778              	.LASF10:
 4779 000f 75696E74 		.ascii	"uint16\000"
 4779      313600
 4780              	.LASF47:
 4781 0016 696E7453 		.ascii	"intState\000"
 4781      74617465 
 4781      00
 4782              	.LASF26:
 4783 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4783      73436C6B 
 4783      57726974 
 4783      65486663 
 4783      6C6B4469 
 4784              	.LASF108:
 4785 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 4785      73436C6B 
 4785      50756D70 
 4785      436F6E66 
 4785      696700
 4786              	.LASF60:
 4787 004b 6F6C6449 		.ascii	"oldIsr\000"
 4787      737200
 4788              	.LASF97:
 4789 0052 72657456 		.ascii	"retVal\000"
 4789      616C00
 4790              	.LASF46:
 4791 0059 43794469 		.ascii	"CyDisableInts\000"
 4791      7361626C 
 4791      65496E74 
 4791      7300
 4792              	.LASF112:
 4793 0067 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4793      43313120 
 4793      352E342E 
 4793      31203230 
 4793      31363036 
 4794 009a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4794      20726576 
 4794      6973696F 
 4794      6E203233 
 4794      37373135 
 4795 00cd 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4795      66756E63 
 4795      74696F6E 
 4795      2D736563 
 4795      74696F6E 
 4796              	.LASF7:
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 150


 4797 00f5 6C6F6E67 		.ascii	"long long unsigned int\000"
 4797      206C6F6E 
 4797      6720756E 
 4797      7369676E 
 4797      65642069 
 4798              	.LASF35:
 4799 010c 70617261 		.ascii	"parameters\000"
 4799      6D657465 
 4799      727300
 4800              	.LASF48:
 4801 0117 4379456E 		.ascii	"CyEnableInts\000"
 4801      61626C65 
 4801      496E7473 
 4801      00
 4802              	.LASF70:
 4803 0124 4379536F 		.ascii	"CySoftwareReset\000"
 4803      66747761 
 4803      72655265 
 4803      73657400 
 4804              	.LASF81:
 4805 0134 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4805      73546963 
 4805      6B456E61 
 4805      626C6549 
 4805      6E746572 
 4806              	.LASF52:
 4807 014d 4379496E 		.ascii	"CyIntGetState\000"
 4807      74476574 
 4807      53746174 
 4807      6500
 4808              	.LASF6:
 4809 015b 6C6F6E67 		.ascii	"long long int\000"
 4809      206C6F6E 
 4809      6720696E 
 4809      7400
 4810              	.LASF0:
 4811 0169 7369676E 		.ascii	"signed char\000"
 4811      65642063 
 4811      68617200 
 4812              	.LASF34:
 4813 0175 66726571 		.ascii	"freq\000"
 4813      00
 4814              	.LASF79:
 4815 017a 43794465 		.ascii	"CyDelayFreq\000"
 4815      6C617946 
 4815      72657100 
 4816              	.LASF24:
 4817 0186 696E7465 		.ascii	"interruptState\000"
 4817      72727570 
 4817      74537461 
 4817      746500
 4818              	.LASF86:
 4819 0195 43795379 		.ascii	"CySysTickGetReload\000"
 4819      73546963 
 4819      6B476574 
 4819      52656C6F 
 4819      616400
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 151


 4820              	.LASF4:
 4821 01a8 6C6F6E67 		.ascii	"long int\000"
 4821      20696E74 
 4821      00
 4822              	.LASF53:
 4823 01b1 4379496E 		.ascii	"CyIntDisable\000"
 4823      74446973 
 4823      61626C65 
 4823      00
 4824              	.LASF36:
 4825 01be 72656756 		.ascii	"regValues\000"
 4825      616C7565 
 4825      7300
 4826              	.LASF9:
 4827 01c8 75696E74 		.ascii	"uint8\000"
 4827      3800
 4828              	.LASF103:
 4829 01ce 63796465 		.ascii	"cydelayFreqKhz\000"
 4829      6C617946 
 4829      7265714B 
 4829      687A00
 4830              	.LASF29:
 4831 01dd 656E6162 		.ascii	"enable\000"
 4831      6C6500
 4832              	.LASF13:
 4833 01e4 646F7562 		.ascii	"double\000"
 4833      6C6500
 4834              	.LASF67:
 4835 01eb 73686966 		.ascii	"shift\000"
 4835      7400
 4836              	.LASF42:
 4837 01f1 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4837      734C7664 
 4837      436C6561 
 4837      72496E74 
 4837      65727275 
 4838              	.LASF11:
 4839 0208 75696E74 		.ascii	"uint32\000"
 4839      333200
 4840              	.LASF39:
 4841 020f 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 4841      73436C6B 
 4841      45636F52 
 4841      65616453 
 4841      74617475 
 4842              	.LASF49:
 4843 0225 6D61736B 		.ascii	"mask\000"
 4843      00
 4844              	.LASF38:
 4845 022a 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4845      73436C6B 
 4845      47657453 
 4845      7973636C 
 4845      6B536F75 
 4846              	.LASF69:
 4847 0242 4379496E 		.ascii	"CyIntGetPriority\000"
 4847      74476574 
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 152


 4847      5072696F 
 4847      72697479 
 4847      00
 4848              	.LASF105:
 4849 0253 63796465 		.ascii	"cydelay32kMs\000"
 4849      6C617933 
 4849      326B4D73 
 4849      00
 4850              	.LASF93:
 4851 0260 43795379 		.ascii	"CySysTickInit\000"
 4851      73546963 
 4851      6B496E69 
 4851      7400
 4852              	.LASF68:
 4853 026e 76616C75 		.ascii	"value\000"
 4853      6500
 4854              	.LASF89:
 4855 0274 636C6F63 		.ascii	"clockSource\000"
 4855      6B536F75 
 4855      72636500 
 4856              	.LASF99:
 4857 0280 43794765 		.ascii	"CyGetUniqueId\000"
 4857      74556E69 
 4857      71756549 
 4857      6400
 4858              	.LASF91:
 4859 028e 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4859      73546963 
 4859      6B476574 
 4859      436F756E 
 4859      74466C61 
 4860              	.LASF8:
 4861 02a4 756E7369 		.ascii	"unsigned int\000"
 4861      676E6564 
 4861      20696E74 
 4861      00
 4862              	.LASF92:
 4863 02b1 43795379 		.ascii	"CySysTickClear\000"
 4863      73546963 
 4863      6B436C65 
 4863      617200
 4864              	.LASF5:
 4865 02c0 6C6F6E67 		.ascii	"long unsigned int\000"
 4865      20756E73 
 4865      69676E65 
 4865      6420696E 
 4865      7400
 4866              	.LASF85:
 4867 02d2 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4867      734C7664 
 4867      47657449 
 4867      6E746572 
 4867      72757074 
 4868              	.LASF23:
 4869 02ed 43795379 		.ascii	"CySysClkImoStop\000"
 4869      73436C6B 
 4869      496D6F53 
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 153


 4869      746F7000 
 4870              	.LASF109:
 4871 02fd 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4871      74657243 
 4871      72697469 
 4871      63616C53 
 4871      65637469 
 4872              	.LASF54:
 4873 0314 4379496E 		.ascii	"CyIntSetPending\000"
 4873      74536574 
 4873      50656E64 
 4873      696E6700 
 4874              	.LASF98:
 4875 0324 43795379 		.ascii	"CySysTickGetCallback\000"
 4875      73546963 
 4875      6B476574 
 4875      43616C6C 
 4875      6261636B 
 4876              	.LASF43:
 4877 0339 43795379 		.ascii	"CySysGetResetReason\000"
 4877      73476574 
 4877      52657365 
 4877      74526561 
 4877      736F6E00 
 4878              	.LASF3:
 4879 034d 73686F72 		.ascii	"short unsigned int\000"
 4879      7420756E 
 4879      7369676E 
 4879      65642069 
 4879      6E7400
 4880              	.LASF88:
 4881 0360 43795379 		.ascii	"CySysTickSetClockSource\000"
 4881      73546963 
 4881      6B536574 
 4881      436C6F63 
 4881      6B536F75 
 4882              	.LASF63:
 4883 0378 4379496E 		.ascii	"CyIntSetVector\000"
 4883      74536574 
 4883      56656374 
 4883      6F7200
 4884              	.LASF51:
 4885 0387 6E756D62 		.ascii	"number\000"
 4885      657200
 4886              	.LASF66:
 4887 038e 7072696F 		.ascii	"priority\000"
 4887      72697479 
 4887      00
 4888              	.LASF33:
 4889 0397 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4889      73436C6B 
 4889      57726974 
 4889      65496D6F 
 4889      46726571 
 4890              	.LASF58:
 4891 03ac 4379496E 		.ascii	"CyIntSetSysVector\000"
 4891      74536574 
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 154


 4891      53797356 
 4891      6563746F 
 4891      7200
 4892              	.LASF27:
 4893 03be 43795379 		.ascii	"CySysEnablePumpClock\000"
 4893      73456E61 
 4893      626C6550 
 4893      756D7043 
 4893      6C6F636B 
 4894              	.LASF17:
 4895 03d3 72656733 		.ascii	"reg32\000"
 4895      3200
 4896              	.LASF94:
 4897 03d9 43795379 		.ascii	"CySysTickStart\000"
 4897      73546963 
 4897      6B537461 
 4897      727400
 4898              	.LASF45:
 4899 03e8 72657475 		.ascii	"returnStatus\000"
 4899      726E5374 
 4899      61747573 
 4899      00
 4900              	.LASF20:
 4901 03f5 73697A65 		.ascii	"sizetype\000"
 4901      74797065 
 4901      00
 4902              	.LASF106:
 4903 03fe 43795379 		.ascii	"CySysTickInitVar\000"
 4903      73546963 
 4903      6B496E69 
 4903      74566172 
 4903      00
 4904              	.LASF55:
 4905 040f 4379496E 		.ascii	"CyIntClearPending\000"
 4905      74436C65 
 4905      61725065 
 4905      6E64696E 
 4905      6700
 4906              	.LASF19:
 4907 0421 6C6F6E67 		.ascii	"long double\000"
 4907      20646F75 
 4907      626C6500 
 4908              	.LASF59:
 4909 042d 61646472 		.ascii	"address\000"
 4909      65737300 
 4910              	.LASF30:
 4911 0435 73797363 		.ascii	"sysclkSource\000"
 4911      6C6B536F 
 4911      75726365 
 4911      00
 4912              	.LASF96:
 4913 0442 66756E63 		.ascii	"function\000"
 4913      74696F6E 
 4913      00
 4914              	.LASF107:
 4915 044b 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4915      6F467265 
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 155


 4915      714D687A 
 4915      32526567 
 4915      00
 4916              	.LASF87:
 4917 045c 43795379 		.ascii	"CySysTickGetValue\000"
 4917      73546963 
 4917      6B476574 
 4917      56616C75 
 4917      6500
 4918              	.LASF102:
 4919 046e 63796465 		.ascii	"cydelayFreqHz\000"
 4919      6C617946 
 4919      72657148 
 4919      7A00
 4920              	.LASF65:
 4921 047c 4379496E 		.ascii	"CyIntSetPriority\000"
 4921      74536574 
 4921      5072696F 
 4921      72697479 
 4921      00
 4922              	.LASF12:
 4923 048d 666C6F61 		.ascii	"float\000"
 4923      7400
 4924              	.LASF110:
 4925 0493 43794578 		.ascii	"CyExitCriticalSection\000"
 4925      69744372 
 4925      69746963 
 4925      616C5365 
 4925      6374696F 
 4926              	.LASF77:
 4927 04a9 43795379 		.ascii	"CySysLvdEnable\000"
 4927      734C7664 
 4927      456E6162 
 4927      6C6500
 4928              	.LASF21:
 4929 04b8 63795379 		.ascii	"cySysTickCallback\000"
 4929      73546963 
 4929      6B43616C 
 4929      6C626163 
 4929      6B00
 4930              	.LASF64:
 4931 04ca 4379496E 		.ascii	"CyIntGetVector\000"
 4931      74476574 
 4931      56656374 
 4931      6F7200
 4932              	.LASF72:
 4933 04d9 6D696C6C 		.ascii	"milliseconds\000"
 4933      69736563 
 4933      6F6E6473 
 4933      00
 4934              	.LASF111:
 4935 04e6 43794465 		.ascii	"CyDelayCycles\000"
 4935      6C617943 
 4935      79636C65 
 4935      7300
 4936              	.LASF16:
 4937 04f4 72656738 		.ascii	"reg8\000"
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 156


 4937      00
 4938              	.LASF78:
 4939 04f9 74687265 		.ascii	"threshold\000"
 4939      73686F6C 
 4939      6400
 4940              	.LASF56:
 4941 0503 43794861 		.ascii	"CyHalt\000"
 4941      6C7400
 4942              	.LASF114:
 4943 050a 533A5C47 		.ascii	"S:\\Grader\\PSoC Creator\\projects\\BLE_bidirection"
 4943      72616465 
 4943      725C5053 
 4943      6F432043 
 4943      72656174 
 4944 0539 616C5F63 		.ascii	"al_communication\\BLE_bidirectional_communication\\"
 4944      6F6D6D75 
 4944      6E696361 
 4944      74696F6E 
 4944      5C424C45 
 4945 056a 424C455F 		.ascii	"BLE_custom_service_characteristics.cydsn\000"
 4945      63757374 
 4945      6F6D5F73 
 4945      65727669 
 4945      63655F63 
 4946              	.LASF1:
 4947 0593 756E7369 		.ascii	"unsigned char\000"
 4947      676E6564 
 4947      20636861 
 4947      7200
 4948              	.LASF2:
 4949 05a1 73686F72 		.ascii	"short int\000"
 4949      7420696E 
 4949      7400
 4950              	.LASF50:
 4951 05ab 4379496E 		.ascii	"CyIntEnable\000"
 4951      74456E61 
 4951      626C6500 
 4952              	.LASF62:
 4953 05b7 4379496E 		.ascii	"CyIntGetSysVector\000"
 4953      74476574 
 4953      53797356 
 4953      6563746F 
 4953      7200
 4954              	.LASF28:
 4955 05c9 636C6B53 		.ascii	"clkSelect\000"
 4955      656C6563 
 4955      7400
 4956              	.LASF75:
 4957 05d3 43795379 		.ascii	"CySysClkEcoStart\000"
 4957      73436C6B 
 4957      45636F53 
 4957      74617274 
 4957      00
 4958              	.LASF73:
 4959 05e4 43794465 		.ascii	"CyDelayUs\000"
 4959      6C617955 
 4959      7300
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 157


 4960              	.LASF44:
 4961 05ee 72656173 		.ascii	"reason\000"
 4961      6F6E00
 4962              	.LASF14:
 4963 05f5 63686172 		.ascii	"char\000"
 4963      00
 4964              	.LASF18:
 4965 05fa 63796973 		.ascii	"cyisraddress\000"
 4965      72616464 
 4965      72657373 
 4965      00
 4966              	.LASF82:
 4967 0607 43795379 		.ascii	"CySysTickEnable\000"
 4967      73546963 
 4967      6B456E61 
 4967      626C6500 
 4968              	.LASF31:
 4969 0617 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4969      73436C6B 
 4969      57726974 
 4969      65537973 
 4969      636C6B44 
 4970              	.LASF95:
 4971 062e 43795379 		.ascii	"CySysTickSetCallback\000"
 4971      73546963 
 4971      6B536574 
 4971      43616C6C 
 4971      6261636B 
 4972              	.LASF101:
 4973 0643 43795379 		.ascii	"CySysTickCallbacks\000"
 4973      73546963 
 4973      6B43616C 
 4973      6C626163 
 4973      6B7300
 4974              	.LASF100:
 4975 0656 756E6971 		.ascii	"uniqueId\000"
 4975      75654964 
 4975      00
 4976              	.LASF71:
 4977 065f 43794465 		.ascii	"CyDelay\000"
 4977      6C617900 
 4978              	.LASF90:
 4979 0667 43795379 		.ascii	"CySysTickGetClockSource\000"
 4979      73546963 
 4979      6B476574 
 4979      436C6F63 
 4979      6B536F75 
 4980              	.LASF83:
 4981 067f 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4981      73546963 
 4981      6B446973 
 4981      61626C65 
 4981      496E7465 
 4982              	.LASF41:
 4983 0699 43795379 		.ascii	"CySysLvdDisable\000"
 4983      734C7664 
 4983      44697361 
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 158


 4983      626C6500 
 4984              	.LASF104:
 4985 06a9 63796465 		.ascii	"cydelayFreqMhz\000"
 4985      6C617946 
 4985      7265714D 
 4985      687A00
 4986              	.LASF37:
 4987 06b8 43795379 		.ascii	"CySysClkEcoStop\000"
 4987      73436C6B 
 4987      45636F53 
 4987      746F7000 
 4988              	.LASF80:
 4989 06c8 43795379 		.ascii	"CySysTickStop\000"
 4989      73546963 
 4989      6B53746F 
 4989      7000
 4990              	.LASF76:
 4991 06d6 74696D65 		.ascii	"timeoutUs\000"
 4991      6F757455 
 4991      7300
 4992              	.LASF32:
 4993 06e0 64697669 		.ascii	"divider\000"
 4993      64657200 
 4994              	.LASF57:
 4995 06e8 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 4995      73436C6B 
 4995      57726974 
 4995      6545636F 
 4995      44697600 
 4996              	.LASF15:
 4997 06fc 63797374 		.ascii	"cystatus\000"
 4997      61747573 
 4997      00
 4998              	.LASF22:
 4999 0705 43795379 		.ascii	"CySysClkImoStart\000"
 4999      73436C6B 
 4999      496D6F53 
 4999      74617274 
 4999      00
 5000              	.LASF113:
 5001 0716 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5001      72617465 
 5001      645F536F 
 5001      75726365 
 5001      5C50536F 
 5002              	.LASF74:
 5003 0735 6D696372 		.ascii	"microseconds\000"
 5003      6F736563 
 5003      6F6E6473 
 5003      00
 5004              	.LASF25:
 5005 0742 746D7052 		.ascii	"tmpReg\000"
 5005      656700
 5006              	.LASF84:
 5007 0749 43795379 		.ascii	"CySysTickSetReload\000"
 5007      73546963 
 5007      6B536574 
ARM GAS  C:\Users\Nithish\AppData\Local\Temp\ccqj0yY4.s 			page 159


 5007      52656C6F 
 5007      616400
 5008              	.LASF115:
 5009 075c 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5009      73546963 
 5009      6B536572 
 5009      76696365 
 5009      43616C6C 
 5010              	.LASF40:
 5011 0776 72657475 		.ascii	"returnValue\000"
 5011      726E5661 
 5011      6C756500 
 5012              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
